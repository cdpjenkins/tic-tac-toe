if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2727";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5272__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__5271 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5271) : cljs.core.into_array.call(null, G__5271);
      }());
    };
    var G__5272 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__5273__i = 0, G__5273__a = new Array(arguments.length - 0);
        while (G__5273__i < G__5273__a.length) {
          G__5273__a[G__5273__i] = arguments[G__5273__i + 0];
          ++G__5273__i;
        }
        args = new cljs.core.IndexedSeq(G__5273__a, 0);
      }
      return G__5272__delegate.call(this, args);
    };
    G__5272.cljs$lang$maxFixedArity = 0;
    G__5272.cljs$lang$applyTo = function(arglist__5274) {
      var args = cljs.core.seq(arglist__5274);
      return G__5272__delegate(args);
    };
    G__5272.cljs$core$IFn$_invoke$arity$variadic = G__5272__delegate;
    return G__5272;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__5276 = x;
  return goog.isString(G__5276);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__5278 = x__$1;
    return goog.typeOf(G__5278);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3746__auto__ = ty;
    if (cljs.core.truth_(and__3746__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3746__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__5280 = obj;
    return goog.typeOf(G__5280);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__5282 = Symbol;
  return goog.typeOf(G__5282);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4645__auto___5284 = len;
  var i_5285 = 0;
  while (true) {
    if (i_5285 < n__4645__auto___5284) {
      new_arr[i_5285] = arr[i_5285];
      var G__5286 = i_5285 + 1;
      i_5285 = G__5286;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__5287 = i + 1;
      i = G__5287;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5296__delegate = function(array, i, idxs) {
      var G__5293 = aget;
      var G__5294 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__5295 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5293, G__5294, G__5295) : cljs.core.apply.call(null, G__5293, G__5294, G__5295);
    };
    var G__5296 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__5297__i = 0, G__5297__a = new Array(arguments.length - 2);
        while (G__5297__i < G__5297__a.length) {
          G__5297__a[G__5297__i] = arguments[G__5297__i + 2];
          ++G__5297__i;
        }
        idxs = new cljs.core.IndexedSeq(G__5297__a, 0);
      }
      return G__5296__delegate.call(this, array, i, idxs);
    };
    G__5296.cljs$lang$maxFixedArity = 2;
    G__5296.cljs$lang$applyTo = function(arglist__5298) {
      var array = cljs.core.first(arglist__5298);
      arglist__5298 = cljs.core.next(arglist__5298);
      var i = cljs.core.first(arglist__5298);
      var idxs = cljs.core.rest(arglist__5298);
      return G__5296__delegate(array, i, idxs);
    };
    G__5296.cljs$core$IFn$_invoke$arity$variadic = G__5296__delegate;
    return G__5296;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__5299 = null;
        if (arguments.length > 2) {
          var G__5300__i = 0, G__5300__a = new Array(arguments.length - 2);
          while (G__5300__i < G__5300__a.length) {
            G__5300__a[G__5300__i] = arguments[G__5300__i + 2];
            ++G__5300__i;
          }
          G__5299 = new cljs.core.IndexedSeq(G__5300__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__5299);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5309__delegate = function(array, idx, idx2, idxv) {
      var G__5305 = aset;
      var G__5306 = array[idx];
      var G__5307 = idx2;
      var G__5308 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5305, G__5306, G__5307, G__5308) : cljs.core.apply.call(null, G__5305, G__5306, G__5307, G__5308);
    };
    var G__5309 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__5310__i = 0, G__5310__a = new Array(arguments.length - 3);
        while (G__5310__i < G__5310__a.length) {
          G__5310__a[G__5310__i] = arguments[G__5310__i + 3];
          ++G__5310__i;
        }
        idxv = new cljs.core.IndexedSeq(G__5310__a, 0);
      }
      return G__5309__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5309.cljs$lang$maxFixedArity = 3;
    G__5309.cljs$lang$applyTo = function(arglist__5311) {
      var array = cljs.core.first(arglist__5311);
      arglist__5311 = cljs.core.next(arglist__5311);
      var idx = cljs.core.first(arglist__5311);
      arglist__5311 = cljs.core.next(arglist__5311);
      var idx2 = cljs.core.first(arglist__5311);
      var idxv = cljs.core.rest(arglist__5311);
      return G__5309__delegate(array, idx, idx2, idxv);
    };
    G__5309.cljs$core$IFn$_invoke$arity$variadic = G__5309__delegate;
    return G__5309;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__5312 = null;
        if (arguments.length > 3) {
          var G__5313__i = 0, G__5313__a = new Array(arguments.length - 3);
          while (G__5313__i < G__5313__a.length) {
            G__5313__a[G__5313__i] = arguments[G__5313__i + 3];
            ++G__5313__i;
          }
          G__5312 = new cljs.core.IndexedSeq(G__5313__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__5312);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__5319 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__5320 = [];
    var G__5321 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5319, G__5320, G__5321) : cljs.core.reduce.call(null, G__5319, G__5320, G__5321);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__5322__i = 0, G__5322__a = new Array(arguments.length - 2);
      while (G__5322__i < G__5322__a.length) {
        G__5322__a[G__5322__i] = arguments[G__5322__i + 2];
        ++G__5322__i;
      }
      args = new cljs.core.IndexedSeq(G__5322__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__5323) {
    var obj = cljs.core.first(arglist__5323);
    arglist__5323 = cljs.core.next(arglist__5323);
    var s = cljs.core.first(arglist__5323);
    var args = cljs.core.rest(arglist__5323);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj5325 = {};
  return obj5325;
}();
cljs.core.IFn = function() {
  var obj5327 = {};
  return obj5327;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5373 = x__4402__auto__;
          return goog.typeOf(G__5373);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5375 = x__4402__auto__;
          return goog.typeOf(G__5375);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5377 = x__4402__auto__;
          return goog.typeOf(G__5377);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5379 = x__4402__auto__;
          return goog.typeOf(G__5379);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5381 = x__4402__auto__;
          return goog.typeOf(G__5381);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5383 = x__4402__auto__;
          return goog.typeOf(G__5383);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5385 = x__4402__auto__;
          return goog.typeOf(G__5385);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5387 = x__4402__auto__;
          return goog.typeOf(G__5387);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5389 = x__4402__auto__;
          return goog.typeOf(G__5389);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5391 = x__4402__auto__;
          return goog.typeOf(G__5391);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5393 = x__4402__auto__;
          return goog.typeOf(G__5393);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5395 = x__4402__auto__;
          return goog.typeOf(G__5395);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5397 = x__4402__auto__;
          return goog.typeOf(G__5397);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5399 = x__4402__auto__;
          return goog.typeOf(G__5399);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5401 = x__4402__auto__;
          return goog.typeOf(G__5401);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5403 = x__4402__auto__;
          return goog.typeOf(G__5403);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5405 = x__4402__auto__;
          return goog.typeOf(G__5405);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5407 = x__4402__auto__;
          return goog.typeOf(G__5407);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5409 = x__4402__auto__;
          return goog.typeOf(G__5409);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5411 = x__4402__auto__;
          return goog.typeOf(G__5411);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5413 = x__4402__auto__;
          return goog.typeOf(G__5413);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3746__auto__ = this$;
      if (and__3746__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4402__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3758__auto__ = cljs.core._invoke[function() {
          var G__5415 = x__4402__auto__;
          return goog.typeOf(G__5415);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._invoke["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5417 = {};
  return obj5417;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3746__auto__ = value;
    if (and__3746__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4402__auto__ = value == null ? null : value;
    return function() {
      var or__3758__auto__ = cljs.core._clone[function() {
        var G__5421 = x__4402__auto__;
        return goog.typeOf(G__5421);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._clone["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5423 = {};
  return obj5423;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._count[function() {
        var G__5427 = x__4402__auto__;
        return goog.typeOf(G__5427);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._count["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5429 = {};
  return obj5429;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._empty[function() {
        var G__5433 = x__4402__auto__;
        return goog.typeOf(G__5433);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._empty["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5435 = {};
  return obj5435;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._conj[function() {
        var G__5439 = x__4402__auto__;
        return goog.typeOf(G__5439);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._conj["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5441 = {};
  return obj5441;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3746__auto__ = coll;
      if (and__3746__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4402__auto__ = coll == null ? null : coll;
      return function() {
        var or__3758__auto__ = cljs.core._nth[function() {
          var G__5447 = x__4402__auto__;
          return goog.typeOf(G__5447);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._nth["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3746__auto__ = coll;
      if (and__3746__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4402__auto__ = coll == null ? null : coll;
      return function() {
        var or__3758__auto__ = cljs.core._nth[function() {
          var G__5449 = x__4402__auto__;
          return goog.typeOf(G__5449);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._nth["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5451 = {};
  return obj5451;
}();
cljs.core.ISeq = function() {
  var obj5453 = {};
  return obj5453;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._first[function() {
        var G__5457 = x__4402__auto__;
        return goog.typeOf(G__5457);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._first["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._rest[function() {
        var G__5461 = x__4402__auto__;
        return goog.typeOf(G__5461);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._rest["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5463 = {};
  return obj5463;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._next[function() {
        var G__5467 = x__4402__auto__;
        return goog.typeOf(G__5467);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._next["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5469 = {};
  return obj5469;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3746__auto__ = o;
      if (and__3746__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4402__auto__ = o == null ? null : o;
      return function() {
        var or__3758__auto__ = cljs.core._lookup[function() {
          var G__5475 = x__4402__auto__;
          return goog.typeOf(G__5475);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._lookup["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3746__auto__ = o;
      if (and__3746__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4402__auto__ = o == null ? null : o;
      return function() {
        var or__3758__auto__ = cljs.core._lookup[function() {
          var G__5477 = x__4402__auto__;
          return goog.typeOf(G__5477);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._lookup["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5479 = {};
  return obj5479;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__5483 = x__4402__auto__;
        return goog.typeOf(G__5483);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._assoc[function() {
        var G__5487 = x__4402__auto__;
        return goog.typeOf(G__5487);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._assoc["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5489 = {};
  return obj5489;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._dissoc[function() {
        var G__5493 = x__4402__auto__;
        return goog.typeOf(G__5493);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._dissoc["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5495 = {};
  return obj5495;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._key[function() {
        var G__5499 = x__4402__auto__;
        return goog.typeOf(G__5499);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._key["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._val[function() {
        var G__5503 = x__4402__auto__;
        return goog.typeOf(G__5503);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._val["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5505 = {};
  return obj5505;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._disjoin[function() {
        var G__5509 = x__4402__auto__;
        return goog.typeOf(G__5509);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._disjoin["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5511 = {};
  return obj5511;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._peek[function() {
        var G__5515 = x__4402__auto__;
        return goog.typeOf(G__5515);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._peek["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._pop[function() {
        var G__5519 = x__4402__auto__;
        return goog.typeOf(G__5519);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._pop["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5521 = {};
  return obj5521;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._assoc_n[function() {
        var G__5525 = x__4402__auto__;
        return goog.typeOf(G__5525);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5527 = {};
  return obj5527;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._deref[function() {
        var G__5531 = x__4402__auto__;
        return goog.typeOf(G__5531);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._deref["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5533 = {};
  return obj5533;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._deref_with_timeout[function() {
        var G__5537 = x__4402__auto__;
        return goog.typeOf(G__5537);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5539 = {};
  return obj5539;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._meta[function() {
        var G__5543 = x__4402__auto__;
        return goog.typeOf(G__5543);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._meta["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5545 = {};
  return obj5545;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._with_meta[function() {
        var G__5549 = x__4402__auto__;
        return goog.typeOf(G__5549);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._with_meta["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5551 = {};
  return obj5551;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3746__auto__ = coll;
      if (and__3746__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4402__auto__ = coll == null ? null : coll;
      return function() {
        var or__3758__auto__ = cljs.core._reduce[function() {
          var G__5557 = x__4402__auto__;
          return goog.typeOf(G__5557);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._reduce["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3746__auto__ = coll;
      if (and__3746__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4402__auto__ = coll == null ? null : coll;
      return function() {
        var or__3758__auto__ = cljs.core._reduce[function() {
          var G__5559 = x__4402__auto__;
          return goog.typeOf(G__5559);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._reduce["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5561 = {};
  return obj5561;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._kv_reduce[function() {
        var G__5565 = x__4402__auto__;
        return goog.typeOf(G__5565);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5567 = {};
  return obj5567;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._equiv[function() {
        var G__5571 = x__4402__auto__;
        return goog.typeOf(G__5571);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._equiv["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5573 = {};
  return obj5573;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._hash[function() {
        var G__5577 = x__4402__auto__;
        return goog.typeOf(G__5577);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._hash["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5579 = {};
  return obj5579;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._seq[function() {
        var G__5583 = x__4402__auto__;
        return goog.typeOf(G__5583);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._seq["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5585 = {};
  return obj5585;
}();
cljs.core.IList = function() {
  var obj5587 = {};
  return obj5587;
}();
cljs.core.IRecord = function() {
  var obj5589 = {};
  return obj5589;
}();
cljs.core.IReversible = function() {
  var obj5591 = {};
  return obj5591;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._rseq[function() {
        var G__5595 = x__4402__auto__;
        return goog.typeOf(G__5595);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._rseq["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5597 = {};
  return obj5597;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._sorted_seq[function() {
        var G__5601 = x__4402__auto__;
        return goog.typeOf(G__5601);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._sorted_seq_from[function() {
        var G__5605 = x__4402__auto__;
        return goog.typeOf(G__5605);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._entry_key[function() {
        var G__5609 = x__4402__auto__;
        return goog.typeOf(G__5609);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._entry_key["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._comparator[function() {
        var G__5613 = x__4402__auto__;
        return goog.typeOf(G__5613);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._comparator["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5615 = {};
  return obj5615;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3746__auto__ = writer;
    if (and__3746__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4402__auto__ = writer == null ? null : writer;
    return function() {
      var or__3758__auto__ = cljs.core._write[function() {
        var G__5619 = x__4402__auto__;
        return goog.typeOf(G__5619);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._write["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3746__auto__ = writer;
    if (and__3746__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4402__auto__ = writer == null ? null : writer;
    return function() {
      var or__3758__auto__ = cljs.core._flush[function() {
        var G__5623 = x__4402__auto__;
        return goog.typeOf(G__5623);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._flush["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5625 = {};
  return obj5625;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._pr_writer[function() {
        var G__5629 = x__4402__auto__;
        return goog.typeOf(G__5629);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5631 = {};
  return obj5631;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3746__auto__ = d;
    if (and__3746__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4402__auto__ = d == null ? null : d;
    return function() {
      var or__3758__auto__ = cljs.core._realized_QMARK_[function() {
        var G__5635 = x__4402__auto__;
        return goog.typeOf(G__5635);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5637 = {};
  return obj5637;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3746__auto__ = this$;
    if (and__3746__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4402__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3758__auto__ = cljs.core._notify_watches[function() {
        var G__5641 = x__4402__auto__;
        return goog.typeOf(G__5641);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3746__auto__ = this$;
    if (and__3746__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4402__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3758__auto__ = cljs.core._add_watch[function() {
        var G__5645 = x__4402__auto__;
        return goog.typeOf(G__5645);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._add_watch["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3746__auto__ = this$;
    if (and__3746__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4402__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3758__auto__ = cljs.core._remove_watch[function() {
        var G__5649 = x__4402__auto__;
        return goog.typeOf(G__5649);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5651 = {};
  return obj5651;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._as_transient[function() {
        var G__5655 = x__4402__auto__;
        return goog.typeOf(G__5655);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._as_transient["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5657 = {};
  return obj5657;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._conj_BANG_[function() {
        var G__5661 = x__4402__auto__;
        return goog.typeOf(G__5661);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._persistent_BANG_[function() {
        var G__5665 = x__4402__auto__;
        return goog.typeOf(G__5665);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5667 = {};
  return obj5667;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._assoc_BANG_[function() {
        var G__5671 = x__4402__auto__;
        return goog.typeOf(G__5671);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5673 = {};
  return obj5673;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__5677 = x__4402__auto__;
        return goog.typeOf(G__5677);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5679 = {};
  return obj5679;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__5683 = x__4402__auto__;
        return goog.typeOf(G__5683);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._pop_BANG_[function() {
        var G__5687 = x__4402__auto__;
        return goog.typeOf(G__5687);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5689 = {};
  return obj5689;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3746__auto__ = tcoll;
    if (and__3746__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4402__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3758__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__5693 = x__4402__auto__;
        return goog.typeOf(G__5693);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5695 = {};
  return obj5695;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3746__auto__ = x;
    if (and__3746__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4402__auto__ = x == null ? null : x;
    return function() {
      var or__3758__auto__ = cljs.core._compare[function() {
        var G__5699 = x__4402__auto__;
        return goog.typeOf(G__5699);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._compare["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5701 = {};
  return obj5701;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._drop_first[function() {
        var G__5705 = x__4402__auto__;
        return goog.typeOf(G__5705);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._drop_first["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5707 = {};
  return obj5707;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._chunked_first[function() {
        var G__5711 = x__4402__auto__;
        return goog.typeOf(G__5711);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._chunked_rest[function() {
        var G__5715 = x__4402__auto__;
        return goog.typeOf(G__5715);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5717 = {};
  return obj5717;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._chunked_next[function() {
        var G__5721 = x__4402__auto__;
        return goog.typeOf(G__5721);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5723 = {};
  return obj5723;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3746__auto__ = x;
    if (and__3746__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4402__auto__ = x == null ? null : x;
    return function() {
      var or__3758__auto__ = cljs.core._name[function() {
        var G__5727 = x__4402__auto__;
        return goog.typeOf(G__5727);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._name["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3746__auto__ = x;
    if (and__3746__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4402__auto__ = x == null ? null : x;
    return function() {
      var or__3758__auto__ = cljs.core._namespace[function() {
        var G__5731 = x__4402__auto__;
        return goog.typeOf(G__5731);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._namespace["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5733 = {};
  return obj5733;
}();
cljs.core.IReset = function() {
  var obj5735 = {};
  return obj5735;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._reset_BANG_[function() {
        var G__5739 = x__4402__auto__;
        return goog.typeOf(G__5739);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5741 = {};
  return obj5741;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3746__auto__ = o;
      if (and__3746__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4402__auto__ = o == null ? null : o;
      return function() {
        var or__3758__auto__ = cljs.core._swap_BANG_[function() {
          var G__5751 = x__4402__auto__;
          return goog.typeOf(G__5751);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3746__auto__ = o;
      if (and__3746__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4402__auto__ = o == null ? null : o;
      return function() {
        var or__3758__auto__ = cljs.core._swap_BANG_[function() {
          var G__5753 = x__4402__auto__;
          return goog.typeOf(G__5753);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3746__auto__ = o;
      if (and__3746__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4402__auto__ = o == null ? null : o;
      return function() {
        var or__3758__auto__ = cljs.core._swap_BANG_[function() {
          var G__5755 = x__4402__auto__;
          return goog.typeOf(G__5755);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3746__auto__ = o;
      if (and__3746__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3746__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4402__auto__ = o == null ? null : o;
      return function() {
        var or__3758__auto__ = cljs.core._swap_BANG_[function() {
          var G__5757 = x__4402__auto__;
          return goog.typeOf(G__5757);
        }()];
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3758__auto____$1) {
            return or__3758__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj5759 = {};
  return obj5759;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3746__auto__ = o;
    if (and__3746__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4402__auto__ = o == null ? null : o;
    return function() {
      var or__3758__auto__ = cljs.core._vreset_BANG_[function() {
        var G__5763 = x__4402__auto__;
        return goog.typeOf(G__5763);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj5765 = {};
  return obj5765;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3746__auto__ = coll;
    if (and__3746__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4402__auto__ = coll == null ? null : coll;
    return function() {
      var or__3758__auto__ = cljs.core._iterator[function() {
        var G__5769 = x__4402__auto__;
        return goog.typeOf(G__5769);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._iterator["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__5772 = 4294967295;
  var G__5773 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5772, G__5773) : Math.imul.call(null, G__5772, G__5773);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__5776 = a;
    var G__5777 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5776, G__5777) : Math.imul.call(null, G__5776, G__5777);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5778 = i + 2;
        var G__5779 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5778;
        h1 = G__5779;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5781 = {};
  return obj5781;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5782 = i + 1;
          var G__5783 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__5782;
          hash = G__5783;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5787 = {};
      return obj5787;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5790 = o;
    if (G__5790) {
      var bit__4432__auto__ = G__5790.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4432__auto__ || G__5790.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__5791 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5791) : Math.floor.call(null, G__5791);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = cljs.core.not(a.ns);
      if (and__3746__auto__) {
        return b.ns;
      } else {
        return and__3746__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__5798 = a.ns;
            var G__5799 = b.ns;
            return goog.array.defaultCompare(G__5798, G__5799);
          }();
          if (0 === nsc) {
            var G__5800 = a.name;
            var G__5801 = b.name;
            return goog.array.defaultCompare(G__5800, G__5801);
          } else {
            return nsc;
          }
        }
      } else {
        var G__5802 = a.name;
        var G__5803 = b.name;
        return goog.array.defaultCompare(G__5802, G__5803);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4179__auto__ = self__._hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5805 = null;
  var G__5805__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__5805__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__5805 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5805__2.call(this, self__, coll);
      case 3:
        return G__5805__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5805.cljs$core$IFn$_invoke$arity$2 = G__5805__2;
  G__5805.cljs$core$IFn$_invoke$arity$3 = G__5805__3;
  return G__5805;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5804) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5804)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__5853 = null;
  var G__5853__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__5853__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__5853__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__5853__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__5853__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__5853__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__5853__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__5853__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__5853__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__5853__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5853__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5853__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5853__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5853__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5853__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5853__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5853__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5853__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5853__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5853__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5853__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5853__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5809 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__5810 = a;
    var G__5811 = b;
    var G__5812 = c;
    var G__5813 = d;
    var G__5814 = e;
    var G__5815 = f;
    var G__5816 = g;
    var G__5817 = h;
    var G__5818 = i;
    var G__5819 = j;
    var G__5820 = k;
    var G__5821 = l;
    var G__5822 = m;
    var G__5823 = n;
    var G__5824 = o;
    var G__5825 = p;
    var G__5826 = q;
    var G__5827 = r;
    var G__5828 = s;
    var G__5829 = t;
    var G__5830 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5809, G__5810, G__5811, G__5812, G__5813, G__5814, G__5815, G__5816, G__5817, G__5818, G__5819, G__5820, G__5821, G__5822, G__5823, G__5824, G__5825, G__5826, G__5827, G__5828, G__5829, G__5830) : cljs.core.apply.call(null, G__5809, G__5810, G__5811, G__5812, G__5813, G__5814, G__5815, G__5816, G__5817, G__5818, G__5819, G__5820, G__5821, G__5822, G__5823, G__5824, G__5825, G__5826, G__5827, 
    G__5828, G__5829, G__5830);
  };
  G__5853 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5853__1.call(this, self__);
      case 2:
        return G__5853__2.call(this, self__, a);
      case 3:
        return G__5853__3.call(this, self__, a, b);
      case 4:
        return G__5853__4.call(this, self__, a, b, c);
      case 5:
        return G__5853__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5853__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5853__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5853__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5853__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5853__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5853__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5853__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5853__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5853__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5853__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5853__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5853__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5853__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5853__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5853__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5853__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5853__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5853.cljs$core$IFn$_invoke$arity$1 = G__5853__1;
  G__5853.cljs$core$IFn$_invoke$arity$2 = G__5853__2;
  G__5853.cljs$core$IFn$_invoke$arity$3 = G__5853__3;
  G__5853.cljs$core$IFn$_invoke$arity$4 = G__5853__4;
  G__5853.cljs$core$IFn$_invoke$arity$5 = G__5853__5;
  G__5853.cljs$core$IFn$_invoke$arity$6 = G__5853__6;
  G__5853.cljs$core$IFn$_invoke$arity$7 = G__5853__7;
  G__5853.cljs$core$IFn$_invoke$arity$8 = G__5853__8;
  G__5853.cljs$core$IFn$_invoke$arity$9 = G__5853__9;
  G__5853.cljs$core$IFn$_invoke$arity$10 = G__5853__10;
  G__5853.cljs$core$IFn$_invoke$arity$11 = G__5853__11;
  G__5853.cljs$core$IFn$_invoke$arity$12 = G__5853__12;
  G__5853.cljs$core$IFn$_invoke$arity$13 = G__5853__13;
  G__5853.cljs$core$IFn$_invoke$arity$14 = G__5853__14;
  G__5853.cljs$core$IFn$_invoke$arity$15 = G__5853__15;
  G__5853.cljs$core$IFn$_invoke$arity$16 = G__5853__16;
  G__5853.cljs$core$IFn$_invoke$arity$17 = G__5853__17;
  G__5853.cljs$core$IFn$_invoke$arity$18 = G__5853__18;
  G__5853.cljs$core$IFn$_invoke$arity$19 = G__5853__19;
  G__5853.cljs$core$IFn$_invoke$arity$20 = G__5853__20;
  G__5853.cljs$core$IFn$_invoke$arity$21 = G__5853__21;
  G__5853.cljs$core$IFn$_invoke$arity$22 = G__5853__22;
  return G__5853;
}();
cljs.core.Var.prototype.apply = function(self__, args5808) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5808)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__5831 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__5832 = a;
  var G__5833 = b;
  var G__5834 = c;
  var G__5835 = d;
  var G__5836 = e;
  var G__5837 = f;
  var G__5838 = g;
  var G__5839 = h;
  var G__5840 = i;
  var G__5841 = j;
  var G__5842 = k;
  var G__5843 = l;
  var G__5844 = m;
  var G__5845 = n;
  var G__5846 = o;
  var G__5847 = p;
  var G__5848 = q;
  var G__5849 = r;
  var G__5850 = s;
  var G__5851 = t;
  var G__5852 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5831, G__5832, G__5833, G__5834, G__5835, G__5836, G__5837, G__5838, G__5839, G__5840, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846, G__5847, G__5848, G__5849, G__5850, G__5851, G__5852) : cljs.core.apply.call(null, G__5831, G__5832, G__5833, G__5834, G__5835, G__5836, G__5837, G__5838, G__5839, G__5840, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846, G__5847, G__5848, G__5849, 
  G__5850, G__5851, G__5852);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__5855 = x;
  if (G__5855) {
    var bit__4439__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3758__auto__ = bit__4439__auto__;
      if (cljs.core.truth_(or__3758__auto__)) {
        return or__3758__auto__;
      } else {
        return G__5855.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5855.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5855);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5855);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5857 = value;
  if (G__5857) {
    var bit__4439__auto__ = G__5857.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4439__auto__ || G__5857.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5857.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5857);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5857);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5859 = coll;
      if (G__5859) {
        var bit__4432__auto__ = G__5859.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4432__auto__ || G__5859.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5861 = coll;
      if (G__5861) {
        var bit__4432__auto__ = G__5861.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4432__auto__ || G__5861.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5863 = coll;
      if (G__5863) {
        var bit__4432__auto__ = G__5863.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4432__auto__ || G__5863.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5865 = coll;
      if (G__5865) {
        var bit__4432__auto__ = G__5865.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4432__auto__ || G__5865.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5870__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__5871 = y;
            var G__5872 = cljs.core.first(more);
            var G__5873 = cljs.core.next(more);
            x = G__5871;
            y = G__5872;
            more = G__5873;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5870 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__5874__i = 0, G__5874__a = new Array(arguments.length - 2);
        while (G__5874__i < G__5874__a.length) {
          G__5874__a[G__5874__i] = arguments[G__5874__i + 2];
          ++G__5874__i;
        }
        more = new cljs.core.IndexedSeq(G__5874__a, 0);
      }
      return G__5870__delegate.call(this, x, y, more);
    };
    G__5870.cljs$lang$maxFixedArity = 2;
    G__5870.cljs$lang$applyTo = function(arglist__5875) {
      var x = cljs.core.first(arglist__5875);
      arglist__5875 = cljs.core.next(arglist__5875);
      var y = cljs.core.first(arglist__5875);
      var more = cljs.core.rest(arglist__5875);
      return G__5870__delegate(x, y, more);
    };
    G__5870.cljs$core$IFn$_invoke$arity$variadic = G__5870__delegate;
    return G__5870;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__5876 = null;
        if (arguments.length > 2) {
          var G__5877__i = 0, G__5877__a = new Array(arguments.length - 2);
          while (G__5877__i < G__5877__a.length) {
            G__5877__a[G__5877__i] = arguments[G__5877__i + 2];
            ++G__5877__i;
          }
          G__5876 = new cljs.core.IndexedSeq(G__5877__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__5876);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__5878 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5878) : cljs.core.es6_iterator_seq.call(null, G__5878);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5879 = n + 1;
      var G__5880 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5881 = cljs.core.next(coll__$1);
      n = G__5879;
      hash_code = G__5880;
      coll__$1 = G__5881;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5882 = n + 1;
      var G__5883 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5884 = cljs.core.next(coll__$1);
      n = G__5882;
      hash_code = G__5883;
      coll__$1 = G__5884;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__5885 = o;
  return goog.getUid(G__5885);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__5887 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5887) : cljs.core.deref.call(null, G__5887);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5894 = val;
            var G__5895 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5894, G__5895) : f.call(null, G__5894, G__5895);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5900 = nval;
            var G__5901 = n + 1;
            val = G__5900;
            n = G__5901;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5896 = val__$1;
          var G__5897 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5896, G__5897) : f.call(null, G__5896, G__5897);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5902 = nval;
          var G__5903 = n + 1;
          val__$1 = G__5902;
          n = G__5903;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5898 = val__$1;
          var G__5899 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5898, G__5899) : f.call(null, G__5898, G__5899);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5904 = nval;
          var G__5905 = n + 1;
          val__$1 = G__5904;
          n = G__5905;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5912 = val;
            var G__5913 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5912, G__5913) : f.call(null, G__5912, G__5913);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5918 = nval;
            var G__5919 = n + 1;
            val = G__5918;
            n = G__5919;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5914 = val__$1;
          var G__5915 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5914, G__5915) : f.call(null, G__5914, G__5915);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5920 = nval;
          var G__5921 = n + 1;
          val__$1 = G__5920;
          n = G__5921;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5916 = val__$1;
          var G__5917 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5916, G__5917) : f.call(null, G__5916, G__5917);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5922 = nval;
          var G__5923 = n + 1;
          val__$1 = G__5922;
          n = G__5923;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5925 = x;
  if (G__5925) {
    var bit__4439__auto__ = G__5925.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4439__auto__ || G__5925.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5925.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5925);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5925);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5927 = x;
  if (G__5927) {
    var bit__4439__auto__ = G__5927.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4439__auto__ || G__5927.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5927.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5927);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5927);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5928 = coll__$1;
  var G__5929 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5928, G__5929) : cljs.core.equiv_sequential.call(null, G__5928, G__5929);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5930 = o;
  var G__5931 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5930, G__5931) : cljs.core.cons.call(null, G__5930, G__5931);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5934 = coll__$1;
  var G__5935 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5934, G__5935) : cljs.core.equiv_sequential.call(null, G__5934, G__5935);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__5936 = cljs.core.List.EMPTY;
  var G__5937 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5936, G__5937) : cljs.core.with_meta.call(null, G__5936, G__5937);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__5938 = f;
  var G__5939 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5938, G__5939) : cljs.core.seq_reduce.call(null, G__5938, G__5939);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__5940 = f;
  var G__5941 = start;
  var G__5942 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5940, G__5941, G__5942) : cljs.core.seq_reduce.call(null, G__5940, G__5941, G__5942);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5943 = o;
  var G__5944 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5943, G__5944) : cljs.core.cons.call(null, G__5943, G__5944);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__5945 = sn;
      s = G__5945;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5950__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5951 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__5952 = cljs.core.first(xs);
          var G__5953 = cljs.core.next(xs);
          coll = G__5951;
          x = G__5952;
          xs = G__5953;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__5950 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__5954__i = 0, G__5954__a = new Array(arguments.length - 2);
        while (G__5954__i < G__5954__a.length) {
          G__5954__a[G__5954__i] = arguments[G__5954__i + 2];
          ++G__5954__i;
        }
        xs = new cljs.core.IndexedSeq(G__5954__a, 0);
      }
      return G__5950__delegate.call(this, coll, x, xs);
    };
    G__5950.cljs$lang$maxFixedArity = 2;
    G__5950.cljs$lang$applyTo = function(arglist__5955) {
      var coll = cljs.core.first(arglist__5955);
      arglist__5955 = cljs.core.next(arglist__5955);
      var x = cljs.core.first(arglist__5955);
      var xs = cljs.core.rest(arglist__5955);
      return G__5950__delegate(coll, x, xs);
    };
    G__5950.cljs$core$IFn$_invoke$arity$variadic = G__5950__delegate;
    return G__5950;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__5956 = null;
        if (arguments.length > 2) {
          var G__5957__i = 0, G__5957__a = new Array(arguments.length - 2);
          while (G__5957__i < G__5957__a.length) {
            G__5957__a[G__5957__i] = arguments[G__5957__i + 2];
            ++G__5957__i;
          }
          G__5956 = new cljs.core.IndexedSeq(G__5957__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__5956);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__5958 = cljs.core.next(s);
      var G__5959 = acc + 1;
      s = G__5958;
      acc = G__5959;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5961 = coll;
      if (G__5961) {
        var bit__4432__auto__ = G__5961.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4432__auto__ || G__5961.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5962 = cljs.core.next(coll);
              var G__5963 = n - 1;
              coll = G__5962;
              n = G__5963;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5964 = cljs.core.next(coll);
              var G__5965 = n - 1;
              var G__5966 = not_found;
              coll = G__5964;
              n = G__5965;
              not_found = G__5966;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__5971 = coll;
          if (G__5971) {
            var bit__4432__auto__ = G__5971.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4432__auto__ || G__5971.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5972 = coll;
                  if (G__5972) {
                    var bit__4439__auto__ = G__5972.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4439__auto__ || G__5972.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5972.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5972);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5972);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__5973 = coll;
          if (G__5973) {
            var bit__4432__auto__ = G__5973.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4432__auto__ || G__5973.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5974 = coll;
                  if (G__5974) {
                    var bit__4439__auto__ = G__5974.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4439__auto__ || G__5974.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5974.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5974);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5974);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__5975 = n__$1 - 1;
      var G__5976 = cljs.core.rest(xs);
      n__$1 = G__5975;
      xs = G__5976;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5979 = o;
        if (G__5979) {
          var bit__4432__auto__ = G__5979.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4432__auto__ || G__5979.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5980 = o;
        if (G__5980) {
          var bit__4432__auto__ = G__5980.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4432__auto__ || G__5980.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__5984__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5985 = ret;
          var G__5986 = cljs.core.first(kvs);
          var G__5987 = cljs.core.second(kvs);
          var G__5988 = cljs.core.nnext(kvs);
          coll = G__5985;
          k = G__5986;
          v = G__5987;
          kvs = G__5988;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5984 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__5989__i = 0, G__5989__a = new Array(arguments.length - 3);
        while (G__5989__i < G__5989__a.length) {
          G__5989__a[G__5989__i] = arguments[G__5989__i + 3];
          ++G__5989__i;
        }
        kvs = new cljs.core.IndexedSeq(G__5989__a, 0);
      }
      return G__5984__delegate.call(this, coll, k, v, kvs);
    };
    G__5984.cljs$lang$maxFixedArity = 3;
    G__5984.cljs$lang$applyTo = function(arglist__5990) {
      var coll = cljs.core.first(arglist__5990);
      arglist__5990 = cljs.core.next(arglist__5990);
      var k = cljs.core.first(arglist__5990);
      arglist__5990 = cljs.core.next(arglist__5990);
      var v = cljs.core.first(arglist__5990);
      var kvs = cljs.core.rest(arglist__5990);
      return G__5984__delegate(coll, k, v, kvs);
    };
    G__5984.cljs$core$IFn$_invoke$arity$variadic = G__5984__delegate;
    return G__5984;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__5991 = null;
        if (arguments.length > 3) {
          var G__5992__i = 0, G__5992__a = new Array(arguments.length - 3);
          while (G__5992__i < G__5992__a.length) {
            G__5992__a[G__5992__i] = arguments[G__5992__i + 3];
            ++G__5992__i;
          }
          G__5991 = new cljs.core.IndexedSeq(G__5992__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__5991);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__5995__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5996 = ret;
            var G__5997 = cljs.core.first(ks);
            var G__5998 = cljs.core.next(ks);
            coll = G__5996;
            k = G__5997;
            ks = G__5998;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5995 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__5999__i = 0, G__5999__a = new Array(arguments.length - 2);
        while (G__5999__i < G__5999__a.length) {
          G__5999__a[G__5999__i] = arguments[G__5999__i + 2];
          ++G__5999__i;
        }
        ks = new cljs.core.IndexedSeq(G__5999__a, 0);
      }
      return G__5995__delegate.call(this, coll, k, ks);
    };
    G__5995.cljs$lang$maxFixedArity = 2;
    G__5995.cljs$lang$applyTo = function(arglist__6000) {
      var coll = cljs.core.first(arglist__6000);
      arglist__6000 = cljs.core.next(arglist__6000);
      var k = cljs.core.first(arglist__6000);
      var ks = cljs.core.rest(arglist__6000);
      return G__5995__delegate(coll, k, ks);
    };
    G__5995.cljs$core$IFn$_invoke$arity$variadic = G__5995__delegate;
    return G__5995;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__6001 = null;
        if (arguments.length > 2) {
          var G__6002__i = 0, G__6002__a = new Array(arguments.length - 2);
          while (G__6002__i < G__6002__a.length) {
            G__6002__a[G__6002__i] = arguments[G__6002__i + 2];
            ++G__6002__i;
          }
          G__6001 = new cljs.core.IndexedSeq(G__6002__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6001);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3758__auto__ = function() {
    var G__6007 = f;
    return goog.isFunction(G__6007);
  }();
  if (cljs.core.truth_(or__3758__auto__)) {
    return or__3758__auto__;
  } else {
    var G__6008 = f;
    if (G__6008) {
      var bit__4439__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3758__auto____$1 = bit__4439__auto__;
        if (cljs.core.truth_(or__3758__auto____$1)) {
          return or__3758__auto____$1;
        } else {
          return G__6008.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6008.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__6008);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__6008);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6474 = null;
  var G__6474__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6474__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6010 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6010) : self__.afn.call(null, G__6010);
  };
  var G__6474__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6011 = a;
    var G__6012 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6011, G__6012) : self__.afn.call(null, G__6011, G__6012);
  };
  var G__6474__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6013 = a;
    var G__6014 = b;
    var G__6015 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6013, G__6014, G__6015) : self__.afn.call(null, G__6013, G__6014, G__6015);
  };
  var G__6474__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6016 = a;
    var G__6017 = b;
    var G__6018 = c;
    var G__6019 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6016, G__6017, G__6018, G__6019) : self__.afn.call(null, G__6016, G__6017, G__6018, G__6019);
  };
  var G__6474__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6020 = a;
    var G__6021 = b;
    var G__6022 = c;
    var G__6023 = d;
    var G__6024 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6020, G__6021, G__6022, G__6023, G__6024) : self__.afn.call(null, G__6020, G__6021, G__6022, G__6023, G__6024);
  };
  var G__6474__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6025 = a;
    var G__6026 = b;
    var G__6027 = c;
    var G__6028 = d;
    var G__6029 = e;
    var G__6030 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6025, G__6026, G__6027, G__6028, G__6029, G__6030) : self__.afn.call(null, G__6025, G__6026, G__6027, G__6028, G__6029, G__6030);
  };
  var G__6474__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6031 = a;
    var G__6032 = b;
    var G__6033 = c;
    var G__6034 = d;
    var G__6035 = e;
    var G__6036 = f;
    var G__6037 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6031, G__6032, G__6033, G__6034, G__6035, G__6036, G__6037) : self__.afn.call(null, G__6031, G__6032, G__6033, G__6034, G__6035, G__6036, G__6037);
  };
  var G__6474__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6038 = a;
    var G__6039 = b;
    var G__6040 = c;
    var G__6041 = d;
    var G__6042 = e;
    var G__6043 = f;
    var G__6044 = g;
    var G__6045 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044, G__6045) : self__.afn.call(null, G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044, G__6045);
  };
  var G__6474__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6046 = a;
    var G__6047 = b;
    var G__6048 = c;
    var G__6049 = d;
    var G__6050 = e;
    var G__6051 = f;
    var G__6052 = g;
    var G__6053 = h;
    var G__6054 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6046, G__6047, G__6048, G__6049, G__6050, G__6051, G__6052, G__6053, G__6054) : self__.afn.call(null, G__6046, G__6047, G__6048, G__6049, G__6050, G__6051, G__6052, G__6053, G__6054);
  };
  var G__6474__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6055 = a;
    var G__6056 = b;
    var G__6057 = c;
    var G__6058 = d;
    var G__6059 = e;
    var G__6060 = f;
    var G__6061 = g;
    var G__6062 = h;
    var G__6063 = i;
    var G__6064 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6055, G__6056, G__6057, G__6058, G__6059, G__6060, G__6061, G__6062, G__6063, G__6064) : self__.afn.call(null, G__6055, G__6056, G__6057, G__6058, G__6059, G__6060, G__6061, G__6062, G__6063, G__6064);
  };
  var G__6474__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6065 = a;
    var G__6066 = b;
    var G__6067 = c;
    var G__6068 = d;
    var G__6069 = e;
    var G__6070 = f;
    var G__6071 = g;
    var G__6072 = h;
    var G__6073 = i;
    var G__6074 = j;
    var G__6075 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6065, G__6066, G__6067, G__6068, G__6069, G__6070, G__6071, G__6072, G__6073, G__6074, G__6075) : self__.afn.call(null, G__6065, G__6066, G__6067, G__6068, G__6069, G__6070, G__6071, G__6072, G__6073, G__6074, G__6075);
  };
  var G__6474__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6076 = a;
    var G__6077 = b;
    var G__6078 = c;
    var G__6079 = d;
    var G__6080 = e;
    var G__6081 = f;
    var G__6082 = g;
    var G__6083 = h;
    var G__6084 = i;
    var G__6085 = j;
    var G__6086 = k;
    var G__6087 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6076, G__6077, G__6078, G__6079, G__6080, G__6081, G__6082, G__6083, G__6084, G__6085, G__6086, G__6087) : self__.afn.call(null, G__6076, G__6077, G__6078, G__6079, G__6080, G__6081, G__6082, G__6083, G__6084, G__6085, G__6086, G__6087);
  };
  var G__6474__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6088 = a;
    var G__6089 = b;
    var G__6090 = c;
    var G__6091 = d;
    var G__6092 = e;
    var G__6093 = f;
    var G__6094 = g;
    var G__6095 = h;
    var G__6096 = i;
    var G__6097 = j;
    var G__6098 = k;
    var G__6099 = l;
    var G__6100 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6088, G__6089, G__6090, G__6091, G__6092, G__6093, G__6094, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100) : self__.afn.call(null, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093, G__6094, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100);
  };
  var G__6474__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6101 = a;
    var G__6102 = b;
    var G__6103 = c;
    var G__6104 = d;
    var G__6105 = e;
    var G__6106 = f;
    var G__6107 = g;
    var G__6108 = h;
    var G__6109 = i;
    var G__6110 = j;
    var G__6111 = k;
    var G__6112 = l;
    var G__6113 = m;
    var G__6114 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6101, G__6102, G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110, G__6111, G__6112, G__6113, G__6114) : self__.afn.call(null, G__6101, G__6102, G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110, G__6111, G__6112, G__6113, G__6114);
  };
  var G__6474__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6115 = a;
    var G__6116 = b;
    var G__6117 = c;
    var G__6118 = d;
    var G__6119 = e;
    var G__6120 = f;
    var G__6121 = g;
    var G__6122 = h;
    var G__6123 = i;
    var G__6124 = j;
    var G__6125 = k;
    var G__6126 = l;
    var G__6127 = m;
    var G__6128 = n;
    var G__6129 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121, G__6122, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129) : self__.afn.call(null, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121, G__6122, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129);
  };
  var G__6474__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6130 = a;
    var G__6131 = b;
    var G__6132 = c;
    var G__6133 = d;
    var G__6134 = e;
    var G__6135 = f;
    var G__6136 = g;
    var G__6137 = h;
    var G__6138 = i;
    var G__6139 = j;
    var G__6140 = k;
    var G__6141 = l;
    var G__6142 = m;
    var G__6143 = n;
    var G__6144 = o;
    var G__6145 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136, G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144, G__6145) : self__.afn.call(null, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136, G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144, G__6145);
  };
  var G__6474__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6146 = a;
    var G__6147 = b;
    var G__6148 = c;
    var G__6149 = d;
    var G__6150 = e;
    var G__6151 = f;
    var G__6152 = g;
    var G__6153 = h;
    var G__6154 = i;
    var G__6155 = j;
    var G__6156 = k;
    var G__6157 = l;
    var G__6158 = m;
    var G__6159 = n;
    var G__6160 = o;
    var G__6161 = p;
    var G__6162 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6146, G__6147, G__6148, G__6149, G__6150, G__6151, G__6152, G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162) : self__.afn.call(null, G__6146, G__6147, G__6148, G__6149, G__6150, G__6151, G__6152, G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162);
  };
  var G__6474__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6163 = a;
    var G__6164 = b;
    var G__6165 = c;
    var G__6166 = d;
    var G__6167 = e;
    var G__6168 = f;
    var G__6169 = g;
    var G__6170 = h;
    var G__6171 = i;
    var G__6172 = j;
    var G__6173 = k;
    var G__6174 = l;
    var G__6175 = m;
    var G__6176 = n;
    var G__6177 = o;
    var G__6178 = p;
    var G__6179 = q;
    var G__6180 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6163, G__6164, G__6165, G__6166, G__6167, G__6168, G__6169, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177, G__6178, G__6179, G__6180) : self__.afn.call(null, G__6163, G__6164, G__6165, G__6166, G__6167, G__6168, G__6169, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177, G__6178, G__6179, G__6180);
  };
  var G__6474__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6181 = a;
    var G__6182 = b;
    var G__6183 = c;
    var G__6184 = d;
    var G__6185 = e;
    var G__6186 = f;
    var G__6187 = g;
    var G__6188 = h;
    var G__6189 = i;
    var G__6190 = j;
    var G__6191 = k;
    var G__6192 = l;
    var G__6193 = m;
    var G__6194 = n;
    var G__6195 = o;
    var G__6196 = p;
    var G__6197 = q;
    var G__6198 = r;
    var G__6199 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193, G__6194, G__6195, G__6196, G__6197, G__6198, G__6199) : self__.afn.call(null, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193, G__6194, G__6195, G__6196, G__6197, G__6198, G__6199);
  };
  var G__6474__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6200 = a;
    var G__6201 = b;
    var G__6202 = c;
    var G__6203 = d;
    var G__6204 = e;
    var G__6205 = f;
    var G__6206 = g;
    var G__6207 = h;
    var G__6208 = i;
    var G__6209 = j;
    var G__6210 = k;
    var G__6211 = l;
    var G__6212 = m;
    var G__6213 = n;
    var G__6214 = o;
    var G__6215 = p;
    var G__6216 = q;
    var G__6217 = r;
    var G__6218 = s;
    var G__6219 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206, G__6207, G__6208, G__6209, G__6210, G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219) : self__.afn.call(null, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206, G__6207, G__6208, G__6209, G__6210, G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219);
  };
  var G__6474__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6220 = self__.afn;
    var G__6221 = a;
    var G__6222 = b;
    var G__6223 = c;
    var G__6224 = d;
    var G__6225 = e;
    var G__6226 = f;
    var G__6227 = g;
    var G__6228 = h;
    var G__6229 = i;
    var G__6230 = j;
    var G__6231 = k;
    var G__6232 = l;
    var G__6233 = m;
    var G__6234 = n;
    var G__6235 = o;
    var G__6236 = p;
    var G__6237 = q;
    var G__6238 = r;
    var G__6239 = s;
    var G__6240 = t;
    var G__6241 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226, G__6227, G__6228, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241) : cljs.core.apply.call(null, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226, G__6227, G__6228, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, 
    G__6239, G__6240, G__6241);
  };
  G__6474 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6474__1.call(this, self__);
      case 2:
        return G__6474__2.call(this, self__, a);
      case 3:
        return G__6474__3.call(this, self__, a, b);
      case 4:
        return G__6474__4.call(this, self__, a, b, c);
      case 5:
        return G__6474__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6474__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6474__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6474__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6474__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6474__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6474__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6474__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6474__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6474__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6474__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6474__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6474__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6474__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6474__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6474__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6474__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6474__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6474.cljs$core$IFn$_invoke$arity$1 = G__6474__1;
  G__6474.cljs$core$IFn$_invoke$arity$2 = G__6474__2;
  G__6474.cljs$core$IFn$_invoke$arity$3 = G__6474__3;
  G__6474.cljs$core$IFn$_invoke$arity$4 = G__6474__4;
  G__6474.cljs$core$IFn$_invoke$arity$5 = G__6474__5;
  G__6474.cljs$core$IFn$_invoke$arity$6 = G__6474__6;
  G__6474.cljs$core$IFn$_invoke$arity$7 = G__6474__7;
  G__6474.cljs$core$IFn$_invoke$arity$8 = G__6474__8;
  G__6474.cljs$core$IFn$_invoke$arity$9 = G__6474__9;
  G__6474.cljs$core$IFn$_invoke$arity$10 = G__6474__10;
  G__6474.cljs$core$IFn$_invoke$arity$11 = G__6474__11;
  G__6474.cljs$core$IFn$_invoke$arity$12 = G__6474__12;
  G__6474.cljs$core$IFn$_invoke$arity$13 = G__6474__13;
  G__6474.cljs$core$IFn$_invoke$arity$14 = G__6474__14;
  G__6474.cljs$core$IFn$_invoke$arity$15 = G__6474__15;
  G__6474.cljs$core$IFn$_invoke$arity$16 = G__6474__16;
  G__6474.cljs$core$IFn$_invoke$arity$17 = G__6474__17;
  G__6474.cljs$core$IFn$_invoke$arity$18 = G__6474__18;
  G__6474.cljs$core$IFn$_invoke$arity$19 = G__6474__19;
  G__6474.cljs$core$IFn$_invoke$arity$20 = G__6474__20;
  G__6474.cljs$core$IFn$_invoke$arity$21 = G__6474__21;
  G__6474.cljs$core$IFn$_invoke$arity$22 = G__6474__22;
  return G__6474;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6009) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6009)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__6242 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6242) : self__.afn.call(null, G__6242);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__6243 = a;
  var G__6244 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6243, G__6244) : self__.afn.call(null, G__6243, G__6244);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__6245 = a;
  var G__6246 = b;
  var G__6247 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6245, G__6246, G__6247) : self__.afn.call(null, G__6245, G__6246, G__6247);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__6248 = a;
  var G__6249 = b;
  var G__6250 = c;
  var G__6251 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6248, G__6249, G__6250, G__6251) : self__.afn.call(null, G__6248, G__6249, G__6250, G__6251);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__6252 = a;
  var G__6253 = b;
  var G__6254 = c;
  var G__6255 = d;
  var G__6256 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6252, G__6253, G__6254, G__6255, G__6256) : self__.afn.call(null, G__6252, G__6253, G__6254, G__6255, G__6256);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__6257 = a;
  var G__6258 = b;
  var G__6259 = c;
  var G__6260 = d;
  var G__6261 = e;
  var G__6262 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6257, G__6258, G__6259, G__6260, G__6261, G__6262) : self__.afn.call(null, G__6257, G__6258, G__6259, G__6260, G__6261, G__6262);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__6263 = a;
  var G__6264 = b;
  var G__6265 = c;
  var G__6266 = d;
  var G__6267 = e;
  var G__6268 = f;
  var G__6269 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6263, G__6264, G__6265, G__6266, G__6267, G__6268, G__6269) : self__.afn.call(null, G__6263, G__6264, G__6265, G__6266, G__6267, G__6268, G__6269);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__6270 = a;
  var G__6271 = b;
  var G__6272 = c;
  var G__6273 = d;
  var G__6274 = e;
  var G__6275 = f;
  var G__6276 = g;
  var G__6277 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276, G__6277) : self__.afn.call(null, G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276, G__6277);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__6278 = a;
  var G__6279 = b;
  var G__6280 = c;
  var G__6281 = d;
  var G__6282 = e;
  var G__6283 = f;
  var G__6284 = g;
  var G__6285 = h;
  var G__6286 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284, G__6285, G__6286) : self__.afn.call(null, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284, G__6285, G__6286);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__6287 = a;
  var G__6288 = b;
  var G__6289 = c;
  var G__6290 = d;
  var G__6291 = e;
  var G__6292 = f;
  var G__6293 = g;
  var G__6294 = h;
  var G__6295 = i;
  var G__6296 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6287, G__6288, G__6289, G__6290, G__6291, G__6292, G__6293, G__6294, G__6295, G__6296) : self__.afn.call(null, G__6287, G__6288, G__6289, G__6290, G__6291, G__6292, G__6293, G__6294, G__6295, G__6296);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__6297 = a;
  var G__6298 = b;
  var G__6299 = c;
  var G__6300 = d;
  var G__6301 = e;
  var G__6302 = f;
  var G__6303 = g;
  var G__6304 = h;
  var G__6305 = i;
  var G__6306 = j;
  var G__6307 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6297, G__6298, G__6299, G__6300, G__6301, G__6302, G__6303, G__6304, G__6305, G__6306, G__6307) : self__.afn.call(null, G__6297, G__6298, G__6299, G__6300, G__6301, G__6302, G__6303, G__6304, G__6305, G__6306, G__6307);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__6308 = a;
  var G__6309 = b;
  var G__6310 = c;
  var G__6311 = d;
  var G__6312 = e;
  var G__6313 = f;
  var G__6314 = g;
  var G__6315 = h;
  var G__6316 = i;
  var G__6317 = j;
  var G__6318 = k;
  var G__6319 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6308, G__6309, G__6310, G__6311, G__6312, G__6313, G__6314, G__6315, G__6316, G__6317, G__6318, G__6319) : self__.afn.call(null, G__6308, G__6309, G__6310, G__6311, G__6312, G__6313, G__6314, G__6315, G__6316, G__6317, G__6318, G__6319);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__6320 = a;
  var G__6321 = b;
  var G__6322 = c;
  var G__6323 = d;
  var G__6324 = e;
  var G__6325 = f;
  var G__6326 = g;
  var G__6327 = h;
  var G__6328 = i;
  var G__6329 = j;
  var G__6330 = k;
  var G__6331 = l;
  var G__6332 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6320, G__6321, G__6322, G__6323, G__6324, G__6325, G__6326, G__6327, G__6328, G__6329, G__6330, G__6331, G__6332) : self__.afn.call(null, G__6320, G__6321, G__6322, G__6323, G__6324, G__6325, G__6326, G__6327, G__6328, G__6329, G__6330, G__6331, G__6332);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__6333 = a;
  var G__6334 = b;
  var G__6335 = c;
  var G__6336 = d;
  var G__6337 = e;
  var G__6338 = f;
  var G__6339 = g;
  var G__6340 = h;
  var G__6341 = i;
  var G__6342 = j;
  var G__6343 = k;
  var G__6344 = l;
  var G__6345 = m;
  var G__6346 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6333, G__6334, G__6335, G__6336, G__6337, G__6338, G__6339, G__6340, G__6341, G__6342, G__6343, G__6344, G__6345, G__6346) : self__.afn.call(null, G__6333, G__6334, G__6335, G__6336, G__6337, G__6338, G__6339, G__6340, G__6341, G__6342, G__6343, G__6344, G__6345, G__6346);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__6347 = a;
  var G__6348 = b;
  var G__6349 = c;
  var G__6350 = d;
  var G__6351 = e;
  var G__6352 = f;
  var G__6353 = g;
  var G__6354 = h;
  var G__6355 = i;
  var G__6356 = j;
  var G__6357 = k;
  var G__6358 = l;
  var G__6359 = m;
  var G__6360 = n;
  var G__6361 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6347, G__6348, G__6349, G__6350, G__6351, G__6352, G__6353, G__6354, G__6355, G__6356, G__6357, G__6358, G__6359, G__6360, G__6361) : self__.afn.call(null, G__6347, G__6348, G__6349, G__6350, G__6351, G__6352, G__6353, G__6354, G__6355, G__6356, G__6357, G__6358, G__6359, G__6360, G__6361);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__6362 = a;
  var G__6363 = b;
  var G__6364 = c;
  var G__6365 = d;
  var G__6366 = e;
  var G__6367 = f;
  var G__6368 = g;
  var G__6369 = h;
  var G__6370 = i;
  var G__6371 = j;
  var G__6372 = k;
  var G__6373 = l;
  var G__6374 = m;
  var G__6375 = n;
  var G__6376 = o;
  var G__6377 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6362, G__6363, G__6364, G__6365, G__6366, G__6367, G__6368, G__6369, G__6370, G__6371, G__6372, G__6373, G__6374, G__6375, G__6376, G__6377) : self__.afn.call(null, G__6362, G__6363, G__6364, G__6365, G__6366, G__6367, G__6368, G__6369, G__6370, G__6371, G__6372, G__6373, G__6374, G__6375, G__6376, G__6377);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__6378 = a;
  var G__6379 = b;
  var G__6380 = c;
  var G__6381 = d;
  var G__6382 = e;
  var G__6383 = f;
  var G__6384 = g;
  var G__6385 = h;
  var G__6386 = i;
  var G__6387 = j;
  var G__6388 = k;
  var G__6389 = l;
  var G__6390 = m;
  var G__6391 = n;
  var G__6392 = o;
  var G__6393 = p;
  var G__6394 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6378, G__6379, G__6380, G__6381, G__6382, G__6383, G__6384, G__6385, G__6386, G__6387, G__6388, G__6389, G__6390, G__6391, G__6392, G__6393, G__6394) : self__.afn.call(null, G__6378, G__6379, G__6380, G__6381, G__6382, G__6383, G__6384, G__6385, G__6386, G__6387, G__6388, G__6389, G__6390, G__6391, G__6392, G__6393, G__6394);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__6395 = a;
  var G__6396 = b;
  var G__6397 = c;
  var G__6398 = d;
  var G__6399 = e;
  var G__6400 = f;
  var G__6401 = g;
  var G__6402 = h;
  var G__6403 = i;
  var G__6404 = j;
  var G__6405 = k;
  var G__6406 = l;
  var G__6407 = m;
  var G__6408 = n;
  var G__6409 = o;
  var G__6410 = p;
  var G__6411 = q;
  var G__6412 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6395, G__6396, G__6397, G__6398, G__6399, G__6400, G__6401, G__6402, G__6403, G__6404, G__6405, G__6406, G__6407, G__6408, G__6409, G__6410, G__6411, G__6412) : self__.afn.call(null, G__6395, G__6396, G__6397, G__6398, G__6399, G__6400, G__6401, G__6402, G__6403, G__6404, G__6405, G__6406, G__6407, G__6408, G__6409, G__6410, G__6411, G__6412);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__6413 = a;
  var G__6414 = b;
  var G__6415 = c;
  var G__6416 = d;
  var G__6417 = e;
  var G__6418 = f;
  var G__6419 = g;
  var G__6420 = h;
  var G__6421 = i;
  var G__6422 = j;
  var G__6423 = k;
  var G__6424 = l;
  var G__6425 = m;
  var G__6426 = n;
  var G__6427 = o;
  var G__6428 = p;
  var G__6429 = q;
  var G__6430 = r;
  var G__6431 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6413, G__6414, G__6415, G__6416, G__6417, G__6418, G__6419, G__6420, G__6421, G__6422, G__6423, G__6424, G__6425, G__6426, G__6427, G__6428, G__6429, G__6430, G__6431) : self__.afn.call(null, G__6413, G__6414, G__6415, G__6416, G__6417, G__6418, G__6419, G__6420, G__6421, G__6422, G__6423, G__6424, G__6425, G__6426, G__6427, G__6428, G__6429, G__6430, G__6431);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__6432 = a;
  var G__6433 = b;
  var G__6434 = c;
  var G__6435 = d;
  var G__6436 = e;
  var G__6437 = f;
  var G__6438 = g;
  var G__6439 = h;
  var G__6440 = i;
  var G__6441 = j;
  var G__6442 = k;
  var G__6443 = l;
  var G__6444 = m;
  var G__6445 = n;
  var G__6446 = o;
  var G__6447 = p;
  var G__6448 = q;
  var G__6449 = r;
  var G__6450 = s;
  var G__6451 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438, G__6439, G__6440, G__6441, G__6442, G__6443, G__6444, G__6445, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451) : self__.afn.call(null, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438, G__6439, G__6440, G__6441, G__6442, G__6443, G__6444, G__6445, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6452 = self__.afn;
  var G__6453 = a;
  var G__6454 = b;
  var G__6455 = c;
  var G__6456 = d;
  var G__6457 = e;
  var G__6458 = f;
  var G__6459 = g;
  var G__6460 = h;
  var G__6461 = i;
  var G__6462 = j;
  var G__6463 = k;
  var G__6464 = l;
  var G__6465 = m;
  var G__6466 = n;
  var G__6467 = o;
  var G__6468 = p;
  var G__6469 = q;
  var G__6470 = r;
  var G__6471 = s;
  var G__6472 = t;
  var G__6473 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458, G__6459, G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467, G__6468, G__6469, G__6470, G__6471, G__6472, G__6473) : cljs.core.apply.call(null, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458, G__6459, G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467, G__6468, G__6469, G__6470, 
  G__6471, G__6472, G__6473);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__6478 = o;
    if (G__6478) {
      var bit__4439__auto__ = G__6478.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4439__auto__ || G__6478.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6478.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6478);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6478);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3746__auto__ = !(o == null);
    if (and__3746__auto__) {
      var G__6482 = o;
      if (G__6482) {
        var bit__4439__auto__ = G__6482.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4439__auto__ || G__6482.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6482.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6482);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6482);
      }
    } else {
      return and__3746__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__6485__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6486 = ret;
            var G__6487 = cljs.core.first(ks);
            var G__6488 = cljs.core.next(ks);
            coll = G__6486;
            k = G__6487;
            ks = G__6488;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6485 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6489__i = 0, G__6489__a = new Array(arguments.length - 2);
        while (G__6489__i < G__6489__a.length) {
          G__6489__a[G__6489__i] = arguments[G__6489__i + 2];
          ++G__6489__i;
        }
        ks = new cljs.core.IndexedSeq(G__6489__a, 0);
      }
      return G__6485__delegate.call(this, coll, k, ks);
    };
    G__6485.cljs$lang$maxFixedArity = 2;
    G__6485.cljs$lang$applyTo = function(arglist__6490) {
      var coll = cljs.core.first(arglist__6490);
      arglist__6490 = cljs.core.next(arglist__6490);
      var k = cljs.core.first(arglist__6490);
      var ks = cljs.core.rest(arglist__6490);
      return G__6485__delegate(coll, k, ks);
    };
    G__6485.cljs$core$IFn$_invoke$arity$variadic = G__6485__delegate;
    return G__6485;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__6491 = null;
        if (arguments.length > 2) {
          var G__6492__i = 0, G__6492__a = new Array(arguments.length - 2);
          while (G__6492__i < G__6492__a.length) {
            G__6492__a[G__6492__i] = arguments[G__6492__i + 2];
            ++G__6492__i;
          }
          G__6491 = new cljs.core.IndexedSeq(G__6492__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6491);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6494 = x;
    if (G__6494) {
      var bit__4439__auto__ = G__6494.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4439__auto__ || G__6494.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6494.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6494);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6494);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6496 = x;
    if (G__6496) {
      var bit__4439__auto__ = G__6496.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4439__auto__ || G__6496.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6496.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6496);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6496);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6498 = x;
  if (G__6498) {
    var bit__4439__auto__ = G__6498.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4439__auto__ || G__6498.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6498.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6498);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6498);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6500 = x;
  if (G__6500) {
    var bit__4439__auto__ = G__6500.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4439__auto__ || G__6500.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6500.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6500);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6500);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6502 = x;
  if (G__6502) {
    var bit__4439__auto__ = G__6502.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4439__auto__ || G__6502.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6502.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6502);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6502);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6504 = x;
  if (G__6504) {
    var bit__4439__auto__ = G__6504.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4439__auto__ || G__6504.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6504.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6504);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6504);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6506 = x;
    if (G__6506) {
      var bit__4439__auto__ = G__6506.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4439__auto__ || G__6506.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6506.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6506);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6506);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6508 = x;
  if (G__6508) {
    var bit__4439__auto__ = G__6508.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4439__auto__ || G__6508.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6508.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6508);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6508);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6510 = x;
  if (G__6510) {
    var bit__4432__auto__ = G__6510.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4432__auto__ || G__6510.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6516 = {};
    return obj6516;
  };
  var js_obj__1 = function() {
    var G__6519__delegate = function(keyvals) {
      var G__6517 = goog.object.create;
      var G__6518 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6517, G__6518) : cljs.core.apply.call(null, G__6517, G__6518);
    };
    var G__6519 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__6520__i = 0, G__6520__a = new Array(arguments.length - 0);
        while (G__6520__i < G__6520__a.length) {
          G__6520__a[G__6520__i] = arguments[G__6520__i + 0];
          ++G__6520__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__6520__a, 0);
      }
      return G__6519__delegate.call(this, keyvals);
    };
    G__6519.cljs$lang$maxFixedArity = 0;
    G__6519.cljs$lang$applyTo = function(arglist__6521) {
      var keyvals = cljs.core.seq(arglist__6521);
      return G__6519__delegate(keyvals);
    };
    G__6519.cljs$core$IFn$_invoke$arity$variadic = G__6519__delegate;
    return G__6519;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__6522 = null;
        if (arguments.length > 0) {
          var G__6523__i = 0, G__6523__a = new Array(arguments.length - 0);
          while (G__6523__i < G__6523__a.length) {
            G__6523__a[G__6523__i] = arguments[G__6523__i + 0];
            ++G__6523__i;
          }
          G__6522 = new cljs.core.IndexedSeq(G__6523__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6522);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__6526_6528 = obj;
  var G__6527_6529 = function(G__6526_6528, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6526_6528, keys);
  goog.object.forEach(G__6526_6528, G__6527_6529);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6530 = i__$1 + 1;
      var G__6531 = j__$1 + 1;
      var G__6532 = len__$1 - 1;
      i__$1 = G__6530;
      j__$1 = G__6531;
      len__$1 = G__6532;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6533 = i__$1 - 1;
      var G__6534 = j__$1 - 1;
      var G__6535 = len__$1 - 1;
      i__$1 = G__6533;
      j__$1 = G__6534;
      len__$1 = G__6535;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6537 = {};
  return obj6537;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6539 = s;
    if (G__6539) {
      var bit__4439__auto__ = G__6539.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4439__auto__ || G__6539.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6539.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6539);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6539);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6541 = s;
  if (G__6541) {
    var bit__4439__auto__ = G__6541.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4439__auto__ || G__6541.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6541.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6541);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6541);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3758__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3758__auto__) {
    return or__3758__auto__;
  } else {
    var G__6545 = f;
    if (G__6545) {
      var bit__4439__auto__ = G__6545.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4439__auto__ || G__6545.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6545.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6545);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6545);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__6558 = n;
    return isNaN(G__6558);
  }()) && !(n === Infinity) && function() {
    var G__6559 = n;
    return parseFloat(G__6559);
  }() === function() {
    var G__6560 = n;
    var G__6561 = 10;
    return parseInt(G__6560, G__6561);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6562__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__6563 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__6564 = etc;
              s = G__6563;
              xs = G__6564;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6562 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6565__i = 0, G__6565__a = new Array(arguments.length - 2);
        while (G__6565__i < G__6565__a.length) {
          G__6565__a[G__6565__i] = arguments[G__6565__i + 2];
          ++G__6565__i;
        }
        more = new cljs.core.IndexedSeq(G__6565__a, 0);
      }
      return G__6562__delegate.call(this, x, y, more);
    };
    G__6562.cljs$lang$maxFixedArity = 2;
    G__6562.cljs$lang$applyTo = function(arglist__6566) {
      var x = cljs.core.first(arglist__6566);
      arglist__6566 = cljs.core.next(arglist__6566);
      var y = cljs.core.first(arglist__6566);
      var more = cljs.core.rest(arglist__6566);
      return G__6562__delegate(x, y, more);
    };
    G__6562.cljs$core$IFn$_invoke$arity$variadic = G__6562__delegate;
    return G__6562;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__6567 = null;
        if (arguments.length > 2) {
          var G__6568__i = 0, G__6568__a = new Array(arguments.length - 2);
          while (G__6568__i < G__6568__a.length) {
            G__6568__a[G__6568__i] = arguments[G__6568__i + 2];
            ++G__6568__i;
          }
          G__6567 = new cljs.core.IndexedSeq(G__6568__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6567);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__6572 = x;
            if (G__6572) {
              var bit__4432__auto__ = G__6572.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4432__auto__ || G__6572.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__6573 = x;
            var G__6574 = y;
            return goog.array.defaultCompare(G__6573, G__6574);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6579 = xs;
        var G__6580 = ys;
        var G__6581 = len;
        var G__6582 = n + 1;
        xs = G__6579;
        ys = G__6580;
        len = G__6581;
        n = G__6582;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__6587 = x;
        var G__6588 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6587, G__6588) : f.call(null, G__6587, G__6588);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__6589 = y;
            var G__6590 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6589, G__6590) : f.call(null, G__6589, G__6590);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__6596 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6596) : cljs.core.to_array.call(null, G__6596);
      }();
      var G__6597_6599 = a;
      var G__6598_6600 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__6597_6599, G__6598_6600);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__6606 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6606) : keyfn.call(null, G__6606);
      }(), function() {
        var G__6607 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6607) : keyfn.call(null, G__6607);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__6613 = f;
      var G__6614 = cljs.core.first(s);
      var G__6615 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6613, G__6614, G__6615) : cljs.core.reduce.call(null, G__6613, G__6614, G__6615);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__6616 = val__$1;
          var G__6617 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6616, G__6617) : f.call(null, G__6616, G__6617);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6618 = nval;
          var G__6619 = cljs.core.next(coll__$1);
          val__$1 = G__6618;
          coll__$1 = G__6619;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__6623 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6623) : cljs.core.to_array.call(null, G__6623);
  }();
  var G__6624_6626 = a;
  goog.array.shuffle(G__6624_6626);
  var G__6625 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6625) : cljs.core.vec.call(null, G__6625);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6629 = coll;
      if (G__6629) {
        var bit__4432__auto__ = G__6629.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4432__auto__ || G__6629.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6630 = coll;
      if (G__6630) {
        var bit__4432__auto__ = G__6630.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4432__auto__ || G__6630.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__6639 = null;
      var G__6639__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__6639__1 = function(x) {
        var G__6636 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6636) : cf.call(null, G__6636);
      };
      var G__6639__2 = function(x, y) {
        var G__6637 = x;
        var G__6638 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6637, G__6638) : f.call(null, G__6637, G__6638);
      };
      G__6639 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6639__0.call(this);
          case 1:
            return G__6639__1.call(this, x);
          case 2:
            return G__6639__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6639.cljs$core$IFn$_invoke$arity$0 = G__6639__0;
      G__6639.cljs$core$IFn$_invoke$arity$1 = G__6639__1;
      G__6639.cljs$core$IFn$_invoke$arity$2 = G__6639__2;
      return G__6639;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__6646 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6646) : xform.call(null, G__6646);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__6647 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6647) : f__$1.call(null, G__6647);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6648__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__6648 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6649__i = 0, G__6649__a = new Array(arguments.length - 2);
        while (G__6649__i < G__6649__a.length) {
          G__6649__a[G__6649__i] = arguments[G__6649__i + 2];
          ++G__6649__i;
        }
        more = new cljs.core.IndexedSeq(G__6649__a, 0);
      }
      return G__6648__delegate.call(this, x, y, more);
    };
    G__6648.cljs$lang$maxFixedArity = 2;
    G__6648.cljs$lang$applyTo = function(arglist__6650) {
      var x = cljs.core.first(arglist__6650);
      arglist__6650 = cljs.core.next(arglist__6650);
      var y = cljs.core.first(arglist__6650);
      var more = cljs.core.rest(arglist__6650);
      return G__6648__delegate(x, y, more);
    };
    G__6648.cljs$core$IFn$_invoke$arity$variadic = G__6648__delegate;
    return G__6648;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__6651 = null;
        if (arguments.length > 2) {
          var G__6652__i = 0, G__6652__a = new Array(arguments.length - 2);
          while (G__6652__i < G__6652__a.length) {
            G__6652__a[G__6652__i] = arguments[G__6652__i + 2];
            ++G__6652__i;
          }
          G__6651 = new cljs.core.IndexedSeq(G__6652__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6651);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6653__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__6653 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6654__i = 0, G__6654__a = new Array(arguments.length - 2);
        while (G__6654__i < G__6654__a.length) {
          G__6654__a[G__6654__i] = arguments[G__6654__i + 2];
          ++G__6654__i;
        }
        more = new cljs.core.IndexedSeq(G__6654__a, 0);
      }
      return G__6653__delegate.call(this, x, y, more);
    };
    G__6653.cljs$lang$maxFixedArity = 2;
    G__6653.cljs$lang$applyTo = function(arglist__6655) {
      var x = cljs.core.first(arglist__6655);
      arglist__6655 = cljs.core.next(arglist__6655);
      var y = cljs.core.first(arglist__6655);
      var more = cljs.core.rest(arglist__6655);
      return G__6653__delegate(x, y, more);
    };
    G__6653.cljs$core$IFn$_invoke$arity$variadic = G__6653__delegate;
    return G__6653;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__6656 = null;
        if (arguments.length > 2) {
          var G__6657__i = 0, G__6657__a = new Array(arguments.length - 2);
          while (G__6657__i < G__6657__a.length) {
            G__6657__a[G__6657__i] = arguments[G__6657__i + 2];
            ++G__6657__i;
          }
          G__6656 = new cljs.core.IndexedSeq(G__6657__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6656);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6658__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__6658 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6659__i = 0, G__6659__a = new Array(arguments.length - 2);
        while (G__6659__i < G__6659__a.length) {
          G__6659__a[G__6659__i] = arguments[G__6659__i + 2];
          ++G__6659__i;
        }
        more = new cljs.core.IndexedSeq(G__6659__a, 0);
      }
      return G__6658__delegate.call(this, x, y, more);
    };
    G__6658.cljs$lang$maxFixedArity = 2;
    G__6658.cljs$lang$applyTo = function(arglist__6660) {
      var x = cljs.core.first(arglist__6660);
      arglist__6660 = cljs.core.next(arglist__6660);
      var y = cljs.core.first(arglist__6660);
      var more = cljs.core.rest(arglist__6660);
      return G__6658__delegate(x, y, more);
    };
    G__6658.cljs$core$IFn$_invoke$arity$variadic = G__6658__delegate;
    return G__6658;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__6661 = null;
        if (arguments.length > 2) {
          var G__6662__i = 0, G__6662__a = new Array(arguments.length - 2);
          while (G__6662__i < G__6662__a.length) {
            G__6662__a[G__6662__i] = arguments[G__6662__i + 2];
            ++G__6662__i;
          }
          G__6661 = new cljs.core.IndexedSeq(G__6662__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6661);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6667__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6667 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6668__i = 0, G__6668__a = new Array(arguments.length - 2);
        while (G__6668__i < G__6668__a.length) {
          G__6668__a[G__6668__i] = arguments[G__6668__i + 2];
          ++G__6668__i;
        }
        more = new cljs.core.IndexedSeq(G__6668__a, 0);
      }
      return G__6667__delegate.call(this, x, y, more);
    };
    G__6667.cljs$lang$maxFixedArity = 2;
    G__6667.cljs$lang$applyTo = function(arglist__6669) {
      var x = cljs.core.first(arglist__6669);
      arglist__6669 = cljs.core.next(arglist__6669);
      var y = cljs.core.first(arglist__6669);
      var more = cljs.core.rest(arglist__6669);
      return G__6667__delegate(x, y, more);
    };
    G__6667.cljs$core$IFn$_invoke$arity$variadic = G__6667__delegate;
    return G__6667;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__6670 = null;
        if (arguments.length > 2) {
          var G__6671__i = 0, G__6671__a = new Array(arguments.length - 2);
          while (G__6671__i < G__6671__a.length) {
            G__6671__a[G__6671__i] = arguments[G__6671__i + 2];
            ++G__6671__i;
          }
          G__6670 = new cljs.core.IndexedSeq(G__6671__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6670);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6672__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__6673 = y;
            var G__6674 = cljs.core.first(more);
            var G__6675 = cljs.core.next(more);
            x = G__6673;
            y = G__6674;
            more = G__6675;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6672 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6676__i = 0, G__6676__a = new Array(arguments.length - 2);
        while (G__6676__i < G__6676__a.length) {
          G__6676__a[G__6676__i] = arguments[G__6676__i + 2];
          ++G__6676__i;
        }
        more = new cljs.core.IndexedSeq(G__6676__a, 0);
      }
      return G__6672__delegate.call(this, x, y, more);
    };
    G__6672.cljs$lang$maxFixedArity = 2;
    G__6672.cljs$lang$applyTo = function(arglist__6677) {
      var x = cljs.core.first(arglist__6677);
      arglist__6677 = cljs.core.next(arglist__6677);
      var y = cljs.core.first(arglist__6677);
      var more = cljs.core.rest(arglist__6677);
      return G__6672__delegate(x, y, more);
    };
    G__6672.cljs$core$IFn$_invoke$arity$variadic = G__6672__delegate;
    return G__6672;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__6678 = null;
        if (arguments.length > 2) {
          var G__6679__i = 0, G__6679__a = new Array(arguments.length - 2);
          while (G__6679__i < G__6679__a.length) {
            G__6679__a[G__6679__i] = arguments[G__6679__i + 2];
            ++G__6679__i;
          }
          G__6678 = new cljs.core.IndexedSeq(G__6679__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6678);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6680__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__6681 = y;
            var G__6682 = cljs.core.first(more);
            var G__6683 = cljs.core.next(more);
            x = G__6681;
            y = G__6682;
            more = G__6683;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6680 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6684__i = 0, G__6684__a = new Array(arguments.length - 2);
        while (G__6684__i < G__6684__a.length) {
          G__6684__a[G__6684__i] = arguments[G__6684__i + 2];
          ++G__6684__i;
        }
        more = new cljs.core.IndexedSeq(G__6684__a, 0);
      }
      return G__6680__delegate.call(this, x, y, more);
    };
    G__6680.cljs$lang$maxFixedArity = 2;
    G__6680.cljs$lang$applyTo = function(arglist__6685) {
      var x = cljs.core.first(arglist__6685);
      arglist__6685 = cljs.core.next(arglist__6685);
      var y = cljs.core.first(arglist__6685);
      var more = cljs.core.rest(arglist__6685);
      return G__6680__delegate(x, y, more);
    };
    G__6680.cljs$core$IFn$_invoke$arity$variadic = G__6680__delegate;
    return G__6680;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__6686 = null;
        if (arguments.length > 2) {
          var G__6687__i = 0, G__6687__a = new Array(arguments.length - 2);
          while (G__6687__i < G__6687__a.length) {
            G__6687__a[G__6687__i] = arguments[G__6687__i + 2];
            ++G__6687__i;
          }
          G__6686 = new cljs.core.IndexedSeq(G__6687__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6686);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6688__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__6689 = y;
            var G__6690 = cljs.core.first(more);
            var G__6691 = cljs.core.next(more);
            x = G__6689;
            y = G__6690;
            more = G__6691;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6688 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6692__i = 0, G__6692__a = new Array(arguments.length - 2);
        while (G__6692__i < G__6692__a.length) {
          G__6692__a[G__6692__i] = arguments[G__6692__i + 2];
          ++G__6692__i;
        }
        more = new cljs.core.IndexedSeq(G__6692__a, 0);
      }
      return G__6688__delegate.call(this, x, y, more);
    };
    G__6688.cljs$lang$maxFixedArity = 2;
    G__6688.cljs$lang$applyTo = function(arglist__6693) {
      var x = cljs.core.first(arglist__6693);
      arglist__6693 = cljs.core.next(arglist__6693);
      var y = cljs.core.first(arglist__6693);
      var more = cljs.core.rest(arglist__6693);
      return G__6688__delegate(x, y, more);
    };
    G__6688.cljs$core$IFn$_invoke$arity$variadic = G__6688__delegate;
    return G__6688;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__6694 = null;
        if (arguments.length > 2) {
          var G__6695__i = 0, G__6695__a = new Array(arguments.length - 2);
          while (G__6695__i < G__6695__a.length) {
            G__6695__a[G__6695__i] = arguments[G__6695__i + 2];
            ++G__6695__i;
          }
          G__6694 = new cljs.core.IndexedSeq(G__6695__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6694);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6696__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__6697 = y;
            var G__6698 = cljs.core.first(more);
            var G__6699 = cljs.core.next(more);
            x = G__6697;
            y = G__6698;
            more = G__6699;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6696 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6700__i = 0, G__6700__a = new Array(arguments.length - 2);
        while (G__6700__i < G__6700__a.length) {
          G__6700__a[G__6700__i] = arguments[G__6700__i + 2];
          ++G__6700__i;
        }
        more = new cljs.core.IndexedSeq(G__6700__a, 0);
      }
      return G__6696__delegate.call(this, x, y, more);
    };
    G__6696.cljs$lang$maxFixedArity = 2;
    G__6696.cljs$lang$applyTo = function(arglist__6701) {
      var x = cljs.core.first(arglist__6701);
      arglist__6701 = cljs.core.next(arglist__6701);
      var y = cljs.core.first(arglist__6701);
      var more = cljs.core.rest(arglist__6701);
      return G__6696__delegate(x, y, more);
    };
    G__6696.cljs$core$IFn$_invoke$arity$variadic = G__6696__delegate;
    return G__6696;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__6702 = null;
        if (arguments.length > 2) {
          var G__6703__i = 0, G__6703__a = new Array(arguments.length - 2);
          while (G__6703__i < G__6703__a.length) {
            G__6703__a[G__6703__i] = arguments[G__6703__i + 2];
            ++G__6703__i;
          }
          G__6702 = new cljs.core.IndexedSeq(G__6703__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6702);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4075__auto__ = x;
    var y__4076__auto__ = y;
    return x__4075__auto__ > y__4076__auto__ ? x__4075__auto__ : y__4076__auto__;
  };
  var max__3 = function() {
    var G__6704__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4075__auto__ = x;
        var y__4076__auto__ = y;
        return x__4075__auto__ > y__4076__auto__ ? x__4075__auto__ : y__4076__auto__;
      }(), more);
    };
    var G__6704 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6705__i = 0, G__6705__a = new Array(arguments.length - 2);
        while (G__6705__i < G__6705__a.length) {
          G__6705__a[G__6705__i] = arguments[G__6705__i + 2];
          ++G__6705__i;
        }
        more = new cljs.core.IndexedSeq(G__6705__a, 0);
      }
      return G__6704__delegate.call(this, x, y, more);
    };
    G__6704.cljs$lang$maxFixedArity = 2;
    G__6704.cljs$lang$applyTo = function(arglist__6706) {
      var x = cljs.core.first(arglist__6706);
      arglist__6706 = cljs.core.next(arglist__6706);
      var y = cljs.core.first(arglist__6706);
      var more = cljs.core.rest(arglist__6706);
      return G__6704__delegate(x, y, more);
    };
    G__6704.cljs$core$IFn$_invoke$arity$variadic = G__6704__delegate;
    return G__6704;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__6707 = null;
        if (arguments.length > 2) {
          var G__6708__i = 0, G__6708__a = new Array(arguments.length - 2);
          while (G__6708__i < G__6708__a.length) {
            G__6708__a[G__6708__i] = arguments[G__6708__i + 2];
            ++G__6708__i;
          }
          G__6707 = new cljs.core.IndexedSeq(G__6708__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6707);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4082__auto__ = x;
    var y__4083__auto__ = y;
    return x__4082__auto__ < y__4083__auto__ ? x__4082__auto__ : y__4083__auto__;
  };
  var min__3 = function() {
    var G__6709__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4082__auto__ = x;
        var y__4083__auto__ = y;
        return x__4082__auto__ < y__4083__auto__ ? x__4082__auto__ : y__4083__auto__;
      }(), more);
    };
    var G__6709 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6710__i = 0, G__6710__a = new Array(arguments.length - 2);
        while (G__6710__i < G__6710__a.length) {
          G__6710__a[G__6710__i] = arguments[G__6710__i + 2];
          ++G__6710__i;
        }
        more = new cljs.core.IndexedSeq(G__6710__a, 0);
      }
      return G__6709__delegate.call(this, x, y, more);
    };
    G__6709.cljs$lang$maxFixedArity = 2;
    G__6709.cljs$lang$applyTo = function(arglist__6711) {
      var x = cljs.core.first(arglist__6711);
      arglist__6711 = cljs.core.next(arglist__6711);
      var y = cljs.core.first(arglist__6711);
      var more = cljs.core.rest(arglist__6711);
      return G__6709__delegate(x, y, more);
    };
    G__6709.cljs$core$IFn$_invoke$arity$variadic = G__6709__delegate;
    return G__6709;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__6712 = null;
        if (arguments.length > 2) {
          var G__6713__i = 0, G__6713__a = new Array(arguments.length - 2);
          while (G__6713__i < G__6713__a.length) {
            G__6713__a[G__6713__i] = arguments[G__6713__i + 2];
            ++G__6713__i;
          }
          G__6712 = new cljs.core.IndexedSeq(G__6713__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6712);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6714__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__6714 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6715__i = 0, G__6715__a = new Array(arguments.length - 2);
        while (G__6715__i < G__6715__a.length) {
          G__6715__a[G__6715__i] = arguments[G__6715__i + 2];
          ++G__6715__i;
        }
        more = new cljs.core.IndexedSeq(G__6715__a, 0);
      }
      return G__6714__delegate.call(this, x, y, more);
    };
    G__6714.cljs$lang$maxFixedArity = 2;
    G__6714.cljs$lang$applyTo = function(arglist__6716) {
      var x = cljs.core.first(arglist__6716);
      arglist__6716 = cljs.core.next(arglist__6716);
      var y = cljs.core.first(arglist__6716);
      var more = cljs.core.rest(arglist__6716);
      return G__6714__delegate(x, y, more);
    };
    G__6714.cljs$core$IFn$_invoke$arity$variadic = G__6714__delegate;
    return G__6714;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__6717 = null;
        if (arguments.length > 2) {
          var G__6718__i = 0, G__6718__a = new Array(arguments.length - 2);
          while (G__6718__i < G__6718__a.length) {
            G__6718__a[G__6718__i] = arguments[G__6718__i + 2];
            ++G__6718__i;
          }
          G__6717 = new cljs.core.IndexedSeq(G__6718__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6717);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6719__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__6719 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6720__i = 0, G__6720__a = new Array(arguments.length - 2);
        while (G__6720__i < G__6720__a.length) {
          G__6720__a[G__6720__i] = arguments[G__6720__i + 2];
          ++G__6720__i;
        }
        more = new cljs.core.IndexedSeq(G__6720__a, 0);
      }
      return G__6719__delegate.call(this, x, y, more);
    };
    G__6719.cljs$lang$maxFixedArity = 2;
    G__6719.cljs$lang$applyTo = function(arglist__6721) {
      var x = cljs.core.first(arglist__6721);
      arglist__6721 = cljs.core.next(arglist__6721);
      var y = cljs.core.first(arglist__6721);
      var more = cljs.core.rest(arglist__6721);
      return G__6719__delegate(x, y, more);
    };
    G__6719.cljs$core$IFn$_invoke$arity$variadic = G__6719__delegate;
    return G__6719;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__6722 = null;
        if (arguments.length > 2) {
          var G__6723__i = 0, G__6723__a = new Array(arguments.length - 2);
          while (G__6723__i < G__6723__a.length) {
            G__6723__a[G__6723__i] = arguments[G__6723__i + 2];
            ++G__6723__i;
          }
          G__6722 = new cljs.core.IndexedSeq(G__6723__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6722);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6728__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6728 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6729__i = 0, G__6729__a = new Array(arguments.length - 2);
        while (G__6729__i < G__6729__a.length) {
          G__6729__a[G__6729__i] = arguments[G__6729__i + 2];
          ++G__6729__i;
        }
        more = new cljs.core.IndexedSeq(G__6729__a, 0);
      }
      return G__6728__delegate.call(this, x, y, more);
    };
    G__6728.cljs$lang$maxFixedArity = 2;
    G__6728.cljs$lang$applyTo = function(arglist__6730) {
      var x = cljs.core.first(arglist__6730);
      arglist__6730 = cljs.core.next(arglist__6730);
      var y = cljs.core.first(arglist__6730);
      var more = cljs.core.rest(arglist__6730);
      return G__6728__delegate(x, y, more);
    };
    G__6728.cljs$core$IFn$_invoke$arity$variadic = G__6728__delegate;
    return G__6728;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__6731 = null;
        if (arguments.length > 2) {
          var G__6732__i = 0, G__6732__a = new Array(arguments.length - 2);
          while (G__6732__i < G__6732__a.length) {
            G__6732__a[G__6732__i] = arguments[G__6732__i + 2];
            ++G__6732__i;
          }
          G__6731 = new cljs.core.IndexedSeq(G__6732__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6731);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6733__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__6733 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6734__i = 0, G__6734__a = new Array(arguments.length - 2);
        while (G__6734__i < G__6734__a.length) {
          G__6734__a[G__6734__i] = arguments[G__6734__i + 2];
          ++G__6734__i;
        }
        more = new cljs.core.IndexedSeq(G__6734__a, 0);
      }
      return G__6733__delegate.call(this, x, y, more);
    };
    G__6733.cljs$lang$maxFixedArity = 2;
    G__6733.cljs$lang$applyTo = function(arglist__6735) {
      var x = cljs.core.first(arglist__6735);
      arglist__6735 = cljs.core.next(arglist__6735);
      var y = cljs.core.first(arglist__6735);
      var more = cljs.core.rest(arglist__6735);
      return G__6733__delegate(x, y, more);
    };
    G__6733.cljs$core$IFn$_invoke$arity$variadic = G__6733__delegate;
    return G__6733;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__6736 = null;
        if (arguments.length > 2) {
          var G__6737__i = 0, G__6737__a = new Array(arguments.length - 2);
          while (G__6737__i < G__6737__a.length) {
            G__6737__a[G__6737__i] = arguments[G__6737__i + 2];
            ++G__6737__i;
          }
          G__6736 = new cljs.core.IndexedSeq(G__6737__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6736);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6738__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__6738 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6739__i = 0, G__6739__a = new Array(arguments.length - 2);
        while (G__6739__i < G__6739__a.length) {
          G__6739__a[G__6739__i] = arguments[G__6739__i + 2];
          ++G__6739__i;
        }
        more = new cljs.core.IndexedSeq(G__6739__a, 0);
      }
      return G__6738__delegate.call(this, x, y, more);
    };
    G__6738.cljs$lang$maxFixedArity = 2;
    G__6738.cljs$lang$applyTo = function(arglist__6740) {
      var x = cljs.core.first(arglist__6740);
      arglist__6740 = cljs.core.next(arglist__6740);
      var y = cljs.core.first(arglist__6740);
      var more = cljs.core.rest(arglist__6740);
      return G__6738__delegate(x, y, more);
    };
    G__6738.cljs$core$IFn$_invoke$arity$variadic = G__6738__delegate;
    return G__6738;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__6741 = null;
        if (arguments.length > 2) {
          var G__6742__i = 0, G__6742__a = new Array(arguments.length - 2);
          while (G__6742__i < G__6742__a.length) {
            G__6742__a[G__6742__i] = arguments[G__6742__i + 2];
            ++G__6742__i;
          }
          G__6741 = new cljs.core.IndexedSeq(G__6742__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6741);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__6745 = x;
  var G__6746 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6745, G__6746) : cljs.core.mod.call(null, G__6745, G__6746);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__6747__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__6747 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6748__i = 0, G__6748__a = new Array(arguments.length - 2);
        while (G__6748__i < G__6748__a.length) {
          G__6748__a[G__6748__i] = arguments[G__6748__i + 2];
          ++G__6748__i;
        }
        more = new cljs.core.IndexedSeq(G__6748__a, 0);
      }
      return G__6747__delegate.call(this, x, y, more);
    };
    G__6747.cljs$lang$maxFixedArity = 2;
    G__6747.cljs$lang$applyTo = function(arglist__6749) {
      var x = cljs.core.first(arglist__6749);
      arglist__6749 = cljs.core.next(arglist__6749);
      var y = cljs.core.first(arglist__6749);
      var more = cljs.core.rest(arglist__6749);
      return G__6747__delegate(x, y, more);
    };
    G__6747.cljs$core$IFn$_invoke$arity$variadic = G__6747__delegate;
    return G__6747;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__6750 = null;
        if (arguments.length > 2) {
          var G__6751__i = 0, G__6751__a = new Array(arguments.length - 2);
          while (G__6751__i < G__6751__a.length) {
            G__6751__a[G__6751__i] = arguments[G__6751__i + 2];
            ++G__6751__i;
          }
          G__6750 = new cljs.core.IndexedSeq(G__6751__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6750);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__6752__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__6752 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6753__i = 0, G__6753__a = new Array(arguments.length - 2);
        while (G__6753__i < G__6753__a.length) {
          G__6753__a[G__6753__i] = arguments[G__6753__i + 2];
          ++G__6753__i;
        }
        more = new cljs.core.IndexedSeq(G__6753__a, 0);
      }
      return G__6752__delegate.call(this, x, y, more);
    };
    G__6752.cljs$lang$maxFixedArity = 2;
    G__6752.cljs$lang$applyTo = function(arglist__6754) {
      var x = cljs.core.first(arglist__6754);
      arglist__6754 = cljs.core.next(arglist__6754);
      var y = cljs.core.first(arglist__6754);
      var more = cljs.core.rest(arglist__6754);
      return G__6752__delegate(x, y, more);
    };
    G__6752.cljs$core$IFn$_invoke$arity$variadic = G__6752__delegate;
    return G__6752;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__6755 = null;
        if (arguments.length > 2) {
          var G__6756__i = 0, G__6756__a = new Array(arguments.length - 2);
          while (G__6756__i < G__6756__a.length) {
            G__6756__a[G__6756__i] = arguments[G__6756__i + 2];
            ++G__6756__i;
          }
          G__6755 = new cljs.core.IndexedSeq(G__6756__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6755);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__6759 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6759) : Math.floor.call(null, G__6759);
  } else {
    var G__6760 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6760) : Math.ceil.call(null, G__6760);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__6761__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__6761 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6762__i = 0, G__6762__a = new Array(arguments.length - 2);
        while (G__6762__i < G__6762__a.length) {
          G__6762__a[G__6762__i] = arguments[G__6762__i + 2];
          ++G__6762__i;
        }
        more = new cljs.core.IndexedSeq(G__6762__a, 0);
      }
      return G__6761__delegate.call(this, x, y, more);
    };
    G__6761.cljs$lang$maxFixedArity = 2;
    G__6761.cljs$lang$applyTo = function(arglist__6763) {
      var x = cljs.core.first(arglist__6763);
      arglist__6763 = cljs.core.next(arglist__6763);
      var y = cljs.core.first(arglist__6763);
      var more = cljs.core.rest(arglist__6763);
      return G__6761__delegate(x, y, more);
    };
    G__6761.cljs$core$IFn$_invoke$arity$variadic = G__6761__delegate;
    return G__6761;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__6764 = null;
        if (arguments.length > 2) {
          var G__6765__i = 0, G__6765__a = new Array(arguments.length - 2);
          while (G__6765__i < G__6765__a.length) {
            G__6765__a[G__6765__i] = arguments[G__6765__i + 2];
            ++G__6765__i;
          }
          G__6764 = new cljs.core.IndexedSeq(G__6765__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6764);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__6766__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__6766 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6767__i = 0, G__6767__a = new Array(arguments.length - 2);
        while (G__6767__i < G__6767__a.length) {
          G__6767__a[G__6767__i] = arguments[G__6767__i + 2];
          ++G__6767__i;
        }
        more = new cljs.core.IndexedSeq(G__6767__a, 0);
      }
      return G__6766__delegate.call(this, x, y, more);
    };
    G__6766.cljs$lang$maxFixedArity = 2;
    G__6766.cljs$lang$applyTo = function(arglist__6768) {
      var x = cljs.core.first(arglist__6768);
      arglist__6768 = cljs.core.next(arglist__6768);
      var y = cljs.core.first(arglist__6768);
      var more = cljs.core.rest(arglist__6768);
      return G__6766__delegate(x, y, more);
    };
    G__6766.cljs$core$IFn$_invoke$arity$variadic = G__6766__delegate;
    return G__6766;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__6769 = null;
        if (arguments.length > 2) {
          var G__6770__i = 0, G__6770__a = new Array(arguments.length - 2);
          while (G__6770__i < G__6770__a.length) {
            G__6770__a[G__6770__i] = arguments[G__6770__i + 2];
            ++G__6770__i;
          }
          G__6769 = new cljs.core.IndexedSeq(G__6770__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6769);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__6771__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__6771 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6772__i = 0, G__6772__a = new Array(arguments.length - 2);
        while (G__6772__i < G__6772__a.length) {
          G__6772__a[G__6772__i] = arguments[G__6772__i + 2];
          ++G__6772__i;
        }
        more = new cljs.core.IndexedSeq(G__6772__a, 0);
      }
      return G__6771__delegate.call(this, x, y, more);
    };
    G__6771.cljs$lang$maxFixedArity = 2;
    G__6771.cljs$lang$applyTo = function(arglist__6773) {
      var x = cljs.core.first(arglist__6773);
      arglist__6773 = cljs.core.next(arglist__6773);
      var y = cljs.core.first(arglist__6773);
      var more = cljs.core.rest(arglist__6773);
      return G__6771__delegate(x, y, more);
    };
    G__6771.cljs$core$IFn$_invoke$arity$variadic = G__6771__delegate;
    return G__6771;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__6774 = null;
        if (arguments.length > 2) {
          var G__6775__i = 0, G__6775__a = new Array(arguments.length - 2);
          while (G__6775__i < G__6775__a.length) {
            G__6775__a[G__6775__i] = arguments[G__6775__i + 2];
            ++G__6775__i;
          }
          G__6774 = new cljs.core.IndexedSeq(G__6775__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6774);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__6776__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__6776 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6777__i = 0, G__6777__a = new Array(arguments.length - 2);
        while (G__6777__i < G__6777__a.length) {
          G__6777__a[G__6777__i] = arguments[G__6777__i + 2];
          ++G__6777__i;
        }
        more = new cljs.core.IndexedSeq(G__6777__a, 0);
      }
      return G__6776__delegate.call(this, x, y, more);
    };
    G__6776.cljs$lang$maxFixedArity = 2;
    G__6776.cljs$lang$applyTo = function(arglist__6778) {
      var x = cljs.core.first(arglist__6778);
      arglist__6778 = cljs.core.next(arglist__6778);
      var y = cljs.core.first(arglist__6778);
      var more = cljs.core.rest(arglist__6778);
      return G__6776__delegate(x, y, more);
    };
    G__6776.cljs$core$IFn$_invoke$arity$variadic = G__6776__delegate;
    return G__6776;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__6779 = null;
        if (arguments.length > 2) {
          var G__6780__i = 0, G__6780__a = new Array(arguments.length - 2);
          while (G__6780__i < G__6780__a.length) {
            G__6780__a[G__6780__i] = arguments[G__6780__i + 2];
            ++G__6780__i;
          }
          G__6779 = new cljs.core.IndexedSeq(G__6780__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6779);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6785__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__6786 = y;
            var G__6787 = cljs.core.first(more);
            var G__6788 = cljs.core.next(more);
            x = G__6786;
            y = G__6787;
            more = G__6788;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6785 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6789__i = 0, G__6789__a = new Array(arguments.length - 2);
        while (G__6789__i < G__6789__a.length) {
          G__6789__a[G__6789__i] = arguments[G__6789__i + 2];
          ++G__6789__i;
        }
        more = new cljs.core.IndexedSeq(G__6789__a, 0);
      }
      return G__6785__delegate.call(this, x, y, more);
    };
    G__6785.cljs$lang$maxFixedArity = 2;
    G__6785.cljs$lang$applyTo = function(arglist__6790) {
      var x = cljs.core.first(arglist__6790);
      arglist__6790 = cljs.core.next(arglist__6790);
      var y = cljs.core.first(arglist__6790);
      var more = cljs.core.rest(arglist__6790);
      return G__6785__delegate(x, y, more);
    };
    G__6785.cljs$core$IFn$_invoke$arity$variadic = G__6785__delegate;
    return G__6785;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__6791 = null;
        if (arguments.length > 2) {
          var G__6792__i = 0, G__6792__a = new Array(arguments.length - 2);
          while (G__6792__i < G__6792__a.length) {
            G__6792__a[G__6792__i] = arguments[G__6792__i + 2];
            ++G__6792__i;
          }
          G__6791 = new cljs.core.IndexedSeq(G__6792__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6791);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6793 = n__$1 - 1;
      var G__6794 = cljs.core.next(xs);
      n__$1 = G__6793;
      xs = G__6794;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__6798 = x;
      return goog.string.buildString(G__6798);
    }
  };
  var str__2 = function() {
    var G__6799__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6800 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__6801 = cljs.core.next(more);
          sb = G__6800;
          more = G__6801;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6799 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__6802__i = 0, G__6802__a = new Array(arguments.length - 1);
        while (G__6802__i < G__6802__a.length) {
          G__6802__a[G__6802__i] = arguments[G__6802__i + 1];
          ++G__6802__i;
        }
        ys = new cljs.core.IndexedSeq(G__6802__a, 0);
      }
      return G__6799__delegate.call(this, x, ys);
    };
    G__6799.cljs$lang$maxFixedArity = 1;
    G__6799.cljs$lang$applyTo = function(arglist__6803) {
      var x = cljs.core.first(arglist__6803);
      var ys = cljs.core.rest(arglist__6803);
      return G__6799__delegate(x, ys);
    };
    G__6799.cljs$core$IFn$_invoke$arity$variadic = G__6799__delegate;
    return G__6799;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__6804 = null;
        if (arguments.length > 1) {
          var G__6805__i = 0, G__6805__a = new Array(arguments.length - 1);
          while (G__6805__i < G__6805__a.length) {
            G__6805__a[G__6805__i] = arguments[G__6805__i + 1];
            ++G__6805__i;
          }
          G__6804 = new cljs.core.IndexedSeq(G__6805__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6804);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__6806 = cljs.core.next(xs);
            var G__6807 = cljs.core.next(ys);
            xs = G__6806;
            ys = G__6807;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6808 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__6809 = cljs.core.next(s);
        res = G__6808;
        s = G__6809;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__6814 = (h + (cljs.core.hash(function() {
        var G__6812 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6812) : cljs.core.key.call(null, G__6812);
      }()) ^ cljs.core.hash(function() {
        var G__6813 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6813) : cljs.core.val.call(null, G__6813);
      }()))) % 4503599627370496;
      var G__6815 = cljs.core.next(s);
      h = G__6814;
      s = G__6815;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__6816 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__6817 = cljs.core.next(s__$1);
      h = G__6816;
      s__$1 = G__6817;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6828_6838 = cljs.core.seq(fn_map);
  var chunk__6829_6839 = null;
  var count__6830_6840 = 0;
  var i__6831_6841 = 0;
  while (true) {
    if (i__6831_6841 < count__6830_6840) {
      var vec__6832_6842 = chunk__6829_6839.cljs$core$IIndexed$_nth$arity$2(null, i__6831_6841);
      var key_name_6843 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6832_6842, 0, null);
      var f_6844 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6832_6842, 1, null);
      var str_name_6845 = function() {
        var G__6833 = key_name_6843;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6833) : cljs.core.name.call(null, G__6833);
      }();
      obj[str_name_6845] = f_6844;
      var G__6846 = seq__6828_6838;
      var G__6847 = chunk__6829_6839;
      var G__6848 = count__6830_6840;
      var G__6849 = i__6831_6841 + 1;
      seq__6828_6838 = G__6846;
      chunk__6829_6839 = G__6847;
      count__6830_6840 = G__6848;
      i__6831_6841 = G__6849;
      continue;
    } else {
      var temp__4126__auto___6850 = cljs.core.seq(seq__6828_6838);
      if (temp__4126__auto___6850) {
        var seq__6828_6851__$1 = temp__4126__auto___6850;
        if (cljs.core.chunked_seq_QMARK_(seq__6828_6851__$1)) {
          var c__4545__auto___6852 = function() {
            var G__6834 = seq__6828_6851__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6834) : cljs.core.chunk_first.call(null, G__6834);
          }();
          var G__6853 = function() {
            var G__6835 = seq__6828_6851__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6835) : cljs.core.chunk_rest.call(null, G__6835);
          }();
          var G__6854 = c__4545__auto___6852;
          var G__6855 = cljs.core.count(c__4545__auto___6852);
          var G__6856 = 0;
          seq__6828_6838 = G__6853;
          chunk__6829_6839 = G__6854;
          count__6830_6840 = G__6855;
          i__6831_6841 = G__6856;
          continue;
        } else {
          var vec__6836_6857 = cljs.core.first(seq__6828_6851__$1);
          var key_name_6858 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6836_6857, 0, null);
          var f_6859 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6836_6857, 1, null);
          var str_name_6860 = function() {
            var G__6837 = key_name_6858;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6837) : cljs.core.name.call(null, G__6837);
          }();
          obj[str_name_6860] = f_6859;
          var G__6861 = cljs.core.next(seq__6828_6851__$1);
          var G__6862 = null;
          var G__6863 = 0;
          var G__6864 = 0;
          seq__6828_6838 = G__6861;
          chunk__6829_6839 = G__6862;
          count__6830_6840 = G__6863;
          i__6831_6841 = G__6864;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6866 = coll;
  if (G__6866) {
    var bit__4439__auto__ = G__6866.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4439__auto__ || G__6866.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6866.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6866);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6866);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__6867 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__6867;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6868 = i - 1;
        var G__6869 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__6868;
        r = G__6869;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__6870__i = 0, G__6870__a = new Array(arguments.length - 0);
      while (G__6870__i < G__6870__a.length) {
        G__6870__a[G__6870__i] = arguments[G__6870__i + 0];
        ++G__6870__i;
      }
      xs = new cljs.core.IndexedSeq(G__6870__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6871) {
    var xs = cljs.core.seq(arglist__6871);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3758__auto__ = coll == null;
    if (or__3758__auto__) {
      return or__3758__auto__;
    } else {
      var G__6875 = coll;
      if (G__6875) {
        var bit__4432__auto__ = G__6875.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4432__auto__ || G__6875.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6877 = x;
  if (G__6877) {
    var bit__4439__auto__ = G__6877.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4439__auto__ || G__6877.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6877.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6877);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6877);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = cljs.core.not(a.ns);
      if (and__3746__auto__) {
        return b.ns;
      } else {
        return and__3746__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6884 = a.ns;
            var G__6885 = b.ns;
            return goog.array.defaultCompare(G__6884, G__6885);
          }();
          if (0 === nsc) {
            var G__6886 = a.name;
            var G__6887 = b.name;
            return goog.array.defaultCompare(G__6886, G__6887);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6888 = a.name;
        var G__6889 = b.name;
        return goog.array.defaultCompare(G__6888, G__6889);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4179__auto__ = self__._hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6891 = null;
  var G__6891__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__6891__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__6891 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6891__2.call(this, self__, coll);
      case 3:
        return G__6891__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6891.cljs$core$IFn$_invoke$arity$2 = G__6891__2;
  G__6891.cljs$core$IFn$_invoke$arity$3 = G__6891__3;
  return G__6891;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6890) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6890)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6893 = x;
    if (G__6893) {
      var bit__4432__auto__ = G__6893.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4432__auto__ || G__6893.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__6895 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6895) : cljs.core.name.call(null, G__6895);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6896 = ls.sval();
        ls = G__6896;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6898 = s;
    if (G__6898) {
      var bit__4432__auto__ = G__6898.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4432__auto__ || G__6898.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__6899 = cljs.core.next(s__$1);
      s__$1 = G__6899;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_6900 = 0;
  var xs_6901 = cljs.core.seq(coll);
  while (true) {
    if (xs_6901) {
      ret[i_6900] = cljs.core.to_array(cljs.core.first(xs_6901));
      var G__6902 = i_6900 + 1;
      var G__6903 = cljs.core.next(xs_6901);
      i_6900 = G__6902;
      xs_6901 = G__6903;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6906 = i + 1;
          var G__6907 = cljs.core.next(s__$1);
          i = G__6906;
          s__$1 = G__6907;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4645__auto___6908 = size;
      var i_6909 = 0;
      while (true) {
        if (i_6909 < n__4645__auto___6908) {
          a[i_6909] = init_val_or_seq;
          var G__6910 = i_6909 + 1;
          i_6909 = G__6910;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6913 = i + 1;
          var G__6914 = cljs.core.next(s__$1);
          i = G__6913;
          s__$1 = G__6914;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4645__auto___6915 = size;
      var i_6916 = 0;
      while (true) {
        if (i_6916 < n__4645__auto___6915) {
          a[i_6916] = init_val_or_seq;
          var G__6917 = i_6916 + 1;
          i_6916 = G__6917;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6920 = i + 1;
          var G__6921 = cljs.core.next(s__$1);
          i = G__6920;
          s__$1 = G__6921;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4645__auto___6922 = size;
      var i_6923 = 0;
      while (true) {
        if (i_6923 < n__4645__auto___6922) {
          a[i_6923] = init_val_or_seq;
          var G__6924 = i_6923 + 1;
          i_6923 = G__6924;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6927 = i + 1;
          var G__6928 = cljs.core.next(s__$1);
          i = G__6927;
          s__$1 = G__6928;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4645__auto___6929 = size;
      var i_6930 = 0;
      while (true) {
        if (i_6930 < n__4645__auto___6929) {
          a[i_6930] = init_val_or_seq;
          var G__6931 = i_6930 + 1;
          i_6930 = G__6931;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__6932 = cljs.core.next(s__$1);
        var G__6933 = i - 1;
        var G__6934 = sum + 1;
        s__$1 = G__6932;
        i = G__6933;
        sum = G__6934;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6954__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__6954 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__6955__i = 0, G__6955__a = new Array(arguments.length - 2);
        while (G__6955__i < G__6955__a.length) {
          G__6955__a[G__6955__i] = arguments[G__6955__i + 2];
          ++G__6955__i;
        }
        zs = new cljs.core.IndexedSeq(G__6955__a, 0);
      }
      return G__6954__delegate.call(this, x, y, zs);
    };
    G__6954.cljs$lang$maxFixedArity = 2;
    G__6954.cljs$lang$applyTo = function(arglist__6956) {
      var x = cljs.core.first(arglist__6956);
      arglist__6956 = cljs.core.next(arglist__6956);
      var y = cljs.core.first(arglist__6956);
      var zs = cljs.core.rest(arglist__6956);
      return G__6954__delegate(x, y, zs);
    };
    G__6954.cljs$core$IFn$_invoke$arity$variadic = G__6954__delegate;
    return G__6954;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__6957 = null;
        if (arguments.length > 2) {
          var G__6958__i = 0, G__6958__a = new Array(arguments.length - 2);
          while (G__6958__i < G__6958__a.length) {
            G__6958__a[G__6958__i] = arguments[G__6958__i + 2];
            ++G__6958__i;
          }
          G__6957 = new cljs.core.IndexedSeq(G__6958__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6957);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__6959__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__6959 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__6960__i = 0, G__6960__a = new Array(arguments.length - 4);
        while (G__6960__i < G__6960__a.length) {
          G__6960__a[G__6960__i] = arguments[G__6960__i + 4];
          ++G__6960__i;
        }
        more = new cljs.core.IndexedSeq(G__6960__a, 0);
      }
      return G__6959__delegate.call(this, a, b, c, d, more);
    };
    G__6959.cljs$lang$maxFixedArity = 4;
    G__6959.cljs$lang$applyTo = function(arglist__6961) {
      var a = cljs.core.first(arglist__6961);
      arglist__6961 = cljs.core.next(arglist__6961);
      var b = cljs.core.first(arglist__6961);
      arglist__6961 = cljs.core.next(arglist__6961);
      var c = cljs.core.first(arglist__6961);
      arglist__6961 = cljs.core.next(arglist__6961);
      var d = cljs.core.first(arglist__6961);
      var more = cljs.core.rest(arglist__6961);
      return G__6959__delegate(a, b, c, d, more);
    };
    G__6959.cljs$core$IFn$_invoke$arity$variadic = G__6959__delegate;
    return G__6959;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__6962 = null;
        if (arguments.length > 4) {
          var G__6963__i = 0, G__6963__a = new Array(arguments.length - 4);
          while (G__6963__i < G__6963__a.length) {
            G__6963__a[G__6963__i] = arguments[G__6963__i + 4];
            ++G__6963__i;
          }
          G__6962 = new cljs.core.IndexedSeq(G__6963__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__6962);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6964__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6965 = ntcoll;
          var G__6966 = cljs.core.first(vals);
          var G__6967 = cljs.core.next(vals);
          tcoll = G__6965;
          val = G__6966;
          vals = G__6967;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6964 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6968__i = 0, G__6968__a = new Array(arguments.length - 2);
        while (G__6968__i < G__6968__a.length) {
          G__6968__a[G__6968__i] = arguments[G__6968__i + 2];
          ++G__6968__i;
        }
        vals = new cljs.core.IndexedSeq(G__6968__a, 0);
      }
      return G__6964__delegate.call(this, tcoll, val, vals);
    };
    G__6964.cljs$lang$maxFixedArity = 2;
    G__6964.cljs$lang$applyTo = function(arglist__6969) {
      var tcoll = cljs.core.first(arglist__6969);
      arglist__6969 = cljs.core.next(arglist__6969);
      var val = cljs.core.first(arglist__6969);
      var vals = cljs.core.rest(arglist__6969);
      return G__6964__delegate(tcoll, val, vals);
    };
    G__6964.cljs$core$IFn$_invoke$arity$variadic = G__6964__delegate;
    return G__6964;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__6970 = null;
        if (arguments.length > 2) {
          var G__6971__i = 0, G__6971__a = new Array(arguments.length - 2);
          while (G__6971__i < G__6971__a.length) {
            G__6971__a[G__6971__i] = arguments[G__6971__i + 2];
            ++G__6971__i;
          }
          G__6970 = new cljs.core.IndexedSeq(G__6971__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6970);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6972__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6973 = ntcoll;
          var G__6974 = cljs.core.first(kvs);
          var G__6975 = cljs.core.second(kvs);
          var G__6976 = cljs.core.nnext(kvs);
          tcoll = G__6973;
          key = G__6974;
          val = G__6975;
          kvs = G__6976;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6972 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__6977__i = 0, G__6977__a = new Array(arguments.length - 3);
        while (G__6977__i < G__6977__a.length) {
          G__6977__a[G__6977__i] = arguments[G__6977__i + 3];
          ++G__6977__i;
        }
        kvs = new cljs.core.IndexedSeq(G__6977__a, 0);
      }
      return G__6972__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6972.cljs$lang$maxFixedArity = 3;
    G__6972.cljs$lang$applyTo = function(arglist__6978) {
      var tcoll = cljs.core.first(arglist__6978);
      arglist__6978 = cljs.core.next(arglist__6978);
      var key = cljs.core.first(arglist__6978);
      arglist__6978 = cljs.core.next(arglist__6978);
      var val = cljs.core.first(arglist__6978);
      var kvs = cljs.core.rest(arglist__6978);
      return G__6972__delegate(tcoll, key, val, kvs);
    };
    G__6972.cljs$core$IFn$_invoke$arity$variadic = G__6972__delegate;
    return G__6972;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__6979 = null;
        if (arguments.length > 3) {
          var G__6980__i = 0, G__6980__a = new Array(arguments.length - 3);
          while (G__6980__i < G__6980__a.length) {
            G__6980__a[G__6980__i] = arguments[G__6980__i + 3];
            ++G__6980__i;
          }
          G__6979 = new cljs.core.IndexedSeq(G__6980__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__6979);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6981__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6982 = ntcoll;
          var G__6983 = cljs.core.first(ks);
          var G__6984 = cljs.core.next(ks);
          tcoll = G__6982;
          key = G__6983;
          ks = G__6984;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6981 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6985__i = 0, G__6985__a = new Array(arguments.length - 2);
        while (G__6985__i < G__6985__a.length) {
          G__6985__a[G__6985__i] = arguments[G__6985__i + 2];
          ++G__6985__i;
        }
        ks = new cljs.core.IndexedSeq(G__6985__a, 0);
      }
      return G__6981__delegate.call(this, tcoll, key, ks);
    };
    G__6981.cljs$lang$maxFixedArity = 2;
    G__6981.cljs$lang$applyTo = function(arglist__6986) {
      var tcoll = cljs.core.first(arglist__6986);
      arglist__6986 = cljs.core.next(arglist__6986);
      var key = cljs.core.first(arglist__6986);
      var ks = cljs.core.rest(arglist__6986);
      return G__6981__delegate(tcoll, key, ks);
    };
    G__6981.cljs$core$IFn$_invoke$arity$variadic = G__6981__delegate;
    return G__6981;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__6987 = null;
        if (arguments.length > 2) {
          var G__6988__i = 0, G__6988__a = new Array(arguments.length - 2);
          while (G__6988__i < G__6988__a.length) {
            G__6988__a[G__6988__i] = arguments[G__6988__i + 2];
            ++G__6988__i;
          }
          G__6987 = new cljs.core.IndexedSeq(G__6988__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__6987);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6989__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6990 = ntcoll;
          var G__6991 = cljs.core.first(vals);
          var G__6992 = cljs.core.next(vals);
          tcoll = G__6990;
          val = G__6991;
          vals = G__6992;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6989 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6993__i = 0, G__6993__a = new Array(arguments.length - 2);
        while (G__6993__i < G__6993__a.length) {
          G__6993__a[G__6993__i] = arguments[G__6993__i + 2];
          ++G__6993__i;
        }
        vals = new cljs.core.IndexedSeq(G__6993__a, 0);
      }
      return G__6989__delegate.call(this, tcoll, val, vals);
    };
    G__6989.cljs$lang$maxFixedArity = 2;
    G__6989.cljs$lang$applyTo = function(arglist__6994) {
      var tcoll = cljs.core.first(arglist__6994);
      arglist__6994 = cljs.core.next(arglist__6994);
      var val = cljs.core.first(arglist__6994);
      var vals = cljs.core.rest(arglist__6994);
      return G__6989__delegate(tcoll, val, vals);
    };
    G__6989.cljs$core$IFn$_invoke$arity$variadic = G__6989__delegate;
    return G__6989;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__6995 = null;
        if (arguments.length > 2) {
          var G__6996__i = 0, G__6996__a = new Array(arguments.length - 2);
          while (G__6996__i < G__6996__a.length) {
            G__6996__a[G__6996__i] = arguments[G__6996__i + 2];
            ++G__6996__i;
          }
          G__6995 = new cljs.core.IndexedSeq(G__6996__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6995);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4689 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4689);
      } else {
        var G__7207 = a4689;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7207) : f.call(null, G__7207);
      }
    } else {
      var b4690 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4689, b4690);
        } else {
          var G__7208 = a4689;
          var G__7209 = b4690;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7208, G__7209) : f.call(null, G__7208, G__7209);
        }
      } else {
        var c4691 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4689, b4690, c4691);
          } else {
            var G__7210 = a4689;
            var G__7211 = b4690;
            var G__7212 = c4691;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7210, G__7211, G__7212) : f.call(null, G__7210, G__7211, G__7212);
          }
        } else {
          var d4692 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4689, b4690, c4691, d4692);
            } else {
              var G__7213 = a4689;
              var G__7214 = b4690;
              var G__7215 = c4691;
              var G__7216 = d4692;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7213, G__7214, G__7215, G__7216) : f.call(null, G__7213, G__7214, G__7215, G__7216);
            }
          } else {
            var e4693 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4689, b4690, c4691, d4692, e4693);
              } else {
                var G__7217 = a4689;
                var G__7218 = b4690;
                var G__7219 = c4691;
                var G__7220 = d4692;
                var G__7221 = e4693;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7217, G__7218, G__7219, G__7220, G__7221) : f.call(null, G__7217, G__7218, G__7219, G__7220, G__7221);
              }
            } else {
              var f4694 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4689, b4690, c4691, d4692, e4693, f4694);
                } else {
                  var G__7222 = a4689;
                  var G__7223 = b4690;
                  var G__7224 = c4691;
                  var G__7225 = d4692;
                  var G__7226 = e4693;
                  var G__7227 = f4694;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7222, G__7223, G__7224, G__7225, G__7226, G__7227) : f.call(null, G__7222, G__7223, G__7224, G__7225, G__7226, G__7227);
                }
              } else {
                var g4695 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4689, b4690, c4691, d4692, e4693, f4694, g4695);
                  } else {
                    var G__7228 = a4689;
                    var G__7229 = b4690;
                    var G__7230 = c4691;
                    var G__7231 = d4692;
                    var G__7232 = e4693;
                    var G__7233 = f4694;
                    var G__7234 = g4695;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7228, G__7229, G__7230, G__7231, G__7232, G__7233, G__7234) : f.call(null, G__7228, G__7229, G__7230, G__7231, G__7232, G__7233, G__7234);
                  }
                } else {
                  var h4696 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696);
                    } else {
                      var G__7235 = a4689;
                      var G__7236 = b4690;
                      var G__7237 = c4691;
                      var G__7238 = d4692;
                      var G__7239 = e4693;
                      var G__7240 = f4694;
                      var G__7241 = g4695;
                      var G__7242 = h4696;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7235, G__7236, G__7237, G__7238, G__7239, G__7240, G__7241, G__7242) : f.call(null, G__7235, G__7236, G__7237, G__7238, G__7239, G__7240, G__7241, G__7242);
                    }
                  } else {
                    var i4697 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697);
                      } else {
                        var G__7243 = a4689;
                        var G__7244 = b4690;
                        var G__7245 = c4691;
                        var G__7246 = d4692;
                        var G__7247 = e4693;
                        var G__7248 = f4694;
                        var G__7249 = g4695;
                        var G__7250 = h4696;
                        var G__7251 = i4697;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7243, G__7244, G__7245, G__7246, G__7247, G__7248, G__7249, G__7250, G__7251) : f.call(null, G__7243, G__7244, G__7245, G__7246, G__7247, G__7248, G__7249, G__7250, G__7251);
                      }
                    } else {
                      var j4698 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698);
                        } else {
                          var G__7252 = a4689;
                          var G__7253 = b4690;
                          var G__7254 = c4691;
                          var G__7255 = d4692;
                          var G__7256 = e4693;
                          var G__7257 = f4694;
                          var G__7258 = g4695;
                          var G__7259 = h4696;
                          var G__7260 = i4697;
                          var G__7261 = j4698;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7252, G__7253, G__7254, G__7255, G__7256, G__7257, G__7258, G__7259, G__7260, G__7261) : f.call(null, G__7252, G__7253, G__7254, G__7255, G__7256, G__7257, G__7258, G__7259, G__7260, G__7261);
                        }
                      } else {
                        var k4699 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699);
                          } else {
                            var G__7262 = a4689;
                            var G__7263 = b4690;
                            var G__7264 = c4691;
                            var G__7265 = d4692;
                            var G__7266 = e4693;
                            var G__7267 = f4694;
                            var G__7268 = g4695;
                            var G__7269 = h4696;
                            var G__7270 = i4697;
                            var G__7271 = j4698;
                            var G__7272 = k4699;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7262, G__7263, G__7264, G__7265, G__7266, G__7267, G__7268, G__7269, G__7270, G__7271, G__7272) : f.call(null, G__7262, G__7263, G__7264, G__7265, G__7266, G__7267, G__7268, G__7269, G__7270, G__7271, G__7272);
                          }
                        } else {
                          var l4700 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700);
                            } else {
                              var G__7273 = a4689;
                              var G__7274 = b4690;
                              var G__7275 = c4691;
                              var G__7276 = d4692;
                              var G__7277 = e4693;
                              var G__7278 = f4694;
                              var G__7279 = g4695;
                              var G__7280 = h4696;
                              var G__7281 = i4697;
                              var G__7282 = j4698;
                              var G__7283 = k4699;
                              var G__7284 = l4700;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7273, G__7274, G__7275, G__7276, G__7277, G__7278, G__7279, G__7280, G__7281, G__7282, G__7283, G__7284) : f.call(null, G__7273, G__7274, G__7275, G__7276, G__7277, G__7278, G__7279, G__7280, G__7281, G__7282, G__7283, G__7284);
                            }
                          } else {
                            var m4701 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701);
                              } else {
                                var G__7285 = a4689;
                                var G__7286 = b4690;
                                var G__7287 = c4691;
                                var G__7288 = d4692;
                                var G__7289 = e4693;
                                var G__7290 = f4694;
                                var G__7291 = g4695;
                                var G__7292 = h4696;
                                var G__7293 = i4697;
                                var G__7294 = j4698;
                                var G__7295 = k4699;
                                var G__7296 = l4700;
                                var G__7297 = m4701;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7285, G__7286, G__7287, G__7288, G__7289, G__7290, G__7291, G__7292, G__7293, G__7294, G__7295, G__7296, G__7297) : f.call(null, G__7285, G__7286, G__7287, G__7288, G__7289, G__7290, G__7291, G__7292, G__7293, G__7294, G__7295, G__7296, G__7297);
                              }
                            } else {
                              var n4702 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702);
                                } else {
                                  var G__7298 = a4689;
                                  var G__7299 = b4690;
                                  var G__7300 = c4691;
                                  var G__7301 = d4692;
                                  var G__7302 = e4693;
                                  var G__7303 = f4694;
                                  var G__7304 = g4695;
                                  var G__7305 = h4696;
                                  var G__7306 = i4697;
                                  var G__7307 = j4698;
                                  var G__7308 = k4699;
                                  var G__7309 = l4700;
                                  var G__7310 = m4701;
                                  var G__7311 = n4702;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7298, G__7299, G__7300, G__7301, G__7302, G__7303, G__7304, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310, G__7311) : f.call(null, G__7298, G__7299, G__7300, G__7301, G__7302, G__7303, G__7304, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310, G__7311);
                                }
                              } else {
                                var o4703 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702, o4703);
                                  } else {
                                    var G__7312 = a4689;
                                    var G__7313 = b4690;
                                    var G__7314 = c4691;
                                    var G__7315 = d4692;
                                    var G__7316 = e4693;
                                    var G__7317 = f4694;
                                    var G__7318 = g4695;
                                    var G__7319 = h4696;
                                    var G__7320 = i4697;
                                    var G__7321 = j4698;
                                    var G__7322 = k4699;
                                    var G__7323 = l4700;
                                    var G__7324 = m4701;
                                    var G__7325 = n4702;
                                    var G__7326 = o4703;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7312, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326) : f.call(null, G__7312, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326);
                                  }
                                } else {
                                  var p4704 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702, o4703, p4704);
                                    } else {
                                      var G__7327 = a4689;
                                      var G__7328 = b4690;
                                      var G__7329 = c4691;
                                      var G__7330 = d4692;
                                      var G__7331 = e4693;
                                      var G__7332 = f4694;
                                      var G__7333 = g4695;
                                      var G__7334 = h4696;
                                      var G__7335 = i4697;
                                      var G__7336 = j4698;
                                      var G__7337 = k4699;
                                      var G__7338 = l4700;
                                      var G__7339 = m4701;
                                      var G__7340 = n4702;
                                      var G__7341 = o4703;
                                      var G__7342 = p4704;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337, G__7338, G__7339, G__7340, G__7341, G__7342) : f.call(null, G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337, G__7338, G__7339, G__7340, G__7341, G__7342);
                                    }
                                  } else {
                                    var q4705 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702, o4703, p4704, q4705);
                                      } else {
                                        var G__7343 = a4689;
                                        var G__7344 = b4690;
                                        var G__7345 = c4691;
                                        var G__7346 = d4692;
                                        var G__7347 = e4693;
                                        var G__7348 = f4694;
                                        var G__7349 = g4695;
                                        var G__7350 = h4696;
                                        var G__7351 = i4697;
                                        var G__7352 = j4698;
                                        var G__7353 = k4699;
                                        var G__7354 = l4700;
                                        var G__7355 = m4701;
                                        var G__7356 = n4702;
                                        var G__7357 = o4703;
                                        var G__7358 = p4704;
                                        var G__7359 = q4705;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349, G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359) : f.call(null, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349, G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359);
                                      }
                                    } else {
                                      var r4706 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702, o4703, p4704, q4705, r4706);
                                        } else {
                                          var G__7360 = a4689;
                                          var G__7361 = b4690;
                                          var G__7362 = c4691;
                                          var G__7363 = d4692;
                                          var G__7364 = e4693;
                                          var G__7365 = f4694;
                                          var G__7366 = g4695;
                                          var G__7367 = h4696;
                                          var G__7368 = i4697;
                                          var G__7369 = j4698;
                                          var G__7370 = k4699;
                                          var G__7371 = l4700;
                                          var G__7372 = m4701;
                                          var G__7373 = n4702;
                                          var G__7374 = o4703;
                                          var G__7375 = p4704;
                                          var G__7376 = q4705;
                                          var G__7377 = r4706;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7360, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376, G__7377) : f.call(null, G__7360, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376, G__7377);
                                        }
                                      } else {
                                        var s4707 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702, o4703, p4704, q4705, r4706, s4707);
                                          } else {
                                            var G__7378 = a4689;
                                            var G__7379 = b4690;
                                            var G__7380 = c4691;
                                            var G__7381 = d4692;
                                            var G__7382 = e4693;
                                            var G__7383 = f4694;
                                            var G__7384 = g4695;
                                            var G__7385 = h4696;
                                            var G__7386 = i4697;
                                            var G__7387 = j4698;
                                            var G__7388 = k4699;
                                            var G__7389 = l4700;
                                            var G__7390 = m4701;
                                            var G__7391 = n4702;
                                            var G__7392 = o4703;
                                            var G__7393 = p4704;
                                            var G__7394 = q4705;
                                            var G__7395 = r4706;
                                            var G__7396 = s4707;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387, G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396) : f.call(null, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387, G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396);
                                          }
                                        } else {
                                          var t4708 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4689, b4690, c4691, d4692, e4693, f4694, g4695, h4696, i4697, j4698, k4699, l4700, m4701, n4702, o4703, p4704, q4705, r4706, s4707, t4708);
                                            } else {
                                              var G__7397 = a4689;
                                              var G__7398 = b4690;
                                              var G__7399 = c4691;
                                              var G__7400 = d4692;
                                              var G__7401 = e4693;
                                              var G__7402 = f4694;
                                              var G__7403 = g4695;
                                              var G__7404 = h4696;
                                              var G__7405 = i4697;
                                              var G__7406 = j4698;
                                              var G__7407 = k4699;
                                              var G__7408 = l4700;
                                              var G__7409 = m4701;
                                              var G__7410 = n4702;
                                              var G__7411 = o4703;
                                              var G__7412 = p4704;
                                              var G__7413 = q4705;
                                              var G__7414 = r4706;
                                              var G__7415 = s4707;
                                              var G__7416 = t4708;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403, G__7404, G__7405, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416) : f.call(null, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403, G__7404, G__7405, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__7417__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__7417 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__7418__i = 0, G__7418__a = new Array(arguments.length - 5);
        while (G__7418__i < G__7418__a.length) {
          G__7418__a[G__7418__i] = arguments[G__7418__i + 5];
          ++G__7418__i;
        }
        args = new cljs.core.IndexedSeq(G__7418__a, 0);
      }
      return G__7417__delegate.call(this, f, a, b, c, d, args);
    };
    G__7417.cljs$lang$maxFixedArity = 5;
    G__7417.cljs$lang$applyTo = function(arglist__7419) {
      var f = cljs.core.first(arglist__7419);
      arglist__7419 = cljs.core.next(arglist__7419);
      var a = cljs.core.first(arglist__7419);
      arglist__7419 = cljs.core.next(arglist__7419);
      var b = cljs.core.first(arglist__7419);
      arglist__7419 = cljs.core.next(arglist__7419);
      var c = cljs.core.first(arglist__7419);
      arglist__7419 = cljs.core.next(arglist__7419);
      var d = cljs.core.first(arglist__7419);
      var args = cljs.core.rest(arglist__7419);
      return G__7417__delegate(f, a, b, c, d, args);
    };
    G__7417.cljs$core$IFn$_invoke$arity$variadic = G__7417__delegate;
    return G__7417;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__7420 = null;
        if (arguments.length > 5) {
          var G__7421__i = 0, G__7421__a = new Array(arguments.length - 5);
          while (G__7421__i < G__7421__a.length) {
            G__7421__a[G__7421__i] = arguments[G__7421__i + 5];
            ++G__7421__i;
          }
          G__7420 = new cljs.core.IndexedSeq(G__7421__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__7420);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__7437 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7437) : f.call(null, G__7437);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__7438 = cljs.core.meta(obj);
      var G__7439 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7438, G__7439) : f.call(null, G__7438, G__7439);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__7440 = cljs.core.meta(obj);
      var G__7441 = a;
      var G__7442 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7440, G__7441, G__7442) : f.call(null, G__7440, G__7441, G__7442);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__7443 = cljs.core.meta(obj);
      var G__7444 = a;
      var G__7445 = b;
      var G__7446 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7443, G__7444, G__7445, G__7446) : f.call(null, G__7443, G__7444, G__7445, G__7446);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__7447 = cljs.core.meta(obj);
      var G__7448 = a;
      var G__7449 = b;
      var G__7450 = c;
      var G__7451 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7447, G__7448, G__7449, G__7450, G__7451) : f.call(null, G__7447, G__7448, G__7449, G__7450, G__7451);
    }());
  };
  var vary_meta__7 = function() {
    var G__7452__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__7452 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__7453__i = 0, G__7453__a = new Array(arguments.length - 6);
        while (G__7453__i < G__7453__a.length) {
          G__7453__a[G__7453__i] = arguments[G__7453__i + 6];
          ++G__7453__i;
        }
        args = new cljs.core.IndexedSeq(G__7453__a, 0);
      }
      return G__7452__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__7452.cljs$lang$maxFixedArity = 6;
    G__7452.cljs$lang$applyTo = function(arglist__7454) {
      var obj = cljs.core.first(arglist__7454);
      arglist__7454 = cljs.core.next(arglist__7454);
      var f = cljs.core.first(arglist__7454);
      arglist__7454 = cljs.core.next(arglist__7454);
      var a = cljs.core.first(arglist__7454);
      arglist__7454 = cljs.core.next(arglist__7454);
      var b = cljs.core.first(arglist__7454);
      arglist__7454 = cljs.core.next(arglist__7454);
      var c = cljs.core.first(arglist__7454);
      arglist__7454 = cljs.core.next(arglist__7454);
      var d = cljs.core.first(arglist__7454);
      var args = cljs.core.rest(arglist__7454);
      return G__7452__delegate(obj, f, a, b, c, d, args);
    };
    G__7452.cljs$core$IFn$_invoke$arity$variadic = G__7452__delegate;
    return G__7452;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__7455 = null;
        if (arguments.length > 6) {
          var G__7456__i = 0, G__7456__a = new Array(arguments.length - 6);
          while (G__7456__i < G__7456__a.length) {
            G__7456__a[G__7456__i] = arguments[G__7456__i + 6];
            ++G__7456__i;
          }
          G__7455 = new cljs.core.IndexedSeq(G__7456__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__7455);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__7457__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__7457 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__7458__i = 0, G__7458__a = new Array(arguments.length - 2);
        while (G__7458__i < G__7458__a.length) {
          G__7458__a[G__7458__i] = arguments[G__7458__i + 2];
          ++G__7458__i;
        }
        more = new cljs.core.IndexedSeq(G__7458__a, 0);
      }
      return G__7457__delegate.call(this, x, y, more);
    };
    G__7457.cljs$lang$maxFixedArity = 2;
    G__7457.cljs$lang$applyTo = function(arglist__7459) {
      var x = cljs.core.first(arglist__7459);
      arglist__7459 = cljs.core.next(arglist__7459);
      var y = cljs.core.first(arglist__7459);
      var more = cljs.core.rest(arglist__7459);
      return G__7457__delegate(x, y, more);
    };
    G__7457.cljs$core$IFn$_invoke$arity$variadic = G__7457__delegate;
    return G__7457;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__7460 = null;
        if (arguments.length > 2) {
          var G__7461__i = 0, G__7461__a = new Array(arguments.length - 2);
          while (G__7461__i < G__7461__a.length) {
            G__7461__a[G__7461__i] = arguments[G__7461__i + 2];
            ++G__7461__i;
          }
          G__7460 = new cljs.core.IndexedSeq(G__7461__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7460);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t7465 !== "undefined") {
  } else {
    cljs.core.t7465 = function(nil_iter, meta7466) {
      this.nil_iter = nil_iter;
      this.meta7466 = meta7466;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t7465.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t7465.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t7465.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t7465.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7467) {
      var self__ = this;
      var _7467__$1 = this;
      return self__.meta7466;
    };
    cljs.core.t7465.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7467, meta7466__$1) {
      var self__ = this;
      var _7467__$1 = this;
      return new cljs.core.t7465(self__.nil_iter, meta7466__$1);
    };
    cljs.core.t7465.cljs$lang$type = true;
    cljs.core.t7465.cljs$lang$ctorStr = "cljs.core/t7465";
    cljs.core.t7465.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
      return cljs.core._write(writer__4346__auto__, "cljs.core/t7465");
    };
    cljs.core.__GT_t7465 = function __GT_t7465(nil_iter__$1, meta7466) {
      return new cljs.core.t7465(nil_iter__$1, meta7466);
    };
  }
  return new cljs.core.t7465(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/veen/Projects/clojure/tic-tac-toe/target/base+system+user+dev/cljsbuild-compiler-0/cljs/core.cljs"], 
  null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = !(lt.stepper == null);
      if (and__3746__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3746__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7468 = lt;
        var G__7469 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7468, G__7469) : self__.xform.call(null, G__7468, G__7469);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7470 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7470) : self__.xform.call(null, G__7470);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__7472 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7472) : xform.call(null, G__7472);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7474 = cljs.core.next(iters__$1);
        iters__$1 = G__7474;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4645__auto___7475 = self__.iters.length;
  var i_7476 = 0;
  while (true) {
    if (i_7476 < n__4645__auto___7475) {
      self__.nexts[i_7476] = self__.iters[i_7476].next();
      var G__7477 = i_7476 + 1;
      i_7476 = G__7477;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = !(lt.stepper == null);
      if (and__3746__auto__) {
        return this$.hasNext();
      } else {
        return and__3746__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7473 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7473) : self__.xform.call(null, G__7473);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__7482 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7482) : xform.call(null, G__7482);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7483_7487 = cljs.core.seq(colls);
  var chunk__7484_7488 = null;
  var count__7485_7489 = 0;
  var i__7486_7490 = 0;
  while (true) {
    if (i__7486_7490 < count__7485_7489) {
      var coll_7491 = chunk__7484_7488.cljs$core$IIndexed$_nth$arity$2(null, i__7486_7490);
      iters.push(cljs.core.iter(coll_7491));
      var G__7492 = seq__7483_7487;
      var G__7493 = chunk__7484_7488;
      var G__7494 = count__7485_7489;
      var G__7495 = i__7486_7490 + 1;
      seq__7483_7487 = G__7492;
      chunk__7484_7488 = G__7493;
      count__7485_7489 = G__7494;
      i__7486_7490 = G__7495;
      continue;
    } else {
      var temp__4126__auto___7496 = cljs.core.seq(seq__7483_7487);
      if (temp__4126__auto___7496) {
        var seq__7483_7497__$1 = temp__4126__auto___7496;
        if (cljs.core.chunked_seq_QMARK_(seq__7483_7497__$1)) {
          var c__4545__auto___7498 = cljs.core.chunk_first(seq__7483_7497__$1);
          var G__7499 = cljs.core.chunk_rest(seq__7483_7497__$1);
          var G__7500 = c__4545__auto___7498;
          var G__7501 = cljs.core.count(c__4545__auto___7498);
          var G__7502 = 0;
          seq__7483_7487 = G__7499;
          chunk__7484_7488 = G__7500;
          count__7485_7489 = G__7501;
          i__7486_7490 = G__7502;
          continue;
        } else {
          var coll_7503 = cljs.core.first(seq__7483_7497__$1);
          iters.push(cljs.core.iter(coll_7503));
          var G__7504 = cljs.core.next(seq__7483_7497__$1);
          var G__7505 = null;
          var G__7506 = 0;
          var G__7507 = 0;
          seq__7483_7487 = G__7504;
          chunk__7484_7488 = G__7505;
          count__7485_7489 = G__7506;
          i__7486_7490 = G__7507;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3758__auto__ = cljs.core.seq(coll);
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__7508__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__7508 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__7509__i = 0, G__7509__a = new Array(arguments.length - 2);
        while (G__7509__i < G__7509__a.length) {
          G__7509__a[G__7509__i] = arguments[G__7509__i + 2];
          ++G__7509__i;
        }
        colls = new cljs.core.IndexedSeq(G__7509__a, 0);
      }
      return G__7508__delegate.call(this, xform, coll, colls);
    };
    G__7508.cljs$lang$maxFixedArity = 2;
    G__7508.cljs$lang$applyTo = function(arglist__7510) {
      var xform = cljs.core.first(arglist__7510);
      arglist__7510 = cljs.core.next(arglist__7510);
      var coll = cljs.core.first(arglist__7510);
      var colls = cljs.core.rest(arglist__7510);
      return G__7508__delegate(xform, coll, colls);
    };
    G__7508.cljs$core$IFn$_invoke$arity$variadic = G__7508__delegate;
    return G__7508;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__7511 = null;
        if (arguments.length > 2) {
          var G__7512__i = 0, G__7512__a = new Array(arguments.length - 2);
          while (G__7512__i < G__7512__a.length) {
            G__7512__a[G__7512__i] = arguments[G__7512__i + 2];
            ++G__7512__i;
          }
          G__7511 = new cljs.core.IndexedSeq(G__7512__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__7511);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7514 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7514) : pred.call(null, G__7514);
      }())) {
        var G__7515 = pred;
        var G__7516 = cljs.core.next(coll);
        pred = G__7515;
        coll = G__7516;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3758__auto__ = function() {
        var G__7520 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7520) : pred.call(null, G__7520);
      }();
      if (cljs.core.truth_(or__3758__auto__)) {
        return or__3758__auto__;
      } else {
        var G__7521 = pred;
        var G__7522 = cljs.core.next(coll);
        pred = G__7521;
        coll = G__7522;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__7529 = null;
    var G__7529__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__7529__1 = function(x) {
      return cljs.core.not(function() {
        var G__7526 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7526) : f.call(null, G__7526);
      }());
    };
    var G__7529__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__7527 = x;
        var G__7528 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7527, G__7528) : f.call(null, G__7527, G__7528);
      }());
    };
    var G__7529__3 = function() {
      var G__7530__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7530 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7531__i = 0, G__7531__a = new Array(arguments.length - 2);
          while (G__7531__i < G__7531__a.length) {
            G__7531__a[G__7531__i] = arguments[G__7531__i + 2];
            ++G__7531__i;
          }
          zs = new cljs.core.IndexedSeq(G__7531__a, 0);
        }
        return G__7530__delegate.call(this, x, y, zs);
      };
      G__7530.cljs$lang$maxFixedArity = 2;
      G__7530.cljs$lang$applyTo = function(arglist__7532) {
        var x = cljs.core.first(arglist__7532);
        arglist__7532 = cljs.core.next(arglist__7532);
        var y = cljs.core.first(arglist__7532);
        var zs = cljs.core.rest(arglist__7532);
        return G__7530__delegate(x, y, zs);
      };
      G__7530.cljs$core$IFn$_invoke$arity$variadic = G__7530__delegate;
      return G__7530;
    }();
    G__7529 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7529__0.call(this);
        case 1:
          return G__7529__1.call(this, x);
        case 2:
          return G__7529__2.call(this, x, y);
        default:
          var G__7533 = null;
          if (arguments.length > 2) {
            var G__7534__i = 0, G__7534__a = new Array(arguments.length - 2);
            while (G__7534__i < G__7534__a.length) {
              G__7534__a[G__7534__i] = arguments[G__7534__i + 2];
              ++G__7534__i;
            }
            G__7533 = new cljs.core.IndexedSeq(G__7534__a, 0);
          }
          return G__7529__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7533);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7529.cljs$lang$maxFixedArity = 2;
    G__7529.cljs$lang$applyTo = G__7529__3.cljs$lang$applyTo;
    G__7529.cljs$core$IFn$_invoke$arity$0 = G__7529__0;
    G__7529.cljs$core$IFn$_invoke$arity$1 = G__7529__1;
    G__7529.cljs$core$IFn$_invoke$arity$2 = G__7529__2;
    G__7529.cljs$core$IFn$_invoke$arity$variadic = G__7529__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7529;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__7535__delegate = function(args) {
      return x;
    };
    var G__7535 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7536__i = 0, G__7536__a = new Array(arguments.length - 0);
        while (G__7536__i < G__7536__a.length) {
          G__7536__a[G__7536__i] = arguments[G__7536__i + 0];
          ++G__7536__i;
        }
        args = new cljs.core.IndexedSeq(G__7536__a, 0);
      }
      return G__7535__delegate.call(this, args);
    };
    G__7535.cljs$lang$maxFixedArity = 0;
    G__7535.cljs$lang$applyTo = function(arglist__7537) {
      var args = cljs.core.seq(arglist__7537);
      return G__7535__delegate(args);
    };
    G__7535.cljs$core$IFn$_invoke$arity$variadic = G__7535__delegate;
    return G__7535;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__7592 = null;
      var G__7592__0 = function() {
        var G__7565 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7565) : f.call(null, G__7565);
      };
      var G__7592__1 = function(x) {
        var G__7566 = function() {
          var G__7567 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7567) : g.call(null, G__7567);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7566) : f.call(null, G__7566);
      };
      var G__7592__2 = function(x, y) {
        var G__7568 = function() {
          var G__7569 = x;
          var G__7570 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7569, G__7570) : g.call(null, G__7569, G__7570);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7568) : f.call(null, G__7568);
      };
      var G__7592__3 = function(x, y, z) {
        var G__7571 = function() {
          var G__7572 = x;
          var G__7573 = y;
          var G__7574 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7572, G__7573, G__7574) : g.call(null, G__7572, G__7573, G__7574);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7571) : f.call(null, G__7571);
      };
      var G__7592__4 = function() {
        var G__7593__delegate = function(x, y, z, args) {
          var G__7575 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7575) : f.call(null, G__7575);
        };
        var G__7593 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7594__i = 0, G__7594__a = new Array(arguments.length - 3);
            while (G__7594__i < G__7594__a.length) {
              G__7594__a[G__7594__i] = arguments[G__7594__i + 3];
              ++G__7594__i;
            }
            args = new cljs.core.IndexedSeq(G__7594__a, 0);
          }
          return G__7593__delegate.call(this, x, y, z, args);
        };
        G__7593.cljs$lang$maxFixedArity = 3;
        G__7593.cljs$lang$applyTo = function(arglist__7595) {
          var x = cljs.core.first(arglist__7595);
          arglist__7595 = cljs.core.next(arglist__7595);
          var y = cljs.core.first(arglist__7595);
          arglist__7595 = cljs.core.next(arglist__7595);
          var z = cljs.core.first(arglist__7595);
          var args = cljs.core.rest(arglist__7595);
          return G__7593__delegate(x, y, z, args);
        };
        G__7593.cljs$core$IFn$_invoke$arity$variadic = G__7593__delegate;
        return G__7593;
      }();
      G__7592 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7592__0.call(this);
          case 1:
            return G__7592__1.call(this, x);
          case 2:
            return G__7592__2.call(this, x, y);
          case 3:
            return G__7592__3.call(this, x, y, z);
          default:
            var G__7596 = null;
            if (arguments.length > 3) {
              var G__7597__i = 0, G__7597__a = new Array(arguments.length - 3);
              while (G__7597__i < G__7597__a.length) {
                G__7597__a[G__7597__i] = arguments[G__7597__i + 3];
                ++G__7597__i;
              }
              G__7596 = new cljs.core.IndexedSeq(G__7597__a, 0);
            }
            return G__7592__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7596);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7592.cljs$lang$maxFixedArity = 3;
      G__7592.cljs$lang$applyTo = G__7592__4.cljs$lang$applyTo;
      G__7592.cljs$core$IFn$_invoke$arity$0 = G__7592__0;
      G__7592.cljs$core$IFn$_invoke$arity$1 = G__7592__1;
      G__7592.cljs$core$IFn$_invoke$arity$2 = G__7592__2;
      G__7592.cljs$core$IFn$_invoke$arity$3 = G__7592__3;
      G__7592.cljs$core$IFn$_invoke$arity$variadic = G__7592__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7592;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__7598 = null;
      var G__7598__0 = function() {
        var G__7576 = function() {
          var G__7577 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7577) : g.call(null, G__7577);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7576) : f.call(null, G__7576);
      };
      var G__7598__1 = function(x) {
        var G__7578 = function() {
          var G__7579 = function() {
            var G__7580 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7580) : h.call(null, G__7580);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7579) : g.call(null, G__7579);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7578) : f.call(null, G__7578);
      };
      var G__7598__2 = function(x, y) {
        var G__7581 = function() {
          var G__7582 = function() {
            var G__7583 = x;
            var G__7584 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7583, G__7584) : h.call(null, G__7583, G__7584);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7582) : g.call(null, G__7582);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7581) : f.call(null, G__7581);
      };
      var G__7598__3 = function(x, y, z) {
        var G__7585 = function() {
          var G__7586 = function() {
            var G__7587 = x;
            var G__7588 = y;
            var G__7589 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7587, G__7588, G__7589) : h.call(null, G__7587, G__7588, G__7589);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7586) : g.call(null, G__7586);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7585) : f.call(null, G__7585);
      };
      var G__7598__4 = function() {
        var G__7599__delegate = function(x, y, z, args) {
          var G__7590 = function() {
            var G__7591 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7591) : g.call(null, G__7591);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7590) : f.call(null, G__7590);
        };
        var G__7599 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7600__i = 0, G__7600__a = new Array(arguments.length - 3);
            while (G__7600__i < G__7600__a.length) {
              G__7600__a[G__7600__i] = arguments[G__7600__i + 3];
              ++G__7600__i;
            }
            args = new cljs.core.IndexedSeq(G__7600__a, 0);
          }
          return G__7599__delegate.call(this, x, y, z, args);
        };
        G__7599.cljs$lang$maxFixedArity = 3;
        G__7599.cljs$lang$applyTo = function(arglist__7601) {
          var x = cljs.core.first(arglist__7601);
          arglist__7601 = cljs.core.next(arglist__7601);
          var y = cljs.core.first(arglist__7601);
          arglist__7601 = cljs.core.next(arglist__7601);
          var z = cljs.core.first(arglist__7601);
          var args = cljs.core.rest(arglist__7601);
          return G__7599__delegate(x, y, z, args);
        };
        G__7599.cljs$core$IFn$_invoke$arity$variadic = G__7599__delegate;
        return G__7599;
      }();
      G__7598 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7598__0.call(this);
          case 1:
            return G__7598__1.call(this, x);
          case 2:
            return G__7598__2.call(this, x, y);
          case 3:
            return G__7598__3.call(this, x, y, z);
          default:
            var G__7602 = null;
            if (arguments.length > 3) {
              var G__7603__i = 0, G__7603__a = new Array(arguments.length - 3);
              while (G__7603__i < G__7603__a.length) {
                G__7603__a[G__7603__i] = arguments[G__7603__i + 3];
                ++G__7603__i;
              }
              G__7602 = new cljs.core.IndexedSeq(G__7603__a, 0);
            }
            return G__7598__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7602);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7598.cljs$lang$maxFixedArity = 3;
      G__7598.cljs$lang$applyTo = G__7598__4.cljs$lang$applyTo;
      G__7598.cljs$core$IFn$_invoke$arity$0 = G__7598__0;
      G__7598.cljs$core$IFn$_invoke$arity$1 = G__7598__1;
      G__7598.cljs$core$IFn$_invoke$arity$2 = G__7598__2;
      G__7598.cljs$core$IFn$_invoke$arity$3 = G__7598__3;
      G__7598.cljs$core$IFn$_invoke$arity$variadic = G__7598__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7598;
    }();
  };
  var comp__4 = function() {
    var G__7604__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__7605__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__7606 = cljs.core.first(fs__$2).call(null, ret);
                var G__7607 = cljs.core.next(fs__$2);
                ret = G__7606;
                fs__$2 = G__7607;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__7605 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__7608__i = 0, G__7608__a = new Array(arguments.length - 0);
              while (G__7608__i < G__7608__a.length) {
                G__7608__a[G__7608__i] = arguments[G__7608__i + 0];
                ++G__7608__i;
              }
              args = new cljs.core.IndexedSeq(G__7608__a, 0);
            }
            return G__7605__delegate.call(this, args);
          };
          G__7605.cljs$lang$maxFixedArity = 0;
          G__7605.cljs$lang$applyTo = function(arglist__7609) {
            var args = cljs.core.seq(arglist__7609);
            return G__7605__delegate(args);
          };
          G__7605.cljs$core$IFn$_invoke$arity$variadic = G__7605__delegate;
          return G__7605;
        }();
      }(fs__$1);
    };
    var G__7604 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__7610__i = 0, G__7610__a = new Array(arguments.length - 3);
        while (G__7610__i < G__7610__a.length) {
          G__7610__a[G__7610__i] = arguments[G__7610__i + 3];
          ++G__7610__i;
        }
        fs = new cljs.core.IndexedSeq(G__7610__a, 0);
      }
      return G__7604__delegate.call(this, f1, f2, f3, fs);
    };
    G__7604.cljs$lang$maxFixedArity = 3;
    G__7604.cljs$lang$applyTo = function(arglist__7611) {
      var f1 = cljs.core.first(arglist__7611);
      arglist__7611 = cljs.core.next(arglist__7611);
      var f2 = cljs.core.first(arglist__7611);
      arglist__7611 = cljs.core.next(arglist__7611);
      var f3 = cljs.core.first(arglist__7611);
      var fs = cljs.core.rest(arglist__7611);
      return G__7604__delegate(f1, f2, f3, fs);
    };
    G__7604.cljs$core$IFn$_invoke$arity$variadic = G__7604__delegate;
    return G__7604;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__7612 = null;
        if (arguments.length > 3) {
          var G__7613__i = 0, G__7613__a = new Array(arguments.length - 3);
          while (G__7613__i < G__7613__a.length) {
            G__7613__a[G__7613__i] = arguments[G__7613__i + 3];
            ++G__7613__i;
          }
          G__7612 = new cljs.core.IndexedSeq(G__7613__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__7612);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__7698 = null;
      var G__7698__0 = function() {
        var G__7656 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7656) : f.call(null, G__7656);
      };
      var G__7698__1 = function(x) {
        var G__7657 = arg1;
        var G__7658 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7657, G__7658) : f.call(null, G__7657, G__7658);
      };
      var G__7698__2 = function(x, y) {
        var G__7659 = arg1;
        var G__7660 = x;
        var G__7661 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7659, G__7660, G__7661) : f.call(null, G__7659, G__7660, G__7661);
      };
      var G__7698__3 = function(x, y, z) {
        var G__7662 = arg1;
        var G__7663 = x;
        var G__7664 = y;
        var G__7665 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7662, G__7663, G__7664, G__7665) : f.call(null, G__7662, G__7663, G__7664, G__7665);
      };
      var G__7698__4 = function() {
        var G__7699__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__7699 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7700__i = 0, G__7700__a = new Array(arguments.length - 3);
            while (G__7700__i < G__7700__a.length) {
              G__7700__a[G__7700__i] = arguments[G__7700__i + 3];
              ++G__7700__i;
            }
            args = new cljs.core.IndexedSeq(G__7700__a, 0);
          }
          return G__7699__delegate.call(this, x, y, z, args);
        };
        G__7699.cljs$lang$maxFixedArity = 3;
        G__7699.cljs$lang$applyTo = function(arglist__7701) {
          var x = cljs.core.first(arglist__7701);
          arglist__7701 = cljs.core.next(arglist__7701);
          var y = cljs.core.first(arglist__7701);
          arglist__7701 = cljs.core.next(arglist__7701);
          var z = cljs.core.first(arglist__7701);
          var args = cljs.core.rest(arglist__7701);
          return G__7699__delegate(x, y, z, args);
        };
        G__7699.cljs$core$IFn$_invoke$arity$variadic = G__7699__delegate;
        return G__7699;
      }();
      G__7698 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7698__0.call(this);
          case 1:
            return G__7698__1.call(this, x);
          case 2:
            return G__7698__2.call(this, x, y);
          case 3:
            return G__7698__3.call(this, x, y, z);
          default:
            var G__7702 = null;
            if (arguments.length > 3) {
              var G__7703__i = 0, G__7703__a = new Array(arguments.length - 3);
              while (G__7703__i < G__7703__a.length) {
                G__7703__a[G__7703__i] = arguments[G__7703__i + 3];
                ++G__7703__i;
              }
              G__7702 = new cljs.core.IndexedSeq(G__7703__a, 0);
            }
            return G__7698__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7702);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7698.cljs$lang$maxFixedArity = 3;
      G__7698.cljs$lang$applyTo = G__7698__4.cljs$lang$applyTo;
      G__7698.cljs$core$IFn$_invoke$arity$0 = G__7698__0;
      G__7698.cljs$core$IFn$_invoke$arity$1 = G__7698__1;
      G__7698.cljs$core$IFn$_invoke$arity$2 = G__7698__2;
      G__7698.cljs$core$IFn$_invoke$arity$3 = G__7698__3;
      G__7698.cljs$core$IFn$_invoke$arity$variadic = G__7698__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7698;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__7704 = null;
      var G__7704__0 = function() {
        var G__7666 = arg1;
        var G__7667 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7666, G__7667) : f.call(null, G__7666, G__7667);
      };
      var G__7704__1 = function(x) {
        var G__7668 = arg1;
        var G__7669 = arg2;
        var G__7670 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7668, G__7669, G__7670) : f.call(null, G__7668, G__7669, G__7670);
      };
      var G__7704__2 = function(x, y) {
        var G__7671 = arg1;
        var G__7672 = arg2;
        var G__7673 = x;
        var G__7674 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7671, G__7672, G__7673, G__7674) : f.call(null, G__7671, G__7672, G__7673, G__7674);
      };
      var G__7704__3 = function(x, y, z) {
        var G__7675 = arg1;
        var G__7676 = arg2;
        var G__7677 = x;
        var G__7678 = y;
        var G__7679 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7675, G__7676, G__7677, G__7678, G__7679) : f.call(null, G__7675, G__7676, G__7677, G__7678, G__7679);
      };
      var G__7704__4 = function() {
        var G__7705__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__7705 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7706__i = 0, G__7706__a = new Array(arguments.length - 3);
            while (G__7706__i < G__7706__a.length) {
              G__7706__a[G__7706__i] = arguments[G__7706__i + 3];
              ++G__7706__i;
            }
            args = new cljs.core.IndexedSeq(G__7706__a, 0);
          }
          return G__7705__delegate.call(this, x, y, z, args);
        };
        G__7705.cljs$lang$maxFixedArity = 3;
        G__7705.cljs$lang$applyTo = function(arglist__7707) {
          var x = cljs.core.first(arglist__7707);
          arglist__7707 = cljs.core.next(arglist__7707);
          var y = cljs.core.first(arglist__7707);
          arglist__7707 = cljs.core.next(arglist__7707);
          var z = cljs.core.first(arglist__7707);
          var args = cljs.core.rest(arglist__7707);
          return G__7705__delegate(x, y, z, args);
        };
        G__7705.cljs$core$IFn$_invoke$arity$variadic = G__7705__delegate;
        return G__7705;
      }();
      G__7704 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7704__0.call(this);
          case 1:
            return G__7704__1.call(this, x);
          case 2:
            return G__7704__2.call(this, x, y);
          case 3:
            return G__7704__3.call(this, x, y, z);
          default:
            var G__7708 = null;
            if (arguments.length > 3) {
              var G__7709__i = 0, G__7709__a = new Array(arguments.length - 3);
              while (G__7709__i < G__7709__a.length) {
                G__7709__a[G__7709__i] = arguments[G__7709__i + 3];
                ++G__7709__i;
              }
              G__7708 = new cljs.core.IndexedSeq(G__7709__a, 0);
            }
            return G__7704__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7708);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7704.cljs$lang$maxFixedArity = 3;
      G__7704.cljs$lang$applyTo = G__7704__4.cljs$lang$applyTo;
      G__7704.cljs$core$IFn$_invoke$arity$0 = G__7704__0;
      G__7704.cljs$core$IFn$_invoke$arity$1 = G__7704__1;
      G__7704.cljs$core$IFn$_invoke$arity$2 = G__7704__2;
      G__7704.cljs$core$IFn$_invoke$arity$3 = G__7704__3;
      G__7704.cljs$core$IFn$_invoke$arity$variadic = G__7704__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7704;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__7710 = null;
      var G__7710__0 = function() {
        var G__7680 = arg1;
        var G__7681 = arg2;
        var G__7682 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7680, G__7681, G__7682) : f.call(null, G__7680, G__7681, G__7682);
      };
      var G__7710__1 = function(x) {
        var G__7683 = arg1;
        var G__7684 = arg2;
        var G__7685 = arg3;
        var G__7686 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7683, G__7684, G__7685, G__7686) : f.call(null, G__7683, G__7684, G__7685, G__7686);
      };
      var G__7710__2 = function(x, y) {
        var G__7687 = arg1;
        var G__7688 = arg2;
        var G__7689 = arg3;
        var G__7690 = x;
        var G__7691 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7687, G__7688, G__7689, G__7690, G__7691) : f.call(null, G__7687, G__7688, G__7689, G__7690, G__7691);
      };
      var G__7710__3 = function(x, y, z) {
        var G__7692 = arg1;
        var G__7693 = arg2;
        var G__7694 = arg3;
        var G__7695 = x;
        var G__7696 = y;
        var G__7697 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7692, G__7693, G__7694, G__7695, G__7696, G__7697) : f.call(null, G__7692, G__7693, G__7694, G__7695, G__7696, G__7697);
      };
      var G__7710__4 = function() {
        var G__7711__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__7711 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7712__i = 0, G__7712__a = new Array(arguments.length - 3);
            while (G__7712__i < G__7712__a.length) {
              G__7712__a[G__7712__i] = arguments[G__7712__i + 3];
              ++G__7712__i;
            }
            args = new cljs.core.IndexedSeq(G__7712__a, 0);
          }
          return G__7711__delegate.call(this, x, y, z, args);
        };
        G__7711.cljs$lang$maxFixedArity = 3;
        G__7711.cljs$lang$applyTo = function(arglist__7713) {
          var x = cljs.core.first(arglist__7713);
          arglist__7713 = cljs.core.next(arglist__7713);
          var y = cljs.core.first(arglist__7713);
          arglist__7713 = cljs.core.next(arglist__7713);
          var z = cljs.core.first(arglist__7713);
          var args = cljs.core.rest(arglist__7713);
          return G__7711__delegate(x, y, z, args);
        };
        G__7711.cljs$core$IFn$_invoke$arity$variadic = G__7711__delegate;
        return G__7711;
      }();
      G__7710 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7710__0.call(this);
          case 1:
            return G__7710__1.call(this, x);
          case 2:
            return G__7710__2.call(this, x, y);
          case 3:
            return G__7710__3.call(this, x, y, z);
          default:
            var G__7714 = null;
            if (arguments.length > 3) {
              var G__7715__i = 0, G__7715__a = new Array(arguments.length - 3);
              while (G__7715__i < G__7715__a.length) {
                G__7715__a[G__7715__i] = arguments[G__7715__i + 3];
                ++G__7715__i;
              }
              G__7714 = new cljs.core.IndexedSeq(G__7715__a, 0);
            }
            return G__7710__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7714);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7710.cljs$lang$maxFixedArity = 3;
      G__7710.cljs$lang$applyTo = G__7710__4.cljs$lang$applyTo;
      G__7710.cljs$core$IFn$_invoke$arity$0 = G__7710__0;
      G__7710.cljs$core$IFn$_invoke$arity$1 = G__7710__1;
      G__7710.cljs$core$IFn$_invoke$arity$2 = G__7710__2;
      G__7710.cljs$core$IFn$_invoke$arity$3 = G__7710__3;
      G__7710.cljs$core$IFn$_invoke$arity$variadic = G__7710__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7710;
    }();
  };
  var partial__5 = function() {
    var G__7716__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__7717__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__7717 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__7718__i = 0, G__7718__a = new Array(arguments.length - 0);
            while (G__7718__i < G__7718__a.length) {
              G__7718__a[G__7718__i] = arguments[G__7718__i + 0];
              ++G__7718__i;
            }
            args = new cljs.core.IndexedSeq(G__7718__a, 0);
          }
          return G__7717__delegate.call(this, args);
        };
        G__7717.cljs$lang$maxFixedArity = 0;
        G__7717.cljs$lang$applyTo = function(arglist__7719) {
          var args = cljs.core.seq(arglist__7719);
          return G__7717__delegate(args);
        };
        G__7717.cljs$core$IFn$_invoke$arity$variadic = G__7717__delegate;
        return G__7717;
      }();
    };
    var G__7716 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7720__i = 0, G__7720__a = new Array(arguments.length - 4);
        while (G__7720__i < G__7720__a.length) {
          G__7720__a[G__7720__i] = arguments[G__7720__i + 4];
          ++G__7720__i;
        }
        more = new cljs.core.IndexedSeq(G__7720__a, 0);
      }
      return G__7716__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__7716.cljs$lang$maxFixedArity = 4;
    G__7716.cljs$lang$applyTo = function(arglist__7721) {
      var f = cljs.core.first(arglist__7721);
      arglist__7721 = cljs.core.next(arglist__7721);
      var arg1 = cljs.core.first(arglist__7721);
      arglist__7721 = cljs.core.next(arglist__7721);
      var arg2 = cljs.core.first(arglist__7721);
      arglist__7721 = cljs.core.next(arglist__7721);
      var arg3 = cljs.core.first(arglist__7721);
      var more = cljs.core.rest(arglist__7721);
      return G__7716__delegate(f, arg1, arg2, arg3, more);
    };
    G__7716.cljs$core$IFn$_invoke$arity$variadic = G__7716__delegate;
    return G__7716;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__7722 = null;
        if (arguments.length > 4) {
          var G__7723__i = 0, G__7723__a = new Array(arguments.length - 4);
          while (G__7723__i < G__7723__a.length) {
            G__7723__a[G__7723__i] = arguments[G__7723__i + 4];
            ++G__7723__i;
          }
          G__7722 = new cljs.core.IndexedSeq(G__7723__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__7722);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__7756 = null;
      var G__7756__1 = function(a) {
        var G__7740 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7740) : f.call(null, G__7740);
      };
      var G__7756__2 = function(a, b) {
        var G__7741 = a == null ? x : a;
        var G__7742 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7741, G__7742) : f.call(null, G__7741, G__7742);
      };
      var G__7756__3 = function(a, b, c) {
        var G__7743 = a == null ? x : a;
        var G__7744 = b;
        var G__7745 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7743, G__7744, G__7745) : f.call(null, G__7743, G__7744, G__7745);
      };
      var G__7756__4 = function() {
        var G__7757__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__7757 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7758__i = 0, G__7758__a = new Array(arguments.length - 3);
            while (G__7758__i < G__7758__a.length) {
              G__7758__a[G__7758__i] = arguments[G__7758__i + 3];
              ++G__7758__i;
            }
            ds = new cljs.core.IndexedSeq(G__7758__a, 0);
          }
          return G__7757__delegate.call(this, a, b, c, ds);
        };
        G__7757.cljs$lang$maxFixedArity = 3;
        G__7757.cljs$lang$applyTo = function(arglist__7759) {
          var a = cljs.core.first(arglist__7759);
          arglist__7759 = cljs.core.next(arglist__7759);
          var b = cljs.core.first(arglist__7759);
          arglist__7759 = cljs.core.next(arglist__7759);
          var c = cljs.core.first(arglist__7759);
          var ds = cljs.core.rest(arglist__7759);
          return G__7757__delegate(a, b, c, ds);
        };
        G__7757.cljs$core$IFn$_invoke$arity$variadic = G__7757__delegate;
        return G__7757;
      }();
      G__7756 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__7756__1.call(this, a);
          case 2:
            return G__7756__2.call(this, a, b);
          case 3:
            return G__7756__3.call(this, a, b, c);
          default:
            var G__7760 = null;
            if (arguments.length > 3) {
              var G__7761__i = 0, G__7761__a = new Array(arguments.length - 3);
              while (G__7761__i < G__7761__a.length) {
                G__7761__a[G__7761__i] = arguments[G__7761__i + 3];
                ++G__7761__i;
              }
              G__7760 = new cljs.core.IndexedSeq(G__7761__a, 0);
            }
            return G__7756__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7760);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7756.cljs$lang$maxFixedArity = 3;
      G__7756.cljs$lang$applyTo = G__7756__4.cljs$lang$applyTo;
      G__7756.cljs$core$IFn$_invoke$arity$1 = G__7756__1;
      G__7756.cljs$core$IFn$_invoke$arity$2 = G__7756__2;
      G__7756.cljs$core$IFn$_invoke$arity$3 = G__7756__3;
      G__7756.cljs$core$IFn$_invoke$arity$variadic = G__7756__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7756;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__7762 = null;
      var G__7762__2 = function(a, b) {
        var G__7746 = a == null ? x : a;
        var G__7747 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7746, G__7747) : f.call(null, G__7746, G__7747);
      };
      var G__7762__3 = function(a, b, c) {
        var G__7748 = a == null ? x : a;
        var G__7749 = b == null ? y : b;
        var G__7750 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7748, G__7749, G__7750) : f.call(null, G__7748, G__7749, G__7750);
      };
      var G__7762__4 = function() {
        var G__7763__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__7763 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7764__i = 0, G__7764__a = new Array(arguments.length - 3);
            while (G__7764__i < G__7764__a.length) {
              G__7764__a[G__7764__i] = arguments[G__7764__i + 3];
              ++G__7764__i;
            }
            ds = new cljs.core.IndexedSeq(G__7764__a, 0);
          }
          return G__7763__delegate.call(this, a, b, c, ds);
        };
        G__7763.cljs$lang$maxFixedArity = 3;
        G__7763.cljs$lang$applyTo = function(arglist__7765) {
          var a = cljs.core.first(arglist__7765);
          arglist__7765 = cljs.core.next(arglist__7765);
          var b = cljs.core.first(arglist__7765);
          arglist__7765 = cljs.core.next(arglist__7765);
          var c = cljs.core.first(arglist__7765);
          var ds = cljs.core.rest(arglist__7765);
          return G__7763__delegate(a, b, c, ds);
        };
        G__7763.cljs$core$IFn$_invoke$arity$variadic = G__7763__delegate;
        return G__7763;
      }();
      G__7762 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7762__2.call(this, a, b);
          case 3:
            return G__7762__3.call(this, a, b, c);
          default:
            var G__7766 = null;
            if (arguments.length > 3) {
              var G__7767__i = 0, G__7767__a = new Array(arguments.length - 3);
              while (G__7767__i < G__7767__a.length) {
                G__7767__a[G__7767__i] = arguments[G__7767__i + 3];
                ++G__7767__i;
              }
              G__7766 = new cljs.core.IndexedSeq(G__7767__a, 0);
            }
            return G__7762__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7766);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7762.cljs$lang$maxFixedArity = 3;
      G__7762.cljs$lang$applyTo = G__7762__4.cljs$lang$applyTo;
      G__7762.cljs$core$IFn$_invoke$arity$2 = G__7762__2;
      G__7762.cljs$core$IFn$_invoke$arity$3 = G__7762__3;
      G__7762.cljs$core$IFn$_invoke$arity$variadic = G__7762__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7762;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__7768 = null;
      var G__7768__2 = function(a, b) {
        var G__7751 = a == null ? x : a;
        var G__7752 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7751, G__7752) : f.call(null, G__7751, G__7752);
      };
      var G__7768__3 = function(a, b, c) {
        var G__7753 = a == null ? x : a;
        var G__7754 = b == null ? y : b;
        var G__7755 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7753, G__7754, G__7755) : f.call(null, G__7753, G__7754, G__7755);
      };
      var G__7768__4 = function() {
        var G__7769__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__7769 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7770__i = 0, G__7770__a = new Array(arguments.length - 3);
            while (G__7770__i < G__7770__a.length) {
              G__7770__a[G__7770__i] = arguments[G__7770__i + 3];
              ++G__7770__i;
            }
            ds = new cljs.core.IndexedSeq(G__7770__a, 0);
          }
          return G__7769__delegate.call(this, a, b, c, ds);
        };
        G__7769.cljs$lang$maxFixedArity = 3;
        G__7769.cljs$lang$applyTo = function(arglist__7771) {
          var a = cljs.core.first(arglist__7771);
          arglist__7771 = cljs.core.next(arglist__7771);
          var b = cljs.core.first(arglist__7771);
          arglist__7771 = cljs.core.next(arglist__7771);
          var c = cljs.core.first(arglist__7771);
          var ds = cljs.core.rest(arglist__7771);
          return G__7769__delegate(a, b, c, ds);
        };
        G__7769.cljs$core$IFn$_invoke$arity$variadic = G__7769__delegate;
        return G__7769;
      }();
      G__7768 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7768__2.call(this, a, b);
          case 3:
            return G__7768__3.call(this, a, b, c);
          default:
            var G__7772 = null;
            if (arguments.length > 3) {
              var G__7773__i = 0, G__7773__a = new Array(arguments.length - 3);
              while (G__7773__i < G__7773__a.length) {
                G__7773__a[G__7773__i] = arguments[G__7773__i + 3];
                ++G__7773__i;
              }
              G__7772 = new cljs.core.IndexedSeq(G__7773__a, 0);
            }
            return G__7768__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7772);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7768.cljs$lang$maxFixedArity = 3;
      G__7768.cljs$lang$applyTo = G__7768__4.cljs$lang$applyTo;
      G__7768.cljs$core$IFn$_invoke$arity$2 = G__7768__2;
      G__7768.cljs$core$IFn$_invoke$arity$3 = G__7768__3;
      G__7768.cljs$core$IFn$_invoke$arity$variadic = G__7768__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7768;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__7804 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7804) : cljs.core.volatile_BANG_.call(null, G__7804);
      }();
      return function(i) {
        return function() {
          var G__7834 = null;
          var G__7834__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7834__1 = function(result) {
            var G__7805 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7805) : rf.call(null, G__7805);
          };
          var G__7834__2 = function(result, input) {
            var G__7806 = result;
            var G__7807 = function() {
              var G__7808 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__7809 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7808, G__7809) : f.call(null, G__7808, G__7809);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7806, G__7807) : rf.call(null, G__7806, G__7807);
          };
          G__7834 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7834__0.call(this);
              case 1:
                return G__7834__1.call(this, result);
              case 2:
                return G__7834__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7834.cljs$core$IFn$_invoke$arity$0 = G__7834__0;
          G__7834.cljs$core$IFn$_invoke$arity$1 = G__7834__1;
          G__7834.cljs$core$IFn$_invoke$arity$2 = G__7834__2;
          return G__7834;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4645__auto___7835 = size;
            var i_7836 = 0;
            while (true) {
              if (i_7836 < n__4645__auto___7835) {
                cljs.core.chunk_append(b, function() {
                  var G__7830 = idx + i_7836;
                  var G__7831 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7836);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7830, G__7831) : f.call(null, G__7830, G__7831);
                }());
                var G__7837 = i_7836 + 1;
                i_7836 = G__7837;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__7832 = idx;
              var G__7833 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7832, G__7833) : f.call(null, G__7832, G__7833);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__7856 = null;
        var G__7856__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7856__1 = function(result) {
          var G__7850 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7850) : rf.call(null, G__7850);
        };
        var G__7856__2 = function(result, input) {
          var v = function() {
            var G__7851 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7851) : f.call(null, G__7851);
          }();
          if (v == null) {
            return result;
          } else {
            var G__7852 = result;
            var G__7853 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7852, G__7853) : rf.call(null, G__7852, G__7853);
          }
        };
        G__7856 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7856__0.call(this);
            case 1:
              return G__7856__1.call(this, result);
            case 2:
              return G__7856__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7856.cljs$core$IFn$_invoke$arity$0 = G__7856__0;
        G__7856.cljs$core$IFn$_invoke$arity$1 = G__7856__1;
        G__7856.cljs$core$IFn$_invoke$arity$2 = G__7856__2;
        return G__7856;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4645__auto___7857 = size;
          var i_7858 = 0;
          while (true) {
            if (i_7858 < n__4645__auto___7857) {
              var x_7859 = function() {
                var G__7854 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7858);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7854) : f.call(null, G__7854);
              }();
              if (x_7859 == null) {
              } else {
                cljs.core.chunk_append(b, x_7859);
              }
              var G__7860 = i_7858 + 1;
              i_7858 = G__7860;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7855 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7855) : f.call(null, G__7855);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__7861 = this$__$1;
  return goog.getUid(G__7861);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7862 = cljs.core.seq(self__.watches);
  var chunk__7863 = null;
  var count__7864 = 0;
  var i__7865 = 0;
  while (true) {
    if (i__7865 < count__7864) {
      var vec__7866 = chunk__7863.cljs$core$IIndexed$_nth$arity$2(null, i__7865);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7866, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7866, 1, null);
      var G__7867_7876 = key;
      var G__7868_7877 = this$__$1;
      var G__7869_7878 = oldval;
      var G__7870_7879 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7867_7876, G__7868_7877, G__7869_7878, G__7870_7879) : f.call(null, G__7867_7876, G__7868_7877, G__7869_7878, G__7870_7879);
      var G__7880 = seq__7862;
      var G__7881 = chunk__7863;
      var G__7882 = count__7864;
      var G__7883 = i__7865 + 1;
      seq__7862 = G__7880;
      chunk__7863 = G__7881;
      count__7864 = G__7882;
      i__7865 = G__7883;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__7862);
      if (temp__4126__auto__) {
        var seq__7862__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7862__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__7862__$1);
          var G__7884 = cljs.core.chunk_rest(seq__7862__$1);
          var G__7885 = c__4545__auto__;
          var G__7886 = cljs.core.count(c__4545__auto__);
          var G__7887 = 0;
          seq__7862 = G__7884;
          chunk__7863 = G__7885;
          count__7864 = G__7886;
          i__7865 = G__7887;
          continue;
        } else {
          var vec__7871 = cljs.core.first(seq__7862__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7871, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7871, 1, null);
          var G__7872_7888 = key;
          var G__7873_7889 = this$__$1;
          var G__7874_7890 = oldval;
          var G__7875_7891 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7872_7888, G__7873_7889, G__7874_7890, G__7875_7891) : f.call(null, G__7872_7888, G__7873_7889, G__7874_7890, G__7875_7891);
          var G__7892 = cljs.core.next(seq__7862__$1);
          var G__7893 = null;
          var G__7894 = 0;
          var G__7895 = 0;
          seq__7862 = G__7892;
          chunk__7863 = G__7893;
          count__7864 = G__7894;
          i__7865 = G__7895;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__7899__delegate = function(x, p__7896) {
      var map__7898 = p__7896;
      var map__7898__$1 = cljs.core.seq_QMARK_(map__7898) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7898) : map__7898;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7898__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7898__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__7899 = function(x, var_args) {
      var p__7896 = null;
      if (arguments.length > 1) {
        var G__7900__i = 0, G__7900__a = new Array(arguments.length - 1);
        while (G__7900__i < G__7900__a.length) {
          G__7900__a[G__7900__i] = arguments[G__7900__i + 1];
          ++G__7900__i;
        }
        p__7896 = new cljs.core.IndexedSeq(G__7900__a, 0);
      }
      return G__7899__delegate.call(this, x, p__7896);
    };
    G__7899.cljs$lang$maxFixedArity = 1;
    G__7899.cljs$lang$applyTo = function(arglist__7901) {
      var x = cljs.core.first(arglist__7901);
      var p__7896 = cljs.core.rest(arglist__7901);
      return G__7899__delegate(x, p__7896);
    };
    G__7899.cljs$core$IFn$_invoke$arity$variadic = G__7899__delegate;
    return G__7899;
  }();
  atom = function(x, var_args) {
    var p__7896 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__7902 = null;
        if (arguments.length > 1) {
          var G__7903__i = 0, G__7903__a = new Array(arguments.length - 1);
          while (G__7903__i < G__7903__a.length) {
            G__7903__a[G__7903__i] = arguments[G__7903__i + 1];
            ++G__7903__i;
          }
          G__7902 = new cljs.core.IndexedSeq(G__7903__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7902);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__7906 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7906) : validate.call(null, G__7906);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7907 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7907) : cljs.core.pr_str.call(null, G__7907);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7914 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7914) : f.call(null, G__7914);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7915 = a.state;
        var G__7916 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7915, G__7916) : f.call(null, G__7915, G__7916);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7917 = a.state;
        var G__7918 = x;
        var G__7919 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7917, G__7918, G__7919) : f.call(null, G__7917, G__7918, G__7919);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__7920__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__7920 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7921__i = 0, G__7921__a = new Array(arguments.length - 4);
        while (G__7921__i < G__7921__a.length) {
          G__7921__a[G__7921__i] = arguments[G__7921__i + 4];
          ++G__7921__i;
        }
        more = new cljs.core.IndexedSeq(G__7921__a, 0);
      }
      return G__7920__delegate.call(this, a, f, x, y, more);
    };
    G__7920.cljs$lang$maxFixedArity = 4;
    G__7920.cljs$lang$applyTo = function(arglist__7922) {
      var a = cljs.core.first(arglist__7922);
      arglist__7922 = cljs.core.next(arglist__7922);
      var f = cljs.core.first(arglist__7922);
      arglist__7922 = cljs.core.next(arglist__7922);
      var x = cljs.core.first(arglist__7922);
      arglist__7922 = cljs.core.next(arglist__7922);
      var y = cljs.core.first(arglist__7922);
      var more = cljs.core.rest(arglist__7922);
      return G__7920__delegate(a, f, x, y, more);
    };
    G__7920.cljs$core$IFn$_invoke$arity$variadic = G__7920__delegate;
    return G__7920;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__7923 = null;
        if (arguments.length > 4) {
          var G__7924__i = 0, G__7924__a = new Array(arguments.length - 4);
          while (G__7924__i < G__7924__a.length) {
            G__7924__a[G__7924__i] = arguments[G__7924__i + 4];
            ++G__7924__i;
          }
          G__7923 = new cljs.core.IndexedSeq(G__7924__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__7923);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__7991 = null;
          var G__7991__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7991__1 = function(result) {
            var G__7958 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7958) : rf.call(null, G__7958);
          };
          var G__7991__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__7959 = i;
              var G__7960 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7959, G__7960) : f.call(null, G__7959, G__7960);
            }();
            if (v == null) {
              return result;
            } else {
              var G__7961 = result;
              var G__7962 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7961, G__7962) : rf.call(null, G__7961, G__7962);
            }
          };
          G__7991 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7991__0.call(this);
              case 1:
                return G__7991__1.call(this, result);
              case 2:
                return G__7991__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7991.cljs$core$IFn$_invoke$arity$0 = G__7991__0;
          G__7991.cljs$core$IFn$_invoke$arity$1 = G__7991__1;
          G__7991.cljs$core$IFn$_invoke$arity$2 = G__7991__2;
          return G__7991;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4645__auto___7992 = size;
            var i_7993 = 0;
            while (true) {
              if (i_7993 < n__4645__auto___7992) {
                var x_7994 = function() {
                  var G__7987 = idx + i_7993;
                  var G__7988 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7993);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7987, G__7988) : f.call(null, G__7987, G__7988);
                }();
                if (x_7994 == null) {
                } else {
                  cljs.core.chunk_append(b, x_7994);
                }
                var G__7995 = i_7993 + 1;
                i_7993 = G__7995;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__7989 = idx;
              var G__7990 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7989, G__7990) : f.call(null, G__7989, G__7990);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__8209 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8209) : p.call(null, G__8209);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8211 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8211) : p.call(null, G__8211);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var G__8212 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8212) : p.call(null, G__8212);
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8214 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8214) : p.call(null, G__8214);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var and__3746__auto____$1 = function() {
              var G__8216 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8216) : p.call(null, G__8216);
            }();
            if (cljs.core.truth_(and__3746__auto____$1)) {
              var G__8217 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8217) : p.call(null, G__8217);
            } else {
              return and__3746__auto____$1;
            }
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__8386__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__8386 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8387__i = 0, G__8387__a = new Array(arguments.length - 3);
            while (G__8387__i < G__8387__a.length) {
              G__8387__a[G__8387__i] = arguments[G__8387__i + 3];
              ++G__8387__i;
            }
            args = new cljs.core.IndexedSeq(G__8387__a, 0);
          }
          return G__8386__delegate.call(this, x, y, z, args);
        };
        G__8386.cljs$lang$maxFixedArity = 3;
        G__8386.cljs$lang$applyTo = function(arglist__8388) {
          var x = cljs.core.first(arglist__8388);
          arglist__8388 = cljs.core.next(arglist__8388);
          var y = cljs.core.first(arglist__8388);
          arglist__8388 = cljs.core.next(arglist__8388);
          var z = cljs.core.first(arglist__8388);
          var args = cljs.core.rest(arglist__8388);
          return G__8386__delegate(x, y, z, args);
        };
        G__8386.cljs$core$IFn$_invoke$arity$variadic = G__8386__delegate;
        return G__8386;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__8389 = null;
            if (arguments.length > 3) {
              var G__8390__i = 0, G__8390__a = new Array(arguments.length - 3);
              while (G__8390__i < G__8390__a.length) {
                G__8390__a[G__8390__i] = arguments[G__8390__i + 3];
                ++G__8390__i;
              }
              G__8389 = new cljs.core.IndexedSeq(G__8390__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8389);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8249 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8249) : p1.call(null, G__8249);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var G__8250 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8250) : p2.call(null, G__8250);
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8252 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8252) : p1.call(null, G__8252);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var and__3746__auto____$1 = function() {
              var G__8254 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8254) : p1.call(null, G__8254);
            }();
            if (cljs.core.truth_(and__3746__auto____$1)) {
              var and__3746__auto____$2 = function() {
                var G__8256 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8256) : p2.call(null, G__8256);
              }();
              if (cljs.core.truth_(and__3746__auto____$2)) {
                var G__8257 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8257) : p2.call(null, G__8257);
              } else {
                return and__3746__auto____$2;
              }
            } else {
              return and__3746__auto____$1;
            }
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8259 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8259) : p1.call(null, G__8259);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var and__3746__auto____$1 = function() {
              var G__8261 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8261) : p1.call(null, G__8261);
            }();
            if (cljs.core.truth_(and__3746__auto____$1)) {
              var and__3746__auto____$2 = function() {
                var G__8263 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8263) : p1.call(null, G__8263);
              }();
              if (cljs.core.truth_(and__3746__auto____$2)) {
                var and__3746__auto____$3 = function() {
                  var G__8265 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8265) : p2.call(null, G__8265);
                }();
                if (cljs.core.truth_(and__3746__auto____$3)) {
                  var and__3746__auto____$4 = function() {
                    var G__8267 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8267) : p2.call(null, G__8267);
                  }();
                  if (cljs.core.truth_(and__3746__auto____$4)) {
                    var G__8268 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8268) : p2.call(null, G__8268);
                  } else {
                    return and__3746__auto____$4;
                  }
                } else {
                  return and__3746__auto____$3;
                }
              } else {
                return and__3746__auto____$2;
              }
            } else {
              return and__3746__auto____$1;
            }
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__8391__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__7996_SHARP_) {
            var and__3746__auto__ = function() {
              var G__8273 = p1__7996_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8273) : p1.call(null, G__8273);
            }();
            if (cljs.core.truth_(and__3746__auto__)) {
              var G__8274 = p1__7996_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8274) : p2.call(null, G__8274);
            } else {
              return and__3746__auto__;
            }
          }, args));
        };
        var G__8391 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8392__i = 0, G__8392__a = new Array(arguments.length - 3);
            while (G__8392__i < G__8392__a.length) {
              G__8392__a[G__8392__i] = arguments[G__8392__i + 3];
              ++G__8392__i;
            }
            args = new cljs.core.IndexedSeq(G__8392__a, 0);
          }
          return G__8391__delegate.call(this, x, y, z, args);
        };
        G__8391.cljs$lang$maxFixedArity = 3;
        G__8391.cljs$lang$applyTo = function(arglist__8393) {
          var x = cljs.core.first(arglist__8393);
          arglist__8393 = cljs.core.next(arglist__8393);
          var y = cljs.core.first(arglist__8393);
          arglist__8393 = cljs.core.next(arglist__8393);
          var z = cljs.core.first(arglist__8393);
          var args = cljs.core.rest(arglist__8393);
          return G__8391__delegate(x, y, z, args);
        };
        G__8391.cljs$core$IFn$_invoke$arity$variadic = G__8391__delegate;
        return G__8391;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__8394 = null;
            if (arguments.length > 3) {
              var G__8395__i = 0, G__8395__a = new Array(arguments.length - 3);
              while (G__8395__i < G__8395__a.length) {
                G__8395__a[G__8395__i] = arguments[G__8395__i + 3];
                ++G__8395__i;
              }
              G__8394 = new cljs.core.IndexedSeq(G__8395__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8394);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8320 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8320) : p1.call(null, G__8320);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var and__3746__auto____$1 = function() {
              var G__8322 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8322) : p2.call(null, G__8322);
            }();
            if (cljs.core.truth_(and__3746__auto____$1)) {
              var G__8323 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8323) : p3.call(null, G__8323);
            } else {
              return and__3746__auto____$1;
            }
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8325 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8325) : p1.call(null, G__8325);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var and__3746__auto____$1 = function() {
              var G__8327 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8327) : p2.call(null, G__8327);
            }();
            if (cljs.core.truth_(and__3746__auto____$1)) {
              var and__3746__auto____$2 = function() {
                var G__8329 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8329) : p3.call(null, G__8329);
              }();
              if (cljs.core.truth_(and__3746__auto____$2)) {
                var and__3746__auto____$3 = function() {
                  var G__8331 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8331) : p1.call(null, G__8331);
                }();
                if (cljs.core.truth_(and__3746__auto____$3)) {
                  var and__3746__auto____$4 = function() {
                    var G__8333 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8333) : p2.call(null, G__8333);
                  }();
                  if (cljs.core.truth_(and__3746__auto____$4)) {
                    var G__8334 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8334) : p3.call(null, G__8334);
                  } else {
                    return and__3746__auto____$4;
                  }
                } else {
                  return and__3746__auto____$3;
                }
              } else {
                return and__3746__auto____$2;
              }
            } else {
              return and__3746__auto____$1;
            }
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3746__auto__ = function() {
            var G__8336 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8336) : p1.call(null, G__8336);
          }();
          if (cljs.core.truth_(and__3746__auto__)) {
            var and__3746__auto____$1 = function() {
              var G__8338 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8338) : p2.call(null, G__8338);
            }();
            if (cljs.core.truth_(and__3746__auto____$1)) {
              var and__3746__auto____$2 = function() {
                var G__8340 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8340) : p3.call(null, G__8340);
              }();
              if (cljs.core.truth_(and__3746__auto____$2)) {
                var and__3746__auto____$3 = function() {
                  var G__8342 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8342) : p1.call(null, G__8342);
                }();
                if (cljs.core.truth_(and__3746__auto____$3)) {
                  var and__3746__auto____$4 = function() {
                    var G__8344 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8344) : p2.call(null, G__8344);
                  }();
                  if (cljs.core.truth_(and__3746__auto____$4)) {
                    var and__3746__auto____$5 = function() {
                      var G__8346 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8346) : p3.call(null, G__8346);
                    }();
                    if (cljs.core.truth_(and__3746__auto____$5)) {
                      var and__3746__auto____$6 = function() {
                        var G__8348 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8348) : p1.call(null, G__8348);
                      }();
                      if (cljs.core.truth_(and__3746__auto____$6)) {
                        var and__3746__auto____$7 = function() {
                          var G__8350 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8350) : p2.call(null, G__8350);
                        }();
                        if (cljs.core.truth_(and__3746__auto____$7)) {
                          var G__8351 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8351) : p3.call(null, G__8351);
                        } else {
                          return and__3746__auto____$7;
                        }
                      } else {
                        return and__3746__auto____$6;
                      }
                    } else {
                      return and__3746__auto____$5;
                    }
                  } else {
                    return and__3746__auto____$4;
                  }
                } else {
                  return and__3746__auto____$3;
                }
              } else {
                return and__3746__auto____$2;
              }
            } else {
              return and__3746__auto____$1;
            }
          } else {
            return and__3746__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__8396__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__7997_SHARP_) {
            var and__3746__auto__ = function() {
              var G__8358 = p1__7997_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8358) : p1.call(null, G__8358);
            }();
            if (cljs.core.truth_(and__3746__auto__)) {
              var and__3746__auto____$1 = function() {
                var G__8360 = p1__7997_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8360) : p2.call(null, G__8360);
              }();
              if (cljs.core.truth_(and__3746__auto____$1)) {
                var G__8361 = p1__7997_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8361) : p3.call(null, G__8361);
              } else {
                return and__3746__auto____$1;
              }
            } else {
              return and__3746__auto__;
            }
          }, args));
        };
        var G__8396 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8397__i = 0, G__8397__a = new Array(arguments.length - 3);
            while (G__8397__i < G__8397__a.length) {
              G__8397__a[G__8397__i] = arguments[G__8397__i + 3];
              ++G__8397__i;
            }
            args = new cljs.core.IndexedSeq(G__8397__a, 0);
          }
          return G__8396__delegate.call(this, x, y, z, args);
        };
        G__8396.cljs$lang$maxFixedArity = 3;
        G__8396.cljs$lang$applyTo = function(arglist__8398) {
          var x = cljs.core.first(arglist__8398);
          arglist__8398 = cljs.core.next(arglist__8398);
          var y = cljs.core.first(arglist__8398);
          arglist__8398 = cljs.core.next(arglist__8398);
          var z = cljs.core.first(arglist__8398);
          var args = cljs.core.rest(arglist__8398);
          return G__8396__delegate(x, y, z, args);
        };
        G__8396.cljs$core$IFn$_invoke$arity$variadic = G__8396__delegate;
        return G__8396;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__8399 = null;
            if (arguments.length > 3) {
              var G__8400__i = 0, G__8400__a = new Array(arguments.length - 3);
              while (G__8400__i < G__8400__a.length) {
                G__8400__a[G__8400__i] = arguments[G__8400__i + 3];
                ++G__8400__i;
              }
              G__8399 = new cljs.core.IndexedSeq(G__8400__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8399);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__8401__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7998_SHARP_) {
                var G__8377 = x;
                return p1__7998_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7998_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8377) : p1__7998_SHARP_.call(null, G__8377);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7999_SHARP_) {
                var and__3746__auto__ = function() {
                  var G__8379 = x;
                  return p1__7999_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7999_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8379) : p1__7999_SHARP_.call(null, G__8379);
                }();
                if (cljs.core.truth_(and__3746__auto__)) {
                  var G__8380 = y;
                  return p1__7999_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7999_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8380) : p1__7999_SHARP_.call(null, G__8380);
                } else {
                  return and__3746__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8000_SHARP_) {
                var and__3746__auto__ = function() {
                  var G__8382 = x;
                  return p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8382) : p1__8000_SHARP_.call(null, G__8382);
                }();
                if (cljs.core.truth_(and__3746__auto__)) {
                  var and__3746__auto____$1 = function() {
                    var G__8384 = y;
                    return p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8384) : p1__8000_SHARP_.call(null, G__8384);
                  }();
                  if (cljs.core.truth_(and__3746__auto____$1)) {
                    var G__8385 = z;
                    return p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8385) : p1__8000_SHARP_.call(null, G__8385);
                  } else {
                    return and__3746__auto____$1;
                  }
                } else {
                  return and__3746__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__8402__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__8001_SHARP_) {
                  return cljs.core.every_QMARK_(p1__8001_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__8402 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8403__i = 0, G__8403__a = new Array(arguments.length - 3);
                while (G__8403__i < G__8403__a.length) {
                  G__8403__a[G__8403__i] = arguments[G__8403__i + 3];
                  ++G__8403__i;
                }
                args = new cljs.core.IndexedSeq(G__8403__a, 0);
              }
              return G__8402__delegate.call(this, x, y, z, args);
            };
            G__8402.cljs$lang$maxFixedArity = 3;
            G__8402.cljs$lang$applyTo = function(arglist__8404) {
              var x = cljs.core.first(arglist__8404);
              arglist__8404 = cljs.core.next(arglist__8404);
              var y = cljs.core.first(arglist__8404);
              arglist__8404 = cljs.core.next(arglist__8404);
              var z = cljs.core.first(arglist__8404);
              var args = cljs.core.rest(arglist__8404);
              return G__8402__delegate(x, y, z, args);
            };
            G__8402.cljs$core$IFn$_invoke$arity$variadic = G__8402__delegate;
            return G__8402;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__8405 = null;
                if (arguments.length > 3) {
                  var G__8406__i = 0, G__8406__a = new Array(arguments.length - 3);
                  while (G__8406__i < G__8406__a.length) {
                    G__8406__a[G__8406__i] = arguments[G__8406__i + 3];
                    ++G__8406__i;
                  }
                  G__8405 = new cljs.core.IndexedSeq(G__8406__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8405);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__8401 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8407__i = 0, G__8407__a = new Array(arguments.length - 3);
        while (G__8407__i < G__8407__a.length) {
          G__8407__a[G__8407__i] = arguments[G__8407__i + 3];
          ++G__8407__i;
        }
        ps = new cljs.core.IndexedSeq(G__8407__a, 0);
      }
      return G__8401__delegate.call(this, p1, p2, p3, ps);
    };
    G__8401.cljs$lang$maxFixedArity = 3;
    G__8401.cljs$lang$applyTo = function(arglist__8408) {
      var p1 = cljs.core.first(arglist__8408);
      arglist__8408 = cljs.core.next(arglist__8408);
      var p2 = cljs.core.first(arglist__8408);
      arglist__8408 = cljs.core.next(arglist__8408);
      var p3 = cljs.core.first(arglist__8408);
      var ps = cljs.core.rest(arglist__8408);
      return G__8401__delegate(p1, p2, p3, ps);
    };
    G__8401.cljs$core$IFn$_invoke$arity$variadic = G__8401__delegate;
    return G__8401;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__8409 = null;
        if (arguments.length > 3) {
          var G__8410__i = 0, G__8410__a = new Array(arguments.length - 3);
          while (G__8410__i < G__8410__a.length) {
            G__8410__a[G__8410__i] = arguments[G__8410__i + 3];
            ++G__8410__i;
          }
          G__8409 = new cljs.core.IndexedSeq(G__8410__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8409);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__8616 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8616) : p.call(null, G__8616);
      };
      var sp1__2 = function(x, y) {
        var or__3758__auto__ = function() {
          var G__8618 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8618) : p.call(null, G__8618);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var G__8619 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8619) : p.call(null, G__8619);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3758__auto__ = function() {
          var G__8621 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8621) : p.call(null, G__8621);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = function() {
            var G__8623 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8623) : p.call(null, G__8623);
          }();
          if (cljs.core.truth_(or__3758__auto____$1)) {
            return or__3758__auto____$1;
          } else {
            var G__8624 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8624) : p.call(null, G__8624);
          }
        }
      };
      var sp1__4 = function() {
        var G__8785__delegate = function(x, y, z, args) {
          var or__3758__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3758__auto__)) {
            return or__3758__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__8785 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8786__i = 0, G__8786__a = new Array(arguments.length - 3);
            while (G__8786__i < G__8786__a.length) {
              G__8786__a[G__8786__i] = arguments[G__8786__i + 3];
              ++G__8786__i;
            }
            args = new cljs.core.IndexedSeq(G__8786__a, 0);
          }
          return G__8785__delegate.call(this, x, y, z, args);
        };
        G__8785.cljs$lang$maxFixedArity = 3;
        G__8785.cljs$lang$applyTo = function(arglist__8787) {
          var x = cljs.core.first(arglist__8787);
          arglist__8787 = cljs.core.next(arglist__8787);
          var y = cljs.core.first(arglist__8787);
          arglist__8787 = cljs.core.next(arglist__8787);
          var z = cljs.core.first(arglist__8787);
          var args = cljs.core.rest(arglist__8787);
          return G__8785__delegate(x, y, z, args);
        };
        G__8785.cljs$core$IFn$_invoke$arity$variadic = G__8785__delegate;
        return G__8785;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__8788 = null;
            if (arguments.length > 3) {
              var G__8789__i = 0, G__8789__a = new Array(arguments.length - 3);
              while (G__8789__i < G__8789__a.length) {
                G__8789__a[G__8789__i] = arguments[G__8789__i + 3];
                ++G__8789__i;
              }
              G__8788 = new cljs.core.IndexedSeq(G__8789__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8788);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3758__auto__ = function() {
          var G__8656 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8656) : p1.call(null, G__8656);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var G__8657 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8657) : p2.call(null, G__8657);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3758__auto__ = function() {
          var G__8659 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8659) : p1.call(null, G__8659);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = function() {
            var G__8661 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8661) : p1.call(null, G__8661);
          }();
          if (cljs.core.truth_(or__3758__auto____$1)) {
            return or__3758__auto____$1;
          } else {
            var or__3758__auto____$2 = function() {
              var G__8663 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8663) : p2.call(null, G__8663);
            }();
            if (cljs.core.truth_(or__3758__auto____$2)) {
              return or__3758__auto____$2;
            } else {
              var G__8664 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8664) : p2.call(null, G__8664);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3758__auto__ = function() {
          var G__8666 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8666) : p1.call(null, G__8666);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = function() {
            var G__8668 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8668) : p1.call(null, G__8668);
          }();
          if (cljs.core.truth_(or__3758__auto____$1)) {
            return or__3758__auto____$1;
          } else {
            var or__3758__auto____$2 = function() {
              var G__8670 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8670) : p1.call(null, G__8670);
            }();
            if (cljs.core.truth_(or__3758__auto____$2)) {
              return or__3758__auto____$2;
            } else {
              var or__3758__auto____$3 = function() {
                var G__8672 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8672) : p2.call(null, G__8672);
              }();
              if (cljs.core.truth_(or__3758__auto____$3)) {
                return or__3758__auto____$3;
              } else {
                var or__3758__auto____$4 = function() {
                  var G__8674 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8674) : p2.call(null, G__8674);
                }();
                if (cljs.core.truth_(or__3758__auto____$4)) {
                  return or__3758__auto____$4;
                } else {
                  var G__8675 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8675) : p2.call(null, G__8675);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8790__delegate = function(x, y, z, args) {
          var or__3758__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3758__auto__)) {
            return or__3758__auto__;
          } else {
            return cljs.core.some(function(or__3758__auto__) {
              return function(p1__8411_SHARP_) {
                var or__3758__auto____$1 = function() {
                  var G__8677 = p1__8411_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8677) : p1.call(null, G__8677);
                }();
                if (cljs.core.truth_(or__3758__auto____$1)) {
                  return or__3758__auto____$1;
                } else {
                  var G__8678 = p1__8411_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8678) : p2.call(null, G__8678);
                }
              };
            }(or__3758__auto__), args);
          }
        };
        var G__8790 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8791__i = 0, G__8791__a = new Array(arguments.length - 3);
            while (G__8791__i < G__8791__a.length) {
              G__8791__a[G__8791__i] = arguments[G__8791__i + 3];
              ++G__8791__i;
            }
            args = new cljs.core.IndexedSeq(G__8791__a, 0);
          }
          return G__8790__delegate.call(this, x, y, z, args);
        };
        G__8790.cljs$lang$maxFixedArity = 3;
        G__8790.cljs$lang$applyTo = function(arglist__8792) {
          var x = cljs.core.first(arglist__8792);
          arglist__8792 = cljs.core.next(arglist__8792);
          var y = cljs.core.first(arglist__8792);
          arglist__8792 = cljs.core.next(arglist__8792);
          var z = cljs.core.first(arglist__8792);
          var args = cljs.core.rest(arglist__8792);
          return G__8790__delegate(x, y, z, args);
        };
        G__8790.cljs$core$IFn$_invoke$arity$variadic = G__8790__delegate;
        return G__8790;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__8793 = null;
            if (arguments.length > 3) {
              var G__8794__i = 0, G__8794__a = new Array(arguments.length - 3);
              while (G__8794__i < G__8794__a.length) {
                G__8794__a[G__8794__i] = arguments[G__8794__i + 3];
                ++G__8794__i;
              }
              G__8793 = new cljs.core.IndexedSeq(G__8794__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8793);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3758__auto__ = function() {
          var G__8724 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8724) : p1.call(null, G__8724);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = function() {
            var G__8726 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8726) : p2.call(null, G__8726);
          }();
          if (cljs.core.truth_(or__3758__auto____$1)) {
            return or__3758__auto____$1;
          } else {
            var G__8727 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8727) : p3.call(null, G__8727);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3758__auto__ = function() {
          var G__8729 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8729) : p1.call(null, G__8729);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = function() {
            var G__8731 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8731) : p2.call(null, G__8731);
          }();
          if (cljs.core.truth_(or__3758__auto____$1)) {
            return or__3758__auto____$1;
          } else {
            var or__3758__auto____$2 = function() {
              var G__8733 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8733) : p3.call(null, G__8733);
            }();
            if (cljs.core.truth_(or__3758__auto____$2)) {
              return or__3758__auto____$2;
            } else {
              var or__3758__auto____$3 = function() {
                var G__8735 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8735) : p1.call(null, G__8735);
              }();
              if (cljs.core.truth_(or__3758__auto____$3)) {
                return or__3758__auto____$3;
              } else {
                var or__3758__auto____$4 = function() {
                  var G__8737 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8737) : p2.call(null, G__8737);
                }();
                if (cljs.core.truth_(or__3758__auto____$4)) {
                  return or__3758__auto____$4;
                } else {
                  var G__8738 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8738) : p3.call(null, G__8738);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3758__auto__ = function() {
          var G__8740 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8740) : p1.call(null, G__8740);
        }();
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          var or__3758__auto____$1 = function() {
            var G__8742 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8742) : p2.call(null, G__8742);
          }();
          if (cljs.core.truth_(or__3758__auto____$1)) {
            return or__3758__auto____$1;
          } else {
            var or__3758__auto____$2 = function() {
              var G__8744 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8744) : p3.call(null, G__8744);
            }();
            if (cljs.core.truth_(or__3758__auto____$2)) {
              return or__3758__auto____$2;
            } else {
              var or__3758__auto____$3 = function() {
                var G__8746 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8746) : p1.call(null, G__8746);
              }();
              if (cljs.core.truth_(or__3758__auto____$3)) {
                return or__3758__auto____$3;
              } else {
                var or__3758__auto____$4 = function() {
                  var G__8748 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8748) : p2.call(null, G__8748);
                }();
                if (cljs.core.truth_(or__3758__auto____$4)) {
                  return or__3758__auto____$4;
                } else {
                  var or__3758__auto____$5 = function() {
                    var G__8750 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8750) : p3.call(null, G__8750);
                  }();
                  if (cljs.core.truth_(or__3758__auto____$5)) {
                    return or__3758__auto____$5;
                  } else {
                    var or__3758__auto____$6 = function() {
                      var G__8752 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8752) : p1.call(null, G__8752);
                    }();
                    if (cljs.core.truth_(or__3758__auto____$6)) {
                      return or__3758__auto____$6;
                    } else {
                      var or__3758__auto____$7 = function() {
                        var G__8754 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8754) : p2.call(null, G__8754);
                      }();
                      if (cljs.core.truth_(or__3758__auto____$7)) {
                        return or__3758__auto____$7;
                      } else {
                        var G__8755 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8755) : p3.call(null, G__8755);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8795__delegate = function(x, y, z, args) {
          var or__3758__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3758__auto__)) {
            return or__3758__auto__;
          } else {
            return cljs.core.some(function(or__3758__auto__) {
              return function(p1__8412_SHARP_) {
                var or__3758__auto____$1 = function() {
                  var G__8757 = p1__8412_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8757) : p1.call(null, G__8757);
                }();
                if (cljs.core.truth_(or__3758__auto____$1)) {
                  return or__3758__auto____$1;
                } else {
                  var or__3758__auto____$2 = function() {
                    var G__8759 = p1__8412_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8759) : p2.call(null, G__8759);
                  }();
                  if (cljs.core.truth_(or__3758__auto____$2)) {
                    return or__3758__auto____$2;
                  } else {
                    var G__8760 = p1__8412_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8760) : p3.call(null, G__8760);
                  }
                }
              };
            }(or__3758__auto__), args);
          }
        };
        var G__8795 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8796__i = 0, G__8796__a = new Array(arguments.length - 3);
            while (G__8796__i < G__8796__a.length) {
              G__8796__a[G__8796__i] = arguments[G__8796__i + 3];
              ++G__8796__i;
            }
            args = new cljs.core.IndexedSeq(G__8796__a, 0);
          }
          return G__8795__delegate.call(this, x, y, z, args);
        };
        G__8795.cljs$lang$maxFixedArity = 3;
        G__8795.cljs$lang$applyTo = function(arglist__8797) {
          var x = cljs.core.first(arglist__8797);
          arglist__8797 = cljs.core.next(arglist__8797);
          var y = cljs.core.first(arglist__8797);
          arglist__8797 = cljs.core.next(arglist__8797);
          var z = cljs.core.first(arglist__8797);
          var args = cljs.core.rest(arglist__8797);
          return G__8795__delegate(x, y, z, args);
        };
        G__8795.cljs$core$IFn$_invoke$arity$variadic = G__8795__delegate;
        return G__8795;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__8798 = null;
            if (arguments.length > 3) {
              var G__8799__i = 0, G__8799__a = new Array(arguments.length - 3);
              while (G__8799__i < G__8799__a.length) {
                G__8799__a[G__8799__i] = arguments[G__8799__i + 3];
                ++G__8799__i;
              }
              G__8798 = new cljs.core.IndexedSeq(G__8799__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8798);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__8800__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8413_SHARP_) {
                var G__8776 = x;
                return p1__8413_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8413_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8776) : p1__8413_SHARP_.call(null, G__8776);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8414_SHARP_) {
                var or__3758__auto__ = function() {
                  var G__8778 = x;
                  return p1__8414_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8414_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8778) : p1__8414_SHARP_.call(null, G__8778);
                }();
                if (cljs.core.truth_(or__3758__auto__)) {
                  return or__3758__auto__;
                } else {
                  var G__8779 = y;
                  return p1__8414_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8414_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8779) : p1__8414_SHARP_.call(null, G__8779);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8415_SHARP_) {
                var or__3758__auto__ = function() {
                  var G__8781 = x;
                  return p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8781) : p1__8415_SHARP_.call(null, G__8781);
                }();
                if (cljs.core.truth_(or__3758__auto__)) {
                  return or__3758__auto__;
                } else {
                  var or__3758__auto____$1 = function() {
                    var G__8783 = y;
                    return p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8783) : p1__8415_SHARP_.call(null, G__8783);
                  }();
                  if (cljs.core.truth_(or__3758__auto____$1)) {
                    return or__3758__auto____$1;
                  } else {
                    var G__8784 = z;
                    return p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8784) : p1__8415_SHARP_.call(null, G__8784);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__8801__delegate = function(x, y, z, args) {
              var or__3758__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3758__auto__)) {
                return or__3758__auto__;
              } else {
                return cljs.core.some(function(or__3758__auto__, ps__$1) {
                  return function(p1__8416_SHARP_) {
                    return cljs.core.some(p1__8416_SHARP_, args);
                  };
                }(or__3758__auto__, ps__$1), ps__$1);
              }
            };
            var G__8801 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8802__i = 0, G__8802__a = new Array(arguments.length - 3);
                while (G__8802__i < G__8802__a.length) {
                  G__8802__a[G__8802__i] = arguments[G__8802__i + 3];
                  ++G__8802__i;
                }
                args = new cljs.core.IndexedSeq(G__8802__a, 0);
              }
              return G__8801__delegate.call(this, x, y, z, args);
            };
            G__8801.cljs$lang$maxFixedArity = 3;
            G__8801.cljs$lang$applyTo = function(arglist__8803) {
              var x = cljs.core.first(arglist__8803);
              arglist__8803 = cljs.core.next(arglist__8803);
              var y = cljs.core.first(arglist__8803);
              arglist__8803 = cljs.core.next(arglist__8803);
              var z = cljs.core.first(arglist__8803);
              var args = cljs.core.rest(arglist__8803);
              return G__8801__delegate(x, y, z, args);
            };
            G__8801.cljs$core$IFn$_invoke$arity$variadic = G__8801__delegate;
            return G__8801;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__8804 = null;
                if (arguments.length > 3) {
                  var G__8805__i = 0, G__8805__a = new Array(arguments.length - 3);
                  while (G__8805__i < G__8805__a.length) {
                    G__8805__a[G__8805__i] = arguments[G__8805__i + 3];
                    ++G__8805__i;
                  }
                  G__8804 = new cljs.core.IndexedSeq(G__8805__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8804);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__8800 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8806__i = 0, G__8806__a = new Array(arguments.length - 3);
        while (G__8806__i < G__8806__a.length) {
          G__8806__a[G__8806__i] = arguments[G__8806__i + 3];
          ++G__8806__i;
        }
        ps = new cljs.core.IndexedSeq(G__8806__a, 0);
      }
      return G__8800__delegate.call(this, p1, p2, p3, ps);
    };
    G__8800.cljs$lang$maxFixedArity = 3;
    G__8800.cljs$lang$applyTo = function(arglist__8807) {
      var p1 = cljs.core.first(arglist__8807);
      arglist__8807 = cljs.core.next(arglist__8807);
      var p2 = cljs.core.first(arglist__8807);
      arglist__8807 = cljs.core.next(arglist__8807);
      var p3 = cljs.core.first(arglist__8807);
      var ps = cljs.core.rest(arglist__8807);
      return G__8800__delegate(p1, p2, p3, ps);
    };
    G__8800.cljs$core$IFn$_invoke$arity$variadic = G__8800__delegate;
    return G__8800;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__8808 = null;
        if (arguments.length > 3) {
          var G__8809__i = 0, G__8809__a = new Array(arguments.length - 3);
          while (G__8809__i < G__8809__a.length) {
            G__8809__a[G__8809__i] = arguments[G__8809__i + 3];
            ++G__8809__i;
          }
          G__8808 = new cljs.core.IndexedSeq(G__8809__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8808);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__8864 = null;
        var G__8864__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8864__1 = function(result) {
          var G__8850 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8850) : rf.call(null, G__8850);
        };
        var G__8864__2 = function(result, input) {
          var G__8851 = result;
          var G__8852 = function() {
            var G__8853 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8853) : f.call(null, G__8853);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8851, G__8852) : rf.call(null, G__8851, G__8852);
        };
        var G__8864__3 = function() {
          var G__8865__delegate = function(result, input, inputs) {
            var G__8854 = result;
            var G__8855 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8854, G__8855) : rf.call(null, G__8854, G__8855);
          };
          var G__8865 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__8866__i = 0, G__8866__a = new Array(arguments.length - 2);
              while (G__8866__i < G__8866__a.length) {
                G__8866__a[G__8866__i] = arguments[G__8866__i + 2];
                ++G__8866__i;
              }
              inputs = new cljs.core.IndexedSeq(G__8866__a, 0);
            }
            return G__8865__delegate.call(this, result, input, inputs);
          };
          G__8865.cljs$lang$maxFixedArity = 2;
          G__8865.cljs$lang$applyTo = function(arglist__8867) {
            var result = cljs.core.first(arglist__8867);
            arglist__8867 = cljs.core.next(arglist__8867);
            var input = cljs.core.first(arglist__8867);
            var inputs = cljs.core.rest(arglist__8867);
            return G__8865__delegate(result, input, inputs);
          };
          G__8865.cljs$core$IFn$_invoke$arity$variadic = G__8865__delegate;
          return G__8865;
        }();
        G__8864 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__8864__0.call(this);
            case 1:
              return G__8864__1.call(this, result);
            case 2:
              return G__8864__2.call(this, result, input);
            default:
              var G__8868 = null;
              if (arguments.length > 2) {
                var G__8869__i = 0, G__8869__a = new Array(arguments.length - 2);
                while (G__8869__i < G__8869__a.length) {
                  G__8869__a[G__8869__i] = arguments[G__8869__i + 2];
                  ++G__8869__i;
                }
                G__8868 = new cljs.core.IndexedSeq(G__8869__a, 0);
              }
              return G__8864__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__8868);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8864.cljs$lang$maxFixedArity = 2;
        G__8864.cljs$lang$applyTo = G__8864__3.cljs$lang$applyTo;
        G__8864.cljs$core$IFn$_invoke$arity$0 = G__8864__0;
        G__8864.cljs$core$IFn$_invoke$arity$1 = G__8864__1;
        G__8864.cljs$core$IFn$_invoke$arity$2 = G__8864__2;
        G__8864.cljs$core$IFn$_invoke$arity$variadic = G__8864__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__8864;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4645__auto___8870 = size;
          var i_8871 = 0;
          while (true) {
            if (i_8871 < n__4645__auto___8870) {
              cljs.core.chunk_append(b, function() {
                var G__8856 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8871);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8856) : f.call(null, G__8856);
              }());
              var G__8872 = i_8871 + 1;
              i_8871 = G__8872;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8857 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8857) : f.call(null, G__8857);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__8858 = cljs.core.first(s1);
          var G__8859 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8858, G__8859) : f.call(null, G__8858, G__8859);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__8860 = cljs.core.first(s1);
          var G__8861 = cljs.core.first(s2);
          var G__8862 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8860, G__8861, G__8862) : f.call(null, G__8860, G__8861, G__8862);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__8873__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__8810_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__8810_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__8873 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8874__i = 0, G__8874__a = new Array(arguments.length - 4);
        while (G__8874__i < G__8874__a.length) {
          G__8874__a[G__8874__i] = arguments[G__8874__i + 4];
          ++G__8874__i;
        }
        colls = new cljs.core.IndexedSeq(G__8874__a, 0);
      }
      return G__8873__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8873.cljs$lang$maxFixedArity = 4;
    G__8873.cljs$lang$applyTo = function(arglist__8875) {
      var f = cljs.core.first(arglist__8875);
      arglist__8875 = cljs.core.next(arglist__8875);
      var c1 = cljs.core.first(arglist__8875);
      arglist__8875 = cljs.core.next(arglist__8875);
      var c2 = cljs.core.first(arglist__8875);
      arglist__8875 = cljs.core.next(arglist__8875);
      var c3 = cljs.core.first(arglist__8875);
      var colls = cljs.core.rest(arglist__8875);
      return G__8873__delegate(f, c1, c2, c3, colls);
    };
    G__8873.cljs$core$IFn$_invoke$arity$variadic = G__8873__delegate;
    return G__8873;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__8876 = null;
        if (arguments.length > 4) {
          var G__8877__i = 0, G__8877__a = new Array(arguments.length - 4);
          while (G__8877__i < G__8877__a.length) {
            G__8877__a[G__8877__i] = arguments[G__8877__i + 4];
            ++G__8877__i;
          }
          G__8876 = new cljs.core.IndexedSeq(G__8877__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8876);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8886 = null;
          var G__8886__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8886__1 = function(result) {
            var G__8883 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8883) : rf.call(null, G__8883);
          };
          var G__8886__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__8884 = result;
              var G__8885 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8884, G__8885) : rf.call(null, G__8884, G__8885);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__8886 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8886__0.call(this);
              case 1:
                return G__8886__1.call(this, result);
              case 2:
                return G__8886__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8886.cljs$core$IFn$_invoke$arity$0 = G__8886__0;
          G__8886.cljs$core$IFn$_invoke$arity$1 = G__8886__1;
          G__8886.cljs$core$IFn$_invoke$arity$2 = G__8886__2;
          return G__8886;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8893 = null;
          var G__8893__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8893__1 = function(result) {
            var G__8890 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8890) : rf.call(null, G__8890);
          };
          var G__8893__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__8891 = result;
              var G__8892 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8891, G__8892) : rf.call(null, G__8891, G__8892);
            }
          };
          G__8893 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8893__0.call(this);
              case 1:
                return G__8893__1.call(this, result);
              case 2:
                return G__8893__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8893.cljs$core$IFn$_invoke$arity$0 = G__8893__0;
          G__8893.cljs$core$IFn$_invoke$arity$1 = G__8893__1;
          G__8893.cljs$core$IFn$_invoke$arity$2 = G__8893__2;
          return G__8893;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__8894 = n__$1 - 1;
          var G__8895 = cljs.core.rest(s);
          n__$1 = G__8894;
          coll__$1 = G__8895;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__8898 = cljs.core.next(s);
      var G__8899 = cljs.core.next(lead);
      s = G__8898;
      lead = G__8899;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__8912 = null;
          var G__8912__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8912__1 = function(result) {
            var G__8906 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8906) : rf.call(null, G__8906);
          };
          var G__8912__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3746__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3746__auto__)) {
                var G__8907 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8907) : pred.call(null, G__8907);
              } else {
                return and__3746__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__8908 = result;
              var G__8909 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8908, G__8909) : rf.call(null, G__8908, G__8909);
            }
          };
          G__8912 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8912__0.call(this);
              case 1:
                return G__8912__1.call(this, result);
              case 2:
                return G__8912__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8912.cljs$core$IFn$_invoke$arity$0 = G__8912__0;
          G__8912.cljs$core$IFn$_invoke$arity$1 = G__8912__1;
          G__8912.cljs$core$IFn$_invoke$arity$2 = G__8912__2;
          return G__8912;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3746__auto__ = s;
          if (and__3746__auto__) {
            var G__8911 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8911) : pred__$1.call(null, G__8911);
          } else {
            return and__3746__auto__;
          }
        }())) {
          var G__8913 = pred__$1;
          var G__8914 = cljs.core.rest(s);
          pred__$1 = G__8913;
          coll__$1 = G__8914;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__8923 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8923) : f.call(null, G__8923);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__8926__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__8926 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__8927__i = 0, G__8927__a = new Array(arguments.length - 2);
        while (G__8927__i < G__8927__a.length) {
          G__8927__a[G__8927__i] = arguments[G__8927__i + 2];
          ++G__8927__i;
        }
        colls = new cljs.core.IndexedSeq(G__8927__a, 0);
      }
      return G__8926__delegate.call(this, c1, c2, colls);
    };
    G__8926.cljs$lang$maxFixedArity = 2;
    G__8926.cljs$lang$applyTo = function(arglist__8928) {
      var c1 = cljs.core.first(arglist__8928);
      arglist__8928 = cljs.core.next(arglist__8928);
      var c2 = cljs.core.first(arglist__8928);
      var colls = cljs.core.rest(arglist__8928);
      return G__8926__delegate(c1, c2, colls);
    };
    G__8926.cljs$core$IFn$_invoke$arity$variadic = G__8926__delegate;
    return G__8926;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__8929 = null;
        if (arguments.length > 2) {
          var G__8930__i = 0, G__8930__a = new Array(arguments.length - 2);
          while (G__8930__i < G__8930__a.length) {
            G__8930__a[G__8930__i] = arguments[G__8930__i + 2];
            ++G__8930__i;
          }
          G__8929 = new cljs.core.IndexedSeq(G__8930__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__8929);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__8945 = null;
          var G__8945__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8945__1 = function(result) {
            var G__8938 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8938) : rf.call(null, G__8938);
          };
          var G__8945__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__8939 = result;
                var G__8940 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8939, G__8940) : rf.call(null, G__8939, G__8940);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__8941 = sepr;
                var G__8942 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8941, G__8942) : rf.call(null, G__8941, G__8942);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__8943 = result;
              var G__8944 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8943, G__8944) : rf.call(null, G__8943, G__8944);
            }
          };
          G__8945 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8945__0.call(this);
              case 1:
                return G__8945__1.call(this, result);
              case 2:
                return G__8945__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8945.cljs$core$IFn$_invoke$arity$0 = G__8945__0;
          G__8945.cljs$core$IFn$_invoke$arity$1 = G__8945__1;
          G__8945.cljs$core$IFn$_invoke$arity$2 = G__8945__2;
          return G__8945;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__8954__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__8954 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__8955__i = 0, G__8955__a = new Array(arguments.length - 1);
        while (G__8955__i < G__8955__a.length) {
          G__8955__a[G__8955__i] = arguments[G__8955__i + 1];
          ++G__8955__i;
        }
        colls = new cljs.core.IndexedSeq(G__8955__a, 0);
      }
      return G__8954__delegate.call(this, f, colls);
    };
    G__8954.cljs$lang$maxFixedArity = 1;
    G__8954.cljs$lang$applyTo = function(arglist__8956) {
      var f = cljs.core.first(arglist__8956);
      var colls = cljs.core.rest(arglist__8956);
      return G__8954__delegate(f, colls);
    };
    G__8954.cljs$core$IFn$_invoke$arity$variadic = G__8954__delegate;
    return G__8954;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__8957 = null;
        if (arguments.length > 1) {
          var G__8958__i = 0, G__8958__a = new Array(arguments.length - 1);
          while (G__8958__i < G__8958__a.length) {
            G__8958__a[G__8958__i] = arguments[G__8958__i + 1];
            ++G__8958__i;
          }
          G__8957 = new cljs.core.IndexedSeq(G__8958__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8957);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__8977 = null;
        var G__8977__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8977__1 = function(result) {
          var G__8971 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8971) : rf.call(null, G__8971);
        };
        var G__8977__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__8972 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8972) : pred.call(null, G__8972);
          }())) {
            var G__8973 = result;
            var G__8974 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8973, G__8974) : rf.call(null, G__8973, G__8974);
          } else {
            return result;
          }
        };
        G__8977 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8977__0.call(this);
            case 1:
              return G__8977__1.call(this, result);
            case 2:
              return G__8977__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8977.cljs$core$IFn$_invoke$arity$0 = G__8977__0;
        G__8977.cljs$core$IFn$_invoke$arity$1 = G__8977__1;
        G__8977.cljs$core$IFn$_invoke$arity$2 = G__8977__2;
        return G__8977;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4645__auto___8978 = size;
          var i_8979 = 0;
          while (true) {
            if (i_8979 < n__4645__auto___8978) {
              if (cljs.core.truth_(function() {
                var G__8975 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8979);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8975) : pred.call(null, G__8975);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8979));
              } else {
              }
              var G__8980 = i_8979 + 1;
              i_8979 = G__8980;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__8976 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8976) : pred.call(null, G__8976);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__8987 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8987) : branch_QMARK_.call(null, G__8987);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__8988 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8988) : children.call(null, G__8988);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__8989_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__8989_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__8992 = to;
        if (G__8992) {
          var bit__4432__auto__ = G__8992.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4432__auto__ || G__8992.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__8993 = to;
      if (G__8993) {
        var bit__4432__auto__ = G__8993.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4432__auto__ || G__8993.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__8995 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8995) : f.call(null, G__8995);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__8996__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__8996 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8997__i = 0, G__8997__a = new Array(arguments.length - 4);
        while (G__8997__i < G__8997__a.length) {
          G__8997__a[G__8997__i] = arguments[G__8997__i + 4];
          ++G__8997__i;
        }
        colls = new cljs.core.IndexedSeq(G__8997__a, 0);
      }
      return G__8996__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8996.cljs$lang$maxFixedArity = 4;
    G__8996.cljs$lang$applyTo = function(arglist__8998) {
      var f = cljs.core.first(arglist__8998);
      arglist__8998 = cljs.core.next(arglist__8998);
      var c1 = cljs.core.first(arglist__8998);
      arglist__8998 = cljs.core.next(arglist__8998);
      var c2 = cljs.core.first(arglist__8998);
      arglist__8998 = cljs.core.next(arglist__8998);
      var c3 = cljs.core.first(arglist__8998);
      var colls = cljs.core.rest(arglist__8998);
      return G__8996__delegate(f, c1, c2, c3, colls);
    };
    G__8996.cljs$core$IFn$_invoke$arity$variadic = G__8996__delegate;
    return G__8996;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__8999 = null;
        if (arguments.length > 4) {
          var G__9000__i = 0, G__9000__a = new Array(arguments.length - 4);
          while (G__9000__i < G__9000__a.length) {
            G__9000__a[G__9000__i] = arguments[G__9000__i + 4];
            ++G__9000__i;
          }
          G__8999 = new cljs.core.IndexedSeq(G__9000__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8999);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__9002 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9002) : pred.call(null, G__9002);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__9017 = m__$1;
          if (G__9017) {
            var bit__4439__auto__ = G__9017.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4439__auto__ || G__9017.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__9017.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9017);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9017);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__9018 = sentinel;
            var G__9019 = m__$2;
            var G__9020 = cljs.core.next(ks__$1);
            sentinel = G__9018;
            m__$1 = G__9019;
            ks__$1 = G__9020;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__9021, v) {
  var vec__9026 = p__9021;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9026, 0, null);
  var ks = cljs.core.nthnext(vec__9026, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__9027, f) {
    var vec__9065 = p__9027;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9065, 0, null);
    var ks = cljs.core.nthnext(vec__9065, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9066 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9066) : f.call(null, G__9066);
      }());
    }
  };
  var update_in__4 = function(m, p__9028, f, a) {
    var vec__9067 = p__9028;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9067, 0, null);
    var ks = cljs.core.nthnext(vec__9067, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9068 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9069 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9068, G__9069) : f.call(null, G__9068, G__9069);
      }());
    }
  };
  var update_in__5 = function(m, p__9029, f, a, b) {
    var vec__9070 = p__9029;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9070, 0, null);
    var ks = cljs.core.nthnext(vec__9070, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9071 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9072 = a;
        var G__9073 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9071, G__9072, G__9073) : f.call(null, G__9071, G__9072, G__9073);
      }());
    }
  };
  var update_in__6 = function(m, p__9030, f, a, b, c) {
    var vec__9074 = p__9030;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9074, 0, null);
    var ks = cljs.core.nthnext(vec__9074, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9075 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9076 = a;
        var G__9077 = b;
        var G__9078 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9075, G__9076, G__9077, G__9078) : f.call(null, G__9075, G__9076, G__9077, G__9078);
      }());
    }
  };
  var update_in__7 = function() {
    var G__9080__delegate = function(m, p__9031, f, a, b, c, args) {
      var vec__9079 = p__9031;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9079, 0, null);
      var ks = cljs.core.nthnext(vec__9079, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__9080 = function(m, p__9031, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__9081__i = 0, G__9081__a = new Array(arguments.length - 6);
        while (G__9081__i < G__9081__a.length) {
          G__9081__a[G__9081__i] = arguments[G__9081__i + 6];
          ++G__9081__i;
        }
        args = new cljs.core.IndexedSeq(G__9081__a, 0);
      }
      return G__9080__delegate.call(this, m, p__9031, f, a, b, c, args);
    };
    G__9080.cljs$lang$maxFixedArity = 6;
    G__9080.cljs$lang$applyTo = function(arglist__9082) {
      var m = cljs.core.first(arglist__9082);
      arglist__9082 = cljs.core.next(arglist__9082);
      var p__9031 = cljs.core.first(arglist__9082);
      arglist__9082 = cljs.core.next(arglist__9082);
      var f = cljs.core.first(arglist__9082);
      arglist__9082 = cljs.core.next(arglist__9082);
      var a = cljs.core.first(arglist__9082);
      arglist__9082 = cljs.core.next(arglist__9082);
      var b = cljs.core.first(arglist__9082);
      arglist__9082 = cljs.core.next(arglist__9082);
      var c = cljs.core.first(arglist__9082);
      var args = cljs.core.rest(arglist__9082);
      return G__9080__delegate(m, p__9031, f, a, b, c, args);
    };
    G__9080.cljs$core$IFn$_invoke$arity$variadic = G__9080__delegate;
    return G__9080;
  }();
  update_in = function(m, p__9031, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__9031, f);
      case 4:
        return update_in__4.call(this, m, p__9031, f, a);
      case 5:
        return update_in__5.call(this, m, p__9031, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__9031, f, a, b, c);
      default:
        var G__9083 = null;
        if (arguments.length > 6) {
          var G__9084__i = 0, G__9084__a = new Array(arguments.length - 6);
          while (G__9084__i < G__9084__a.length) {
            G__9084__a[G__9084__i] = arguments[G__9084__i + 6];
            ++G__9084__i;
          }
          G__9083 = new cljs.core.IndexedSeq(G__9084__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__9031, f, a, b, c, G__9083);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9095 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9095) : f.call(null, G__9095);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9096 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9097 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9096, G__9097) : f.call(null, G__9096, G__9097);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9098 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9099 = x;
      var G__9100 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9098, G__9099, G__9100) : f.call(null, G__9098, G__9099, G__9100);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9101 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9102 = x;
      var G__9103 = y;
      var G__9104 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9101, G__9102, G__9103, G__9104) : f.call(null, G__9101, G__9102, G__9103, G__9104);
    }());
  };
  var update__7 = function() {
    var G__9105__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__9105 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__9106__i = 0, G__9106__a = new Array(arguments.length - 6);
        while (G__9106__i < G__9106__a.length) {
          G__9106__a[G__9106__i] = arguments[G__9106__i + 6];
          ++G__9106__i;
        }
        more = new cljs.core.IndexedSeq(G__9106__a, 0);
      }
      return G__9105__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__9105.cljs$lang$maxFixedArity = 6;
    G__9105.cljs$lang$applyTo = function(arglist__9107) {
      var m = cljs.core.first(arglist__9107);
      arglist__9107 = cljs.core.next(arglist__9107);
      var k = cljs.core.first(arglist__9107);
      arglist__9107 = cljs.core.next(arglist__9107);
      var f = cljs.core.first(arglist__9107);
      arglist__9107 = cljs.core.next(arglist__9107);
      var x = cljs.core.first(arglist__9107);
      arglist__9107 = cljs.core.next(arglist__9107);
      var y = cljs.core.first(arglist__9107);
      arglist__9107 = cljs.core.next(arglist__9107);
      var z = cljs.core.first(arglist__9107);
      var more = cljs.core.rest(arglist__9107);
      return G__9105__delegate(m, k, f, x, y, z, more);
    };
    G__9105.cljs$core$IFn$_invoke$arity$variadic = G__9105__delegate;
    return G__9105;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__9108 = null;
        if (arguments.length > 6) {
          var G__9109__i = 0, G__9109__a = new Array(arguments.length - 6);
          while (G__9109__i < G__9109__a.length) {
            G__9109__a[G__9109__i] = arguments[G__9109__i + 6];
            ++G__9109__i;
          }
          G__9108 = new cljs.core.IndexedSeq(G__9109__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__9108);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__9110 = ll - 5;
      var G__9111 = r;
      ll = G__9110;
      ret = G__9111;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__9116 = cljs.core.pv_aget(node, 0);
      var G__9117 = level - 5;
      node = G__9116;
      level = G__9117;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__9118 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__9119 = level - 5;
        node = G__9118;
        level = G__9119;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9129 = init__$2;
              var G__9130 = j + i;
              var G__9131 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9129, G__9130, G__9131) : f.call(null, G__9129, G__9130, G__9131);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9142 = j + 1;
              var G__9143 = init__$3;
              j = G__9142;
              init__$2 = G__9143;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9132 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9132) : cljs.core.deref.call(null, G__9132);
      } else {
        var G__9144 = i + len;
        var G__9145 = init__$2;
        i = G__9144;
        init__$1 = G__9145;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__9133 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9133) : cljs.core.tv_editable_root.call(null, G__9133);
  }(), function() {
    var G__9134 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9134) : cljs.core.tv_editable_tail.call(null, G__9134);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9135 = init__$2;
              var G__9136 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9135, G__9136) : f.call(null, G__9135, G__9136);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9146 = j + 1;
              var G__9147 = init__$3;
              j = G__9146;
              init__$2 = G__9147;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9137 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9137) : cljs.core.deref.call(null, G__9137);
      } else {
        var G__9148 = i + len;
        var G__9149 = init__$2;
        i = G__9148;
        init__$1 = G__9149;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__9138 = coll__$1;
      var G__9139 = cljs.core.first_array_for_longvec(coll__$1);
      var G__9140 = 0;
      var G__9141 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9138, G__9139, G__9140, G__9141) : cljs.core.chunked_seq.call(null, G__9138, G__9139, G__9140, G__9141);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4645__auto___9150 = len;
    var i_9151 = 0;
    while (true) {
      if (i_9151 < n__4645__auto___9150) {
        new_tail[i_9151] = self__.tail[i_9151];
        var G__9152 = i_9151 + 1;
        i_9151 = G__9152;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9153 = null;
  var G__9153__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9153__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9153 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9153__2.call(this, self__, k);
      case 3:
        return G__9153__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9153.cljs$core$IFn$_invoke$arity$2 = G__9153__2;
  G__9153.cljs$core$IFn$_invoke$arity$3 = G__9153__3;
  return G__9153;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9128) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9128)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__9154 = i + 1;
        var G__9155 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__9154;
        out = G__9155;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__9156__i = 0, G__9156__a = new Array(arguments.length - 0);
      while (G__9156__i < G__9156__a.length) {
        G__9156__a[G__9156__i] = arguments[G__9156__i + 0];
        ++G__9156__i;
      }
      args = new cljs.core.IndexedSeq(G__9156__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9157) {
    var args = cljs.core.seq(arglist__9157);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9158 = self__.vec;
      var G__9159 = self__.node;
      var G__9160 = self__.i;
      var G__9161 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9158, G__9159, G__9160, G__9161) : cljs.core.chunked_seq.call(null, G__9158, G__9159, G__9160, G__9161);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9162 = self__.vec;
    var G__9163 = self__.i + self__.off;
    var G__9164 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9162, G__9163, G__9164) : cljs.core.subvec.call(null, G__9162, G__9163, G__9164);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9165 = self__.vec;
    var G__9166 = self__.i + self__.off;
    var G__9167 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9165, G__9166, G__9167) : cljs.core.subvec.call(null, G__9165, G__9166, G__9167);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9168 = self__.vec;
      var G__9169 = self__.node;
      var G__9170 = self__.i;
      var G__9171 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9168, G__9169, G__9170, G__9171) : cljs.core.chunked_seq.call(null, G__9168, G__9169, G__9170, G__9171);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9172 = self__.vec;
    var G__9173 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9174 = end;
    var G__9175 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9172, G__9173, G__9174, G__9175) : cljs.core.chunked_seq.call(null, G__9172, G__9173, G__9174, G__9175);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__9176 = self__.vec;
  var G__9177 = self__.node;
  var G__9178 = self__.i;
  var G__9179 = self__.off;
  var G__9180 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9176, G__9177, G__9178, G__9179, G__9180) : cljs.core.chunked_seq.call(null, G__9176, G__9177, G__9178, G__9179, G__9180);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9181 = self__.vec;
    var G__9182 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9183 = end;
    var G__9184 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9181, G__9182, G__9183, G__9184) : cljs.core.chunked_seq.call(null, G__9181, G__9182, G__9183, G__9184);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__9186 = self__.meta;
  var G__9187 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__9188 = self__.start;
  var G__9189 = function() {
    var x__4075__auto__ = self__.end;
    var y__4076__auto__ = v_pos + 1;
    return x__4075__auto__ > y__4076__auto__ ? x__4075__auto__ : y__4076__auto__;
  }();
  var G__9190 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9186, G__9187, G__9188, G__9189, G__9190) : cljs.core.build_subvec.call(null, G__9186, G__9187, G__9188, G__9189, G__9190);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__9191 = self__.meta;
    var G__9192 = self__.v;
    var G__9193 = self__.start;
    var G__9194 = self__.end - 1;
    var G__9195 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9191, G__9192, G__9193, G__9194, G__9195) : cljs.core.build_subvec.call(null, G__9191, G__9192, G__9193, G__9194, G__9195);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__9197 = meta__$1;
  var G__9198 = self__.v;
  var G__9199 = self__.start;
  var G__9200 = self__.end;
  var G__9201 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9197, G__9198, G__9199, G__9200, G__9201) : cljs.core.build_subvec.call(null, G__9197, G__9198, G__9199, G__9200, G__9201);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9202 = self__.meta;
  var G__9203 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__9204 = self__.start;
  var G__9205 = self__.end + 1;
  var G__9206 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9202, G__9203, G__9204, G__9205, G__9206) : cljs.core.build_subvec.call(null, G__9202, G__9203, G__9204, G__9205, G__9206);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9207 = null;
  var G__9207__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9207__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9207 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9207__2.call(this, self__, k);
      case 3:
        return G__9207__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9207.cljs$core$IFn$_invoke$arity$2 = G__9207__2;
  G__9207.cljs$core$IFn$_invoke$arity$3 = G__9207__3;
  return G__9207;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9185) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9185)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9208 = meta;
      var G__9209 = v.v;
      var G__9210 = v.start + start;
      var G__9211 = v.start + end;
      var G__9212 = __hash;
      meta = G__9208;
      v = G__9209;
      start = G__9210;
      end = G__9211;
      __hash = G__9212;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9219 = {};
    return obj9219;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9227 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__9228 = level - 5;
        node = G__9227;
        level = G__9228;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9232 = null;
  var G__9232__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9232__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9232 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9232__2.call(this, self__, k);
      case 3:
        return G__9232__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9232.cljs$core$IFn$_invoke$arity$2 = G__9232__2;
  G__9232.cljs$core$IFn$_invoke$arity$3 = G__9232__3;
  return G__9232;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9229) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9229)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3758__auto__ = self__.front;
    if (cljs.core.truth_(or__3758__auto__)) {
      return or__3758__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3758__auto__ = self__.rear;
      if (cljs.core.truth_(or__3758__auto__)) {
        return or__3758__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9233 = i + incr;
        i = G__9233;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9234 = i + 1;
      var G__9235 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__9234;
      out = G__9235;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9239 = {};
    return obj9239;
  }();
  var l = ks.length;
  var i_9240 = 0;
  while (true) {
    if (i_9240 < l) {
      var k_9241 = ks[i_9240];
      new_obj[k_9241] = obj[k_9241];
      var G__9242 = i_9240 + 1;
      i_9240 = G__9242;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3746__auto__ = function() {
      var G__9246 = k;
      return goog.isString(G__9246);
    }();
    if (cljs.core.truth_(and__3746__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3746__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__9247 = init__$1;
        var G__9248 = k;
        var G__9249 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9247, G__9248, G__9249) : f.call(null, G__9247, G__9248, G__9249);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9250 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9250) : cljs.core.deref.call(null, G__9250);
      } else {
        var G__9256 = cljs.core.rest(keys__$1);
        var G__9257 = init__$2;
        keys__$1 = G__9256;
        init__$1 = G__9257;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3746__auto__ = function() {
      var G__9252 = k;
      return goog.isString(G__9252);
    }();
    if (cljs.core.truth_(and__3746__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3746__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__9253 = k;
    return goog.isString(G__9253);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3746__auto__ = function() {
      var G__9255 = k;
      return goog.isString(G__9255);
    }();
    if (cljs.core.truth_(and__3746__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3746__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__9243_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9243_SHARP_, self__.strobj[p1__9243_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9258 = null;
  var G__9258__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9258__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9258 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9258__2.call(this, self__, k);
      case 3:
        return G__9258__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9258.cljs$core$IFn$_invoke$arity$2 = G__9258__2;
  G__9258.cljs$core$IFn$_invoke$arity$3 = G__9258__3;
  return G__9258;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9244) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9244)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9260 = {};
  return obj9260;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__9261 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9261, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9261, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__9262 = i + 2;
        i = G__9262;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__9263 = i + 2;
        i = G__9263;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__9264 = i + 2;
        i = G__9264;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__9265 = i + 2;
        i = G__9265;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__9266 = i + 2;
        i = G__9266;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3758__auto__ = function() {
        var G__9270 = k;
        return goog.isString(G__9270);
      }();
      if (cljs.core.truth_(or__3758__auto__)) {
        return or__3758__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9271 = 0;
  while (true) {
    if (i_9271 < l) {
      narr[i_9271] = arr[i_9271];
      var G__9272 = i_9271 + 1;
      i_9271 = G__9272;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9274 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9274) : cljs.core.keys.call(null, G__9274);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9275 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9275) : cljs.core.vals.call(null, G__9275);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9276 = cljs.core.seq(coll);
  var chunk__9277 = null;
  var count__9278 = 0;
  var i__9279 = 0;
  while (true) {
    if (i__9279 < count__9278) {
      var vec__9280 = chunk__9277.cljs$core$IIndexed$_nth$arity$2(null, i__9279);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9280, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9280, 1, null);
      var G__9281_9294 = v;
      var G__9282_9295 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9281_9294, G__9282_9295) : f.call(null, G__9281_9294, G__9282_9295);
      var G__9296 = seq__9276;
      var G__9297 = chunk__9277;
      var G__9298 = count__9278;
      var G__9299 = i__9279 + 1;
      seq__9276 = G__9296;
      chunk__9277 = G__9297;
      count__9278 = G__9298;
      i__9279 = G__9299;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9276);
      if (temp__4126__auto__) {
        var seq__9276__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9276__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__9276__$1);
          var G__9300 = cljs.core.chunk_rest(seq__9276__$1);
          var G__9301 = c__4545__auto__;
          var G__9302 = cljs.core.count(c__4545__auto__);
          var G__9303 = 0;
          seq__9276 = G__9300;
          chunk__9277 = G__9301;
          count__9278 = G__9302;
          i__9279 = G__9303;
          continue;
        } else {
          var vec__9283 = cljs.core.first(seq__9276__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9283, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9283, 1, null);
          var G__9284_9304 = v;
          var G__9285_9305 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9284_9304, G__9285_9305) : f.call(null, G__9284_9304, G__9285_9305);
          var G__9306 = cljs.core.next(seq__9276__$1);
          var G__9307 = null;
          var G__9308 = 0;
          var G__9309 = 0;
          seq__9276 = G__9306;
          chunk__9277 = G__9307;
          count__9278 = G__9308;
          i__9279 = G__9309;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__9286 = init__$1;
        var G__9287 = self__.arr[i];
        var G__9288 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9286, G__9287, G__9288) : f.call(null, G__9286, G__9287, G__9288);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9289 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9289) : cljs.core.deref.call(null, G__9289);
      } else {
        var G__9310 = i + 2;
        var G__9311 = init__$2;
        i = G__9310;
        init__$1 = G__9311;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__9290 = other;
    if (G__9290) {
      var bit__4432__auto__ = G__9290.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4432__auto__ || G__9290.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__9312 = i + 2;
              i = G__9312;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9292 = {};
    return obj9292;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__9313 = s + 2;
            var G__9314 = d;
            s = G__9313;
            d = G__9314;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__9315 = s + 2;
            var G__9316 = d + 2;
            s = G__9315;
            d = G__9316;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__9293 = cljs.core.aclone(self__.arr);
        G__9293[idx + 1] = v;
        return G__9293;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9317 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9318 = cljs.core.next(es);
          ret = G__9317;
          es = G__9318;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9319 = null;
  var G__9319__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9319__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9319 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9319__2.call(this, self__, k);
      case 3:
        return G__9319__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9319.cljs$core$IFn$_invoke$arity$2 = G__9319__2;
  G__9319.cljs$core$IFn$_invoke$arity$3 = G__9319__3;
  return G__9319;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9273) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9273)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9320 = i + 2;
        var G__9321 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__9320;
        ret = G__9321;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9322_9330 = self__.arr;
      G__9322_9330.pop();
      G__9322_9330.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9323 = self__.len;
          var G__9324 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9323, G__9324) : cljs.core.array__GT_transient_hash_map.call(null, G__9323, G__9324);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9325 = o;
      if (G__9325) {
        var bit__4439__auto__ = G__9325.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4439__auto__ || G__9325.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9325.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9325);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9325);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__9326 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9326) : cljs.core.key.call(null, G__9326);
      }(), function() {
        var G__9327 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9327) : cljs.core.val.call(null, G__9327);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9331 = cljs.core.next(es);
          var G__9332 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__9328 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9328) : cljs.core.key.call(null, G__9328);
          }(), function() {
            var G__9329 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9329) : cljs.core.val.call(null, G__9329);
          }());
          es = G__9331;
          tcoll__$2 = G__9332;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9333 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__9334 = i + 2;
      out = G__9333;
      i = G__9334;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9337 = cljs.core.aclone(arr);
    G__9337[i] = a;
    return G__9337;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9338 = cljs.core.aclone(arr);
    G__9338[i] = a;
    G__9338[j] = b;
    return G__9338;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__9343 = init__$1;
          var G__9344 = k;
          var G__9345 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9343, G__9344, G__9345) : f.call(null, G__9343, G__9344, G__9345);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9346 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9346) : cljs.core.deref.call(null, G__9346);
      } else {
        var G__9347 = i + 2;
        var G__9348 = init__$2;
        i = G__9347;
        init__$1 = G__9348;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9349 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9349) : cljs.core.create_inode_seq.call(null, G__9349);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9363 = 0;
        var j_9364 = 0;
        while (true) {
          if (i_9363 < 32) {
            if ((self__.bitmap >>> i_9363 & 1) === 0) {
              var G__9365 = i_9363 + 1;
              var G__9366 = j_9364;
              i_9363 = G__9365;
              j_9364 = G__9366;
              continue;
            } else {
              nodes[i_9363] = !(self__.arr[j_9364] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_9364]), self__.arr[j_9364], self__.arr[j_9364 + 1], added_leaf_QMARK_) : self__.arr[j_9364 + 1];
              var G__9367 = i_9363 + 1;
              var G__9368 = j_9364 + 2;
              i_9363 = G__9367;
              j_9364 = G__9368;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__9350 = edit__$1;
          var G__9351 = shift + 5;
          var G__9352 = key_or_nil;
          var G__9353 = val_or_node;
          var G__9354 = hash;
          var G__9355 = key;
          var G__9356 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9350, G__9351, G__9352, G__9353, G__9354, G__9355, G__9356) : cljs.core.create_node.call(null, G__9350, G__9351, G__9352, G__9353, G__9354, G__9355, G__9356);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9369 = 0;
      var j_9370 = 0;
      while (true) {
        if (i_9369 < 32) {
          if ((self__.bitmap >>> i_9369 & 1) === 0) {
            var G__9371 = i_9369 + 1;
            var G__9372 = j_9370;
            i_9369 = G__9371;
            j_9370 = G__9372;
            continue;
          } else {
            nodes[i_9369] = !(self__.arr[j_9370] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_9370]), self__.arr[j_9370], self__.arr[j_9370 + 1], added_leaf_QMARK_) : self__.arr[j_9370 + 1];
            var G__9373 = i_9369 + 1;
            var G__9374 = j_9370 + 2;
            i_9369 = G__9373;
            j_9370 = G__9374;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__9357 = shift + 5;
          var G__9358 = key_or_nil;
          var G__9359 = val_or_node;
          var G__9360 = hash;
          var G__9361 = key;
          var G__9362 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9357, G__9358, G__9359, G__9360, G__9361, G__9362) : cljs.core.create_node.call(null, G__9357, G__9358, G__9359, G__9360, G__9361, G__9362);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9375 = i + 1;
        var G__9376 = j + 2;
        var G__9377 = bitmap | 1 << i;
        i = G__9375;
        j = G__9376;
        bitmap = G__9377;
        continue;
      } else {
        var G__9378 = i + 1;
        var G__9379 = j;
        var G__9380 = bitmap;
        i = G__9378;
        j = G__9379;
        bitmap = G__9380;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9381 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9381) : cljs.core.create_array_node_seq.call(null, G__9381);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__9382 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9382) : cljs.core.deref.call(null, G__9382);
        } else {
          var G__9383 = i + 1;
          var G__9384 = init__$2;
          i = G__9383;
          init__$1 = G__9384;
          continue;
        }
      } else {
        var G__9385 = i + 1;
        var G__9386 = init__$1;
        i = G__9385;
        init__$1 = G__9386;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__9387 = i + 2;
        i = G__9387;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9388 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9388) : cljs.core.create_inode_seq.call(null, G__9388);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__9389 = self__.nodes;
    var G__9390 = self__.i + 2;
    var G__9391 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9389, G__9390, G__9391) : cljs.core.create_inode_seq.call(null, G__9389, G__9390, G__9391);
  } else {
    var G__9392 = self__.nodes;
    var G__9393 = self__.i;
    var G__9394 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9392, G__9393, G__9394) : cljs.core.create_inode_seq.call(null, G__9392, G__9393, G__9394);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__9398 = j + 2;
                j = G__9398;
                continue;
              }
            } else {
              var G__9399 = j + 2;
              j = G__9399;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9400 = null;
  var G__9401 = self__.nodes;
  var G__9402 = self__.i;
  var G__9403 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9400, G__9401, G__9402, G__9403) : cljs.core.create_array_node_seq.call(null, G__9400, G__9401, G__9402, G__9403);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__9408 = j + 1;
              j = G__9408;
              continue;
            }
          } else {
            var G__9409 = j + 1;
            j = G__9409;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9411 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9411) : cljs.core.keys.call(null, G__9411);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9412 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9412) : cljs.core.vals.call(null, G__9412);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9413 = cljs.core.seq(coll);
  var chunk__9414 = null;
  var count__9415 = 0;
  var i__9416 = 0;
  while (true) {
    if (i__9416 < count__9415) {
      var vec__9417 = chunk__9414.cljs$core$IIndexed$_nth$arity$2(null, i__9416);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9417, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9417, 1, null);
      var G__9418_9429 = v;
      var G__9419_9430 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9418_9429, G__9419_9430) : f.call(null, G__9418_9429, G__9419_9430);
      var G__9431 = seq__9413;
      var G__9432 = chunk__9414;
      var G__9433 = count__9415;
      var G__9434 = i__9416 + 1;
      seq__9413 = G__9431;
      chunk__9414 = G__9432;
      count__9415 = G__9433;
      i__9416 = G__9434;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9413);
      if (temp__4126__auto__) {
        var seq__9413__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9413__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__9413__$1);
          var G__9435 = cljs.core.chunk_rest(seq__9413__$1);
          var G__9436 = c__4545__auto__;
          var G__9437 = cljs.core.count(c__4545__auto__);
          var G__9438 = 0;
          seq__9413 = G__9435;
          chunk__9414 = G__9436;
          count__9415 = G__9437;
          i__9416 = G__9438;
          continue;
        } else {
          var vec__9420 = cljs.core.first(seq__9413__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9420, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9420, 1, null);
          var G__9421_9439 = v;
          var G__9422_9440 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9421_9439, G__9422_9440) : f.call(null, G__9421_9439, G__9422_9440);
          var G__9441 = cljs.core.next(seq__9413__$1);
          var G__9442 = null;
          var G__9443 = 0;
          var G__9444 = 0;
          seq__9413 = G__9441;
          chunk__9414 = G__9442;
          count__9415 = G__9443;
          i__9416 = G__9444;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__9423 = init;
    var G__9424 = null;
    var G__9425 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9423, G__9424, G__9425) : f.call(null, G__9423, G__9424, G__9425);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9426 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9426) : cljs.core.deref.call(null, G__9426);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9428 = {};
    return obj9428;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9445 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9446 = cljs.core.next(es);
          ret = G__9445;
          es = G__9446;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9447 = null;
  var G__9447__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9447__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9447 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9447__2.call(this, self__, k);
      case 3:
        return G__9447__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9447.cljs$core$IFn$_invoke$arity$2 = G__9447__2;
  G__9447.cljs$core$IFn$_invoke$arity$3 = G__9447__3;
  return G__9447;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9410) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9410)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9448 = i + 2;
      var G__9449 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__9448;
      ret = G__9449;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9450 = i + 1;
      var G__9451 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__9450;
      out = G__9451;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9452 = o;
      if (G__9452) {
        var bit__4439__auto__ = G__9452.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4439__auto__ || G__9452.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9452.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9452);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9452);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__9453 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9453) : cljs.core.key.call(null, G__9453);
      }(), function() {
        var G__9454 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9454) : cljs.core.val.call(null, G__9454);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9457 = cljs.core.next(es);
          var G__9458 = tcoll__$1.assoc_BANG_(function() {
            var G__9455 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9455) : cljs.core.key.call(null, G__9455);
          }(), function() {
            var G__9456 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9456) : cljs.core.val.call(null, G__9456);
          }());
          es = G__9457;
          tcoll__$1 = G__9458;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9459 = ascending_QMARK_ ? t.left : t.right;
      var G__9460 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__9459;
      stack__$1 = G__9460;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9473 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9473) : cljs.core.deref.call(null, G__9473);
  } else {
    var init__$2 = function() {
      var G__9474 = init__$1;
      var G__9475 = node.key;
      var G__9476 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9474, G__9475, G__9476) : f.call(null, G__9474, G__9475, G__9476);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__9477 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9477) : cljs.core.deref.call(null, G__9477);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__9478 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9478) : cljs.core.deref.call(null, G__9478);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9480 = null;
  var G__9480__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9480__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9480 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9480__2.call(this, self__, k);
      case 3:
        return G__9480__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9480.cljs$core$IFn$_invoke$arity$2 = G__9480__2;
  G__9480.cljs$core$IFn$_invoke$arity$3 = G__9480__3;
  return G__9480;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9479) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9479)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9482 = null;
  var G__9482__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9482__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9482 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9482__2.call(this, self__, k);
      case 3:
        return G__9482__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9482.cljs$core$IFn$_invoke$arity$2 = G__9482__2;
  G__9482.cljs$core$IFn$_invoke$arity$3 = G__9482__3;
  return G__9482;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9481) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9481)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__9495 = k;
      var G__9496 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9495, G__9496) : comp.call(null, G__9495, G__9496);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__9515 = k;
      var G__9516 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9515, G__9516) : comp.call(null, G__9515, G__9516);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__9527 = k;
    var G__9528 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9527, G__9528) : comp.call(null, G__9527, G__9528);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9530 = cljs.core.seq(coll);
  var chunk__9531 = null;
  var count__9532 = 0;
  var i__9533 = 0;
  while (true) {
    if (i__9533 < count__9532) {
      var vec__9534 = chunk__9531.cljs$core$IIndexed$_nth$arity$2(null, i__9533);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9534, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9534, 1, null);
      var G__9535_9547 = v;
      var G__9536_9548 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9535_9547, G__9536_9548) : f.call(null, G__9535_9547, G__9536_9548);
      var G__9549 = seq__9530;
      var G__9550 = chunk__9531;
      var G__9551 = count__9532;
      var G__9552 = i__9533 + 1;
      seq__9530 = G__9549;
      chunk__9531 = G__9550;
      count__9532 = G__9551;
      i__9533 = G__9552;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9530);
      if (temp__4126__auto__) {
        var seq__9530__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9530__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__9530__$1);
          var G__9553 = cljs.core.chunk_rest(seq__9530__$1);
          var G__9554 = c__4545__auto__;
          var G__9555 = cljs.core.count(c__4545__auto__);
          var G__9556 = 0;
          seq__9530 = G__9553;
          chunk__9531 = G__9554;
          count__9532 = G__9555;
          i__9533 = G__9556;
          continue;
        } else {
          var vec__9537 = cljs.core.first(seq__9530__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9537, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9537, 1, null);
          var G__9538_9557 = v;
          var G__9539_9558 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9538_9557, G__9539_9558) : f.call(null, G__9538_9557, G__9539_9558);
          var G__9559 = cljs.core.next(seq__9530__$1);
          var G__9560 = null;
          var G__9561 = 0;
          var G__9562 = 0;
          seq__9530 = G__9559;
          chunk__9531 = G__9560;
          count__9532 = G__9561;
          i__9533 = G__9562;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9540 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9540) : cljs.core.keys.call(null, G__9540);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9541 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9541) : cljs.core.vals.call(null, G__9541);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__9542 = k;
        var G__9543 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9542, G__9543) : self__.comp.call(null, G__9542, G__9543);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9563 = t.left;
          t = G__9563;
          continue;
        } else {
          var G__9564 = t.right;
          t = G__9564;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9565 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9566 = cljs.core.next(es);
          ret = G__9565;
          es = G__9566;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9567 = null;
  var G__9567__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9567__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9567 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9567__2.call(this, self__, k);
      case 3:
        return G__9567__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9567.cljs$core$IFn$_invoke$arity$2 = G__9567__2;
  G__9567.cljs$core$IFn$_invoke$arity$3 = G__9567__3;
  return G__9567;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9529) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9529)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__9544 = k;
          var G__9545 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9544, G__9545) : self__.comp.call(null, G__9544, G__9545);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9568 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9569 = t.left;
              stack = G__9568;
              t = G__9569;
              continue;
            } else {
              var G__9570 = stack;
              var G__9571 = t.right;
              stack = G__9570;
              t = G__9571;
              continue;
            }
          } else {
            if (c > 0) {
              var G__9572 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9573 = t.right;
              stack = G__9572;
              t = G__9573;
              continue;
            } else {
              var G__9574 = stack;
              var G__9575 = t.left;
              stack = G__9574;
              t = G__9575;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__9546 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9546) : cljs.core.key.call(null, G__9546);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__9576 = cljs.core.nnext(in$);
        var G__9577 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9576;
        out = G__9577;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9578__i = 0, G__9578__a = new Array(arguments.length - 0);
      while (G__9578__i < G__9578__a.length) {
        G__9578__a[G__9578__i] = arguments[G__9578__i + 0];
        ++G__9578__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9578__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__9579) {
    var keyvals = cljs.core.seq(arglist__9579);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9580__i = 0, G__9580__a = new Array(arguments.length - 0);
      while (G__9580__i < G__9580__a.length) {
        G__9580__a[G__9580__i] = arguments[G__9580__i + 0];
        ++G__9580__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9580__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__9581) {
    var keyvals = cljs.core.seq(arglist__9581);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj9585 = {};
      return obj9585;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__9586 = cljs.core.nnext(kvs);
        kvs = G__9586;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9587__i = 0, G__9587__a = new Array(arguments.length - 0);
      while (G__9587__i < G__9587__a.length) {
        G__9587__a[G__9587__i] = arguments[G__9587__i + 0];
        ++G__9587__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9587__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__9588) {
    var keyvals = cljs.core.seq(arglist__9588);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__9589 = cljs.core.nnext(in$);
        var G__9590 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9589;
        out = G__9590;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9591__i = 0, G__9591__a = new Array(arguments.length - 0);
      while (G__9591__i < G__9591__a.length) {
        G__9591__a[G__9591__i] = arguments[G__9591__i + 0];
        ++G__9591__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9591__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__9592) {
    var keyvals = cljs.core.seq(arglist__9592);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__9593 = cljs.core.nnext(in$);
        var G__9594 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9593;
        out = G__9594;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__9595__i = 0, G__9595__a = new Array(arguments.length - 1);
      while (G__9595__i < G__9595__a.length) {
        G__9595__a[G__9595__i] = arguments[G__9595__i + 1];
        ++G__9595__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9595__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__9596) {
    var comparator = cljs.core.first(arglist__9596);
    var keyvals = cljs.core.rest(arglist__9596);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9597 = self__.mseq;
    if (G__9597) {
      var bit__4439__auto__ = G__9597.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4439__auto__ || G__9597.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9597.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9597);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9597);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9598 = self__.mseq;
    if (G__9598) {
      var bit__4439__auto__ = G__9598.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4439__auto__ || G__9598.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9598.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9598);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9598);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9599 = self__.mseq;
    if (G__9599) {
      var bit__4439__auto__ = G__9599.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4439__auto__ || G__9599.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9599.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9599);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9599);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9600 = self__.mseq;
    if (G__9600) {
      var bit__4439__auto__ = G__9600.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4439__auto__ || G__9600.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9600.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9600);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9600);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__9601_SHARP_, p2__9602_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3758__auto__ = p1__9601_SHARP_;
          if (cljs.core.truth_(or__3758__auto__)) {
            return or__3758__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__9602_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__9603__i = 0, G__9603__a = new Array(arguments.length - 0);
      while (G__9603__i < G__9603__a.length) {
        G__9603__a[G__9603__i] = arguments[G__9603__i + 0];
        ++G__9603__i;
      }
      maps = new cljs.core.IndexedSeq(G__9603__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__9604) {
    var maps = cljs.core.seq(arglist__9604);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__9607 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__9608 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9607, G__9608) : f.call(null, G__9607, G__9608);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3758__auto__ = m1;
            if (cljs.core.truth_(or__3758__auto__)) {
              return or__3758__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__9609__i = 0, G__9609__a = new Array(arguments.length - 1);
      while (G__9609__i < G__9609__a.length) {
        G__9609__a[G__9609__i] = arguments[G__9609__i + 1];
        ++G__9609__i;
      }
      maps = new cljs.core.IndexedSeq(G__9609__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__9610) {
    var f = cljs.core.first(arglist__9610);
    var maps = cljs.core.rest(arglist__9610);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__9611 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__9612 = cljs.core.next(keys);
      ret = G__9611;
      keys = G__9612;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9615 = cljs.core.seq(coll);
  var chunk__9616 = null;
  var count__9617 = 0;
  var i__9618 = 0;
  while (true) {
    if (i__9618 < count__9617) {
      var vec__9619 = chunk__9616.cljs$core$IIndexed$_nth$arity$2(null, i__9618);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9619, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9619, 1, null);
      var G__9620_9625 = v;
      var G__9621_9626 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9620_9625, G__9621_9626) : f.call(null, G__9620_9625, G__9621_9626);
      var G__9627 = seq__9615;
      var G__9628 = chunk__9616;
      var G__9629 = count__9617;
      var G__9630 = i__9618 + 1;
      seq__9615 = G__9627;
      chunk__9616 = G__9628;
      count__9617 = G__9629;
      i__9618 = G__9630;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9615);
      if (temp__4126__auto__) {
        var seq__9615__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9615__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__9615__$1);
          var G__9631 = cljs.core.chunk_rest(seq__9615__$1);
          var G__9632 = c__4545__auto__;
          var G__9633 = cljs.core.count(c__4545__auto__);
          var G__9634 = 0;
          seq__9615 = G__9631;
          chunk__9616 = G__9632;
          count__9617 = G__9633;
          i__9618 = G__9634;
          continue;
        } else {
          var vec__9622 = cljs.core.first(seq__9615__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9622, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9622, 1, null);
          var G__9623_9635 = v;
          var G__9624_9636 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9623_9635, G__9624_9636) : f.call(null, G__9623_9635, G__9624_9636);
          var G__9637 = cljs.core.next(seq__9615__$1);
          var G__9638 = null;
          var G__9639 = 0;
          var G__9640 = 0;
          seq__9615 = G__9637;
          chunk__9616 = G__9638;
          count__9617 = G__9639;
          i__9618 = G__9640;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9613_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9613_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9641 = null;
  var G__9641__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9641__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9641 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9641__2.call(this, self__, k);
      case 3:
        return G__9641__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9641.cljs$core$IFn$_invoke$arity$2 = G__9641__2;
  G__9641.cljs$core$IFn$_invoke$arity$3 = G__9641__3;
  return G__9641;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9614) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9614)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9642 = i + 1;
        var G__9643 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__9642;
        out = G__9643;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__9644 = i + 1;
        var G__9645 = cljs.core._conj_BANG_(out, items[i]);
        i = G__9644;
        out = G__9645;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9647 = null;
  var G__9647__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__9647__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__9647 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9647__2.call(this, self__, k);
      case 3:
        return G__9647__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9647.cljs$core$IFn$_invoke$arity$2 = G__9647__2;
  G__9647.cljs$core$IFn$_invoke$arity$3 = G__9647__3;
  return G__9647;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args9646) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9646)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9650 = cljs.core.seq(coll);
  var chunk__9651 = null;
  var count__9652 = 0;
  var i__9653 = 0;
  while (true) {
    if (i__9653 < count__9652) {
      var vec__9654 = chunk__9651.cljs$core$IIndexed$_nth$arity$2(null, i__9653);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9654, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9654, 1, null);
      var G__9655_9660 = v;
      var G__9656_9661 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9655_9660, G__9656_9661) : f.call(null, G__9655_9660, G__9656_9661);
      var G__9662 = seq__9650;
      var G__9663 = chunk__9651;
      var G__9664 = count__9652;
      var G__9665 = i__9653 + 1;
      seq__9650 = G__9662;
      chunk__9651 = G__9663;
      count__9652 = G__9664;
      i__9653 = G__9665;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9650);
      if (temp__4126__auto__) {
        var seq__9650__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9650__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__9650__$1);
          var G__9666 = cljs.core.chunk_rest(seq__9650__$1);
          var G__9667 = c__4545__auto__;
          var G__9668 = cljs.core.count(c__4545__auto__);
          var G__9669 = 0;
          seq__9650 = G__9666;
          chunk__9651 = G__9667;
          count__9652 = G__9668;
          i__9653 = G__9669;
          continue;
        } else {
          var vec__9657 = cljs.core.first(seq__9650__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9657, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9657, 1, null);
          var G__9658_9670 = v;
          var G__9659_9671 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9658_9670, G__9659_9671) : f.call(null, G__9658_9670, G__9659_9671);
          var G__9672 = cljs.core.next(seq__9650__$1);
          var G__9673 = null;
          var G__9674 = 0;
          var G__9675 = 0;
          seq__9650 = G__9672;
          chunk__9651 = G__9673;
          count__9652 = G__9674;
          i__9653 = G__9675;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9648_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9648_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9676 = null;
  var G__9676__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9676__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9676 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9676__2.call(this, self__, k);
      case 3:
        return G__9676__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9676.cljs$core$IFn$_invoke$arity$2 = G__9676__2;
  G__9676.cljs$core$IFn$_invoke$arity$3 = G__9676__3;
  return G__9676;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args9649) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9649)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4639__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4639__auto__.length) {
        var G__9677 = i + 1;
        var G__9678 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__9677;
        res = G__9678;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__9679 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__9680 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__9679;
          out = G__9680;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__9681__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__9681 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__9682__i = 0, G__9682__a = new Array(arguments.length - 0);
        while (G__9682__i < G__9682__a.length) {
          G__9682__a[G__9682__i] = arguments[G__9682__i + 0];
          ++G__9682__i;
        }
        keys = new cljs.core.IndexedSeq(G__9682__a, 0);
      }
      return G__9681__delegate.call(this, keys);
    };
    G__9681.cljs$lang$maxFixedArity = 0;
    G__9681.cljs$lang$applyTo = function(arglist__9683) {
      var keys = cljs.core.seq(arglist__9683);
      return G__9681__delegate(keys);
    };
    G__9681.cljs$core$IFn$_invoke$arity$variadic = G__9681__delegate;
    return G__9681;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__9684 = null;
        if (arguments.length > 0) {
          var G__9685__i = 0, G__9685__a = new Array(arguments.length - 0);
          while (G__9685__i < G__9685__a.length) {
            G__9685__a[G__9685__i] = arguments[G__9685__i + 0];
            ++G__9685__i;
          }
          G__9684 = new cljs.core.IndexedSeq(G__9685__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9684);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__9686__i = 0, G__9686__a = new Array(arguments.length - 0);
      while (G__9686__i < G__9686__a.length) {
        G__9686__a[G__9686__i] = arguments[G__9686__i + 0];
        ++G__9686__i;
      }
      keys = new cljs.core.IndexedSeq(G__9686__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__9687) {
    var keys = cljs.core.seq(arglist__9687);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__9688__i = 0, G__9688__a = new Array(arguments.length - 1);
      while (G__9688__i < G__9688__a.length) {
        G__9688__a[G__9688__i] = arguments[G__9688__i + 1];
        ++G__9688__i;
      }
      keys = new cljs.core.IndexedSeq(G__9688__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__9689) {
    var comparator = cljs.core.first(arglist__9689);
    var keys = cljs.core.rest(arglist__9689);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__9690_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__9690_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__9690_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9691_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__9691_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__9691_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__9712 = null;
          var G__9712__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9712__1 = function(result) {
            var G__9702 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9702) : rf.call(null, G__9702);
          };
          var G__9712__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__9703 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9703) : cljs.core.deref.call(null, G__9703);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__9704 = result;
              var G__9705 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9704, G__9705) : rf.call(null, G__9704, G__9705);
            }
          };
          G__9712 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9712__0.call(this);
              case 1:
                return G__9712__1.call(this, result);
              case 2:
                return G__9712__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9712.cljs$core$IFn$_invoke$arity$0 = G__9712__0;
          G__9712.cljs$core$IFn$_invoke$arity$1 = G__9712__1;
          G__9712.cljs$core$IFn$_invoke$arity$2 = G__9712__2;
          return G__9712;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__9710, seen__$1) {
          while (true) {
            var vec__9711 = p__9710;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9711, 0, null);
            var xs__$1 = vec__9711;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__9713 = cljs.core.rest(s);
                var G__9714 = seen__$1;
                p__9710 = G__9713;
                seen__$1 = G__9714;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__9715 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__9716 = cljs.core.next(s__$1);
      ret = G__9715;
      s__$1 = G__9716;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__9718 = x;
    if (G__9718) {
      var bit__4432__auto__ = G__9718.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4432__auto__ || G__9718.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__9719 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__9720 = cljs.core.next(ks);
      var G__9721 = cljs.core.next(vs);
      map = G__9719;
      ks = G__9720;
      vs = G__9721;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__9732 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9732) : k.call(null, G__9732);
    }() > function() {
      var G__9733 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9733) : k.call(null, G__9733);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__9734__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9722_SHARP_, p2__9723_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__9722_SHARP_, p2__9723_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9734 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9735__i = 0, G__9735__a = new Array(arguments.length - 3);
        while (G__9735__i < G__9735__a.length) {
          G__9735__a[G__9735__i] = arguments[G__9735__i + 3];
          ++G__9735__i;
        }
        more = new cljs.core.IndexedSeq(G__9735__a, 0);
      }
      return G__9734__delegate.call(this, k, x, y, more);
    };
    G__9734.cljs$lang$maxFixedArity = 3;
    G__9734.cljs$lang$applyTo = function(arglist__9736) {
      var k = cljs.core.first(arglist__9736);
      arglist__9736 = cljs.core.next(arglist__9736);
      var x = cljs.core.first(arglist__9736);
      arglist__9736 = cljs.core.next(arglist__9736);
      var y = cljs.core.first(arglist__9736);
      var more = cljs.core.rest(arglist__9736);
      return G__9734__delegate(k, x, y, more);
    };
    G__9734.cljs$core$IFn$_invoke$arity$variadic = G__9734__delegate;
    return G__9734;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__9737 = null;
        if (arguments.length > 3) {
          var G__9738__i = 0, G__9738__a = new Array(arguments.length - 3);
          while (G__9738__i < G__9738__a.length) {
            G__9738__a[G__9738__i] = arguments[G__9738__i + 3];
            ++G__9738__i;
          }
          G__9737 = new cljs.core.IndexedSeq(G__9738__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9737);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__9749 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9749) : k.call(null, G__9749);
    }() < function() {
      var G__9750 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9750) : k.call(null, G__9750);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__9751__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9739_SHARP_, p2__9740_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__9739_SHARP_, p2__9740_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9751 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9752__i = 0, G__9752__a = new Array(arguments.length - 3);
        while (G__9752__i < G__9752__a.length) {
          G__9752__a[G__9752__i] = arguments[G__9752__i + 3];
          ++G__9752__i;
        }
        more = new cljs.core.IndexedSeq(G__9752__a, 0);
      }
      return G__9751__delegate.call(this, k, x, y, more);
    };
    G__9751.cljs$lang$maxFixedArity = 3;
    G__9751.cljs$lang$applyTo = function(arglist__9753) {
      var k = cljs.core.first(arglist__9753);
      arglist__9753 = cljs.core.next(arglist__9753);
      var x = cljs.core.first(arglist__9753);
      arglist__9753 = cljs.core.next(arglist__9753);
      var y = cljs.core.first(arglist__9753);
      var more = cljs.core.rest(arglist__9753);
      return G__9751__delegate(k, x, y, more);
    };
    G__9751.cljs$core$IFn$_invoke$arity$variadic = G__9751__delegate;
    return G__9751;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__9754 = null;
        if (arguments.length > 3) {
          var G__9755__i = 0, G__9755__a = new Array(arguments.length - 3);
          while (G__9755__i < G__9755__a.length) {
            G__9755__a[G__9755__i] = arguments[G__9755__i + 3];
            ++G__9755__i;
          }
          G__9754 = new cljs.core.IndexedSeq(G__9755__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9754);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__9772 = null;
          var G__9772__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9772__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9767 = result;
                var G__9768 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9767, G__9768) : rf.call(null, G__9767, G__9768);
              }());
            }();
            var G__9769 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9769) : rf.call(null, G__9769);
          };
          var G__9772__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__9770 = result;
              var G__9771 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9770, G__9771) : rf.call(null, G__9770, G__9771);
            } else {
              return result;
            }
          };
          G__9772 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9772__0.call(this);
              case 1:
                return G__9772__1.call(this, result);
              case 2:
                return G__9772__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9772.cljs$core$IFn$_invoke$arity$0 = G__9772__0;
          G__9772.cljs$core$IFn$_invoke$arity$1 = G__9772__1;
          G__9772.cljs$core$IFn$_invoke$arity$2 = G__9772__2;
          return G__9772;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__9785 = null;
        var G__9785__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9785__1 = function(result) {
          var G__9780 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9780) : rf.call(null, G__9780);
        };
        var G__9785__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__9781 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9781) : pred.call(null, G__9781);
          }())) {
            var G__9782 = result;
            var G__9783 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9782, G__9783) : rf.call(null, G__9782, G__9783);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__9785 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9785__0.call(this);
            case 1:
              return G__9785__1.call(this, result);
            case 2:
              return G__9785__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9785.cljs$core$IFn$_invoke$arity$0 = G__9785__0;
        G__9785.cljs$core$IFn$_invoke$arity$1 = G__9785__1;
        G__9785.cljs$core$IFn$_invoke$arity$2 = G__9785__2;
        return G__9785;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__9784 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9784) : pred.call(null, G__9784);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__9790 = function() {
      var G__9792 = cljs.core._entry_key(sc, e);
      var G__9793 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9792, G__9793) : comp.call(null, G__9792, G__9793);
    }();
    var G__9791 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9790, G__9791) : test.call(null, G__9790, G__9791);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9797 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9797, 0, null);
        var s = vec__9797;
        if (cljs.core.truth_(function() {
          var G__9798 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9798) : include.call(null, G__9798);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9799 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9799, 0, null);
      var s = vec__9799;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9803 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9803, 0, null);
        var s = vec__9803;
        if (cljs.core.truth_(function() {
          var G__9804 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9804) : include.call(null, G__9804);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9805 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9805, 0, null);
      var s = vec__9805;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__9806 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9806) : Math.ceil.call(null, G__9806);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4179__auto__ = self__.__hash;
  if (!(h__4179__auto__ == null)) {
    return h__4179__auto__;
  } else {
    var h__4179__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4179__auto____$1;
    return h__4179__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__9807 = ret;
        var G__9808 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9807, G__9808) : f.call(null, G__9807, G__9808);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__9809 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9809) : cljs.core.deref.call(null, G__9809);
      } else {
        var G__9810 = i + self__.step;
        var G__9811 = ret__$1;
        i = G__9810;
        ret = G__9811;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__9829 = null;
          var G__9829__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9829__1 = function(result) {
            var G__9826 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9826) : rf.call(null, G__9826);
          };
          var G__9829__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__9827 = result;
              var G__9828 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9827, G__9828) : rf.call(null, G__9827, G__9828);
            } else {
              return result;
            }
          };
          G__9829 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9829__0.call(this);
              case 1:
                return G__9829__1.call(this, result);
              case 2:
                return G__9829__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9829.cljs$core$IFn$_invoke$arity$0 = G__9829__0;
          G__9829.cljs$core$IFn$_invoke$arity$1 = G__9829__1;
          G__9829.cljs$core$IFn$_invoke$arity$2 = G__9829__2;
          return G__9829;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__9851 = null;
          var G__9851__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9851__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9842 = result;
                var G__9843 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9842, G__9843) : rf.call(null, G__9842, G__9843);
              }());
            }();
            var G__9844 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9844) : rf.call(null, G__9844);
          };
          var G__9851__2 = function(result, input) {
            var pval = function() {
              var G__9845 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9845) : cljs.core.deref.call(null, G__9845);
            }();
            var val = function() {
              var G__9846 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9846) : f.call(null, G__9846);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__9847 = result;
                var G__9848 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9847, G__9848) : rf.call(null, G__9847, G__9848);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__9851 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9851__0.call(this);
              case 1:
                return G__9851__1.call(this, result);
              case 2:
                return G__9851__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9851.cljs$core$IFn$_invoke$arity$0 = G__9851__0;
          G__9851.cljs$core$IFn$_invoke$arity$1 = G__9851__1;
          G__9851.cljs$core$IFn$_invoke$arity$2 = G__9851__2;
          return G__9851;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__9849 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9849) : f.call(null, G__9849);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__9830_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__9850 = p1__9830_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9850) : f.call(null, G__9850);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__9860 = init;
          var G__9861 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9860, G__9861) : f.call(null, G__9860, G__9861);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__9956 = null;
      var G__9956__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__9956__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9914 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9914) : f.call(null, G__9914);
        }()], null);
      };
      var G__9956__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9915 = x;
          var G__9916 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9915, G__9916) : f.call(null, G__9915, G__9916);
        }()], null);
      };
      var G__9956__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9917 = x;
          var G__9918 = y;
          var G__9919 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9917, G__9918, G__9919) : f.call(null, G__9917, G__9918, G__9919);
        }()], null);
      };
      var G__9956__4 = function() {
        var G__9957__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__9957 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9958__i = 0, G__9958__a = new Array(arguments.length - 3);
            while (G__9958__i < G__9958__a.length) {
              G__9958__a[G__9958__i] = arguments[G__9958__i + 3];
              ++G__9958__i;
            }
            args = new cljs.core.IndexedSeq(G__9958__a, 0);
          }
          return G__9957__delegate.call(this, x, y, z, args);
        };
        G__9957.cljs$lang$maxFixedArity = 3;
        G__9957.cljs$lang$applyTo = function(arglist__9959) {
          var x = cljs.core.first(arglist__9959);
          arglist__9959 = cljs.core.next(arglist__9959);
          var y = cljs.core.first(arglist__9959);
          arglist__9959 = cljs.core.next(arglist__9959);
          var z = cljs.core.first(arglist__9959);
          var args = cljs.core.rest(arglist__9959);
          return G__9957__delegate(x, y, z, args);
        };
        G__9957.cljs$core$IFn$_invoke$arity$variadic = G__9957__delegate;
        return G__9957;
      }();
      G__9956 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9956__0.call(this);
          case 1:
            return G__9956__1.call(this, x);
          case 2:
            return G__9956__2.call(this, x, y);
          case 3:
            return G__9956__3.call(this, x, y, z);
          default:
            var G__9960 = null;
            if (arguments.length > 3) {
              var G__9961__i = 0, G__9961__a = new Array(arguments.length - 3);
              while (G__9961__i < G__9961__a.length) {
                G__9961__a[G__9961__i] = arguments[G__9961__i + 3];
                ++G__9961__i;
              }
              G__9960 = new cljs.core.IndexedSeq(G__9961__a, 0);
            }
            return G__9956__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9960);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9956.cljs$lang$maxFixedArity = 3;
      G__9956.cljs$lang$applyTo = G__9956__4.cljs$lang$applyTo;
      G__9956.cljs$core$IFn$_invoke$arity$0 = G__9956__0;
      G__9956.cljs$core$IFn$_invoke$arity$1 = G__9956__1;
      G__9956.cljs$core$IFn$_invoke$arity$2 = G__9956__2;
      G__9956.cljs$core$IFn$_invoke$arity$3 = G__9956__3;
      G__9956.cljs$core$IFn$_invoke$arity$variadic = G__9956__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9956;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__9962 = null;
      var G__9962__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__9962__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9920 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9920) : f.call(null, G__9920);
        }(), function() {
          var G__9921 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9921) : g.call(null, G__9921);
        }()], null);
      };
      var G__9962__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9922 = x;
          var G__9923 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9922, G__9923) : f.call(null, G__9922, G__9923);
        }(), function() {
          var G__9924 = x;
          var G__9925 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9924, G__9925) : g.call(null, G__9924, G__9925);
        }()], null);
      };
      var G__9962__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9926 = x;
          var G__9927 = y;
          var G__9928 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9926, G__9927, G__9928) : f.call(null, G__9926, G__9927, G__9928);
        }(), function() {
          var G__9929 = x;
          var G__9930 = y;
          var G__9931 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9929, G__9930, G__9931) : g.call(null, G__9929, G__9930, G__9931);
        }()], null);
      };
      var G__9962__4 = function() {
        var G__9963__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__9963 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9964__i = 0, G__9964__a = new Array(arguments.length - 3);
            while (G__9964__i < G__9964__a.length) {
              G__9964__a[G__9964__i] = arguments[G__9964__i + 3];
              ++G__9964__i;
            }
            args = new cljs.core.IndexedSeq(G__9964__a, 0);
          }
          return G__9963__delegate.call(this, x, y, z, args);
        };
        G__9963.cljs$lang$maxFixedArity = 3;
        G__9963.cljs$lang$applyTo = function(arglist__9965) {
          var x = cljs.core.first(arglist__9965);
          arglist__9965 = cljs.core.next(arglist__9965);
          var y = cljs.core.first(arglist__9965);
          arglist__9965 = cljs.core.next(arglist__9965);
          var z = cljs.core.first(arglist__9965);
          var args = cljs.core.rest(arglist__9965);
          return G__9963__delegate(x, y, z, args);
        };
        G__9963.cljs$core$IFn$_invoke$arity$variadic = G__9963__delegate;
        return G__9963;
      }();
      G__9962 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9962__0.call(this);
          case 1:
            return G__9962__1.call(this, x);
          case 2:
            return G__9962__2.call(this, x, y);
          case 3:
            return G__9962__3.call(this, x, y, z);
          default:
            var G__9966 = null;
            if (arguments.length > 3) {
              var G__9967__i = 0, G__9967__a = new Array(arguments.length - 3);
              while (G__9967__i < G__9967__a.length) {
                G__9967__a[G__9967__i] = arguments[G__9967__i + 3];
                ++G__9967__i;
              }
              G__9966 = new cljs.core.IndexedSeq(G__9967__a, 0);
            }
            return G__9962__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9966);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9962.cljs$lang$maxFixedArity = 3;
      G__9962.cljs$lang$applyTo = G__9962__4.cljs$lang$applyTo;
      G__9962.cljs$core$IFn$_invoke$arity$0 = G__9962__0;
      G__9962.cljs$core$IFn$_invoke$arity$1 = G__9962__1;
      G__9962.cljs$core$IFn$_invoke$arity$2 = G__9962__2;
      G__9962.cljs$core$IFn$_invoke$arity$3 = G__9962__3;
      G__9962.cljs$core$IFn$_invoke$arity$variadic = G__9962__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9962;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__9968 = null;
      var G__9968__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__9968__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9932 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9932) : f.call(null, G__9932);
        }(), function() {
          var G__9933 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9933) : g.call(null, G__9933);
        }(), function() {
          var G__9934 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9934) : h.call(null, G__9934);
        }()], null);
      };
      var G__9968__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9935 = x;
          var G__9936 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9935, G__9936) : f.call(null, G__9935, G__9936);
        }(), function() {
          var G__9937 = x;
          var G__9938 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9937, G__9938) : g.call(null, G__9937, G__9938);
        }(), function() {
          var G__9939 = x;
          var G__9940 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9939, G__9940) : h.call(null, G__9939, G__9940);
        }()], null);
      };
      var G__9968__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9941 = x;
          var G__9942 = y;
          var G__9943 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9941, G__9942, G__9943) : f.call(null, G__9941, G__9942, G__9943);
        }(), function() {
          var G__9944 = x;
          var G__9945 = y;
          var G__9946 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9944, G__9945, G__9946) : g.call(null, G__9944, G__9945, G__9946);
        }(), function() {
          var G__9947 = x;
          var G__9948 = y;
          var G__9949 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9947, G__9948, G__9949) : h.call(null, G__9947, G__9948, G__9949);
        }()], null);
      };
      var G__9968__4 = function() {
        var G__9969__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__9969 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9970__i = 0, G__9970__a = new Array(arguments.length - 3);
            while (G__9970__i < G__9970__a.length) {
              G__9970__a[G__9970__i] = arguments[G__9970__i + 3];
              ++G__9970__i;
            }
            args = new cljs.core.IndexedSeq(G__9970__a, 0);
          }
          return G__9969__delegate.call(this, x, y, z, args);
        };
        G__9969.cljs$lang$maxFixedArity = 3;
        G__9969.cljs$lang$applyTo = function(arglist__9971) {
          var x = cljs.core.first(arglist__9971);
          arglist__9971 = cljs.core.next(arglist__9971);
          var y = cljs.core.first(arglist__9971);
          arglist__9971 = cljs.core.next(arglist__9971);
          var z = cljs.core.first(arglist__9971);
          var args = cljs.core.rest(arglist__9971);
          return G__9969__delegate(x, y, z, args);
        };
        G__9969.cljs$core$IFn$_invoke$arity$variadic = G__9969__delegate;
        return G__9969;
      }();
      G__9968 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9968__0.call(this);
          case 1:
            return G__9968__1.call(this, x);
          case 2:
            return G__9968__2.call(this, x, y);
          case 3:
            return G__9968__3.call(this, x, y, z);
          default:
            var G__9972 = null;
            if (arguments.length > 3) {
              var G__9973__i = 0, G__9973__a = new Array(arguments.length - 3);
              while (G__9973__i < G__9973__a.length) {
                G__9973__a[G__9973__i] = arguments[G__9973__i + 3];
                ++G__9973__i;
              }
              G__9972 = new cljs.core.IndexedSeq(G__9973__a, 0);
            }
            return G__9968__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9972);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9968.cljs$lang$maxFixedArity = 3;
      G__9968.cljs$lang$applyTo = G__9968__4.cljs$lang$applyTo;
      G__9968.cljs$core$IFn$_invoke$arity$0 = G__9968__0;
      G__9968.cljs$core$IFn$_invoke$arity$1 = G__9968__1;
      G__9968.cljs$core$IFn$_invoke$arity$2 = G__9968__2;
      G__9968.cljs$core$IFn$_invoke$arity$3 = G__9968__3;
      G__9968.cljs$core$IFn$_invoke$arity$variadic = G__9968__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9968;
    }();
  };
  var juxt__4 = function() {
    var G__9974__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__9975 = null;
          var G__9975__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9862_SHARP_, p2__9863_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9862_SHARP_, function() {
                  return p2__9863_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9863_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9863_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9975__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9864_SHARP_, p2__9865_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9864_SHARP_, function() {
                  var G__9950 = x;
                  return p2__9865_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9865_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9950) : p2__9865_SHARP_.call(null, G__9950);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9975__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9866_SHARP_, p2__9867_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9866_SHARP_, function() {
                  var G__9951 = x;
                  var G__9952 = y;
                  return p2__9867_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9867_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9951, G__9952) : p2__9867_SHARP_.call(null, G__9951, G__9952);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9975__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9868_SHARP_, p2__9869_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9868_SHARP_, function() {
                  var G__9953 = x;
                  var G__9954 = y;
                  var G__9955 = z;
                  return p2__9869_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9869_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9953, G__9954, G__9955) : p2__9869_SHARP_.call(null, G__9953, G__9954, G__9955);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9975__4 = function() {
            var G__9976__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__9870_SHARP_, p2__9871_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9870_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9871_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__9976 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__9977__i = 0, G__9977__a = new Array(arguments.length - 3);
                while (G__9977__i < G__9977__a.length) {
                  G__9977__a[G__9977__i] = arguments[G__9977__i + 3];
                  ++G__9977__i;
                }
                args = new cljs.core.IndexedSeq(G__9977__a, 0);
              }
              return G__9976__delegate.call(this, x, y, z, args);
            };
            G__9976.cljs$lang$maxFixedArity = 3;
            G__9976.cljs$lang$applyTo = function(arglist__9978) {
              var x = cljs.core.first(arglist__9978);
              arglist__9978 = cljs.core.next(arglist__9978);
              var y = cljs.core.first(arglist__9978);
              arglist__9978 = cljs.core.next(arglist__9978);
              var z = cljs.core.first(arglist__9978);
              var args = cljs.core.rest(arglist__9978);
              return G__9976__delegate(x, y, z, args);
            };
            G__9976.cljs$core$IFn$_invoke$arity$variadic = G__9976__delegate;
            return G__9976;
          }();
          G__9975 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__9975__0.call(this);
              case 1:
                return G__9975__1.call(this, x);
              case 2:
                return G__9975__2.call(this, x, y);
              case 3:
                return G__9975__3.call(this, x, y, z);
              default:
                var G__9979 = null;
                if (arguments.length > 3) {
                  var G__9980__i = 0, G__9980__a = new Array(arguments.length - 3);
                  while (G__9980__i < G__9980__a.length) {
                    G__9980__a[G__9980__i] = arguments[G__9980__i + 3];
                    ++G__9980__i;
                  }
                  G__9979 = new cljs.core.IndexedSeq(G__9980__a, 0);
                }
                return G__9975__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9979);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9975.cljs$lang$maxFixedArity = 3;
          G__9975.cljs$lang$applyTo = G__9975__4.cljs$lang$applyTo;
          G__9975.cljs$core$IFn$_invoke$arity$0 = G__9975__0;
          G__9975.cljs$core$IFn$_invoke$arity$1 = G__9975__1;
          G__9975.cljs$core$IFn$_invoke$arity$2 = G__9975__2;
          G__9975.cljs$core$IFn$_invoke$arity$3 = G__9975__3;
          G__9975.cljs$core$IFn$_invoke$arity$variadic = G__9975__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__9975;
        }();
      }(fs__$1);
    };
    var G__9974 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__9981__i = 0, G__9981__a = new Array(arguments.length - 3);
        while (G__9981__i < G__9981__a.length) {
          G__9981__a[G__9981__i] = arguments[G__9981__i + 3];
          ++G__9981__i;
        }
        fs = new cljs.core.IndexedSeq(G__9981__a, 0);
      }
      return G__9974__delegate.call(this, f, g, h, fs);
    };
    G__9974.cljs$lang$maxFixedArity = 3;
    G__9974.cljs$lang$applyTo = function(arglist__9982) {
      var f = cljs.core.first(arglist__9982);
      arglist__9982 = cljs.core.next(arglist__9982);
      var g = cljs.core.first(arglist__9982);
      arglist__9982 = cljs.core.next(arglist__9982);
      var h = cljs.core.first(arglist__9982);
      var fs = cljs.core.rest(arglist__9982);
      return G__9974__delegate(f, g, h, fs);
    };
    G__9974.cljs$core$IFn$_invoke$arity$variadic = G__9974__delegate;
    return G__9974;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__9983 = null;
        if (arguments.length > 3) {
          var G__9984__i = 0, G__9984__a = new Array(arguments.length - 3);
          while (G__9984__i < G__9984__a.length) {
            G__9984__a[G__9984__i] = arguments[G__9984__i + 3];
            ++G__9984__i;
          }
          G__9983 = new cljs.core.IndexedSeq(G__9984__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__9983);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__9985 = cljs.core.next(coll);
        coll = G__9985;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__9986 = n - 1;
        var G__9987 = cljs.core.next(coll);
        n = G__9986;
        coll = G__9987;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__9991 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9991, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9991, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9991, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_9999 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__10000_10006 = cljs.core.first(coll);
        var G__10001_10007 = writer;
        var G__10002_10008 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10000_10006, G__10001_10007, G__10002_10008) : print_one.call(null, G__10000_10006, G__10001_10007, G__10002_10008);
      } else {
      }
      var coll_10009__$1 = cljs.core.next(coll);
      var n_10010 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_10009__$1 && (n_10010 == null || !(n_10010 === 0))) {
          cljs.core._write(writer, sep);
          var G__10003_10011 = cljs.core.first(coll_10009__$1);
          var G__10004_10012 = writer;
          var G__10005_10013 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10003_10011, G__10004_10012, G__10005_10013) : print_one.call(null, G__10003_10011, G__10004_10012, G__10005_10013);
          var G__10014 = cljs.core.next(coll_10009__$1);
          var G__10015 = n_10010 - 1;
          coll_10009__$1 = G__10014;
          n_10010 = G__10015;
          continue;
        } else {
          if (cljs.core.seq(coll_10009__$1) && n_10010 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9999;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10020 = cljs.core.seq(ss);
    var chunk__10021 = null;
    var count__10022 = 0;
    var i__10023 = 0;
    while (true) {
      if (i__10023 < count__10022) {
        var s = chunk__10021.cljs$core$IIndexed$_nth$arity$2(null, i__10023);
        cljs.core._write(writer, s);
        var G__10024 = seq__10020;
        var G__10025 = chunk__10021;
        var G__10026 = count__10022;
        var G__10027 = i__10023 + 1;
        seq__10020 = G__10024;
        chunk__10021 = G__10025;
        count__10022 = G__10026;
        i__10023 = G__10027;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__10020);
        if (temp__4126__auto__) {
          var seq__10020__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__10020__$1)) {
            var c__4545__auto__ = cljs.core.chunk_first(seq__10020__$1);
            var G__10028 = cljs.core.chunk_rest(seq__10020__$1);
            var G__10029 = c__4545__auto__;
            var G__10030 = cljs.core.count(c__4545__auto__);
            var G__10031 = 0;
            seq__10020 = G__10028;
            chunk__10021 = G__10029;
            count__10022 = G__10030;
            i__10023 = G__10031;
            continue;
          } else {
            var s = cljs.core.first(seq__10020__$1);
            cljs.core._write(writer, s);
            var G__10032 = cljs.core.next(seq__10020__$1);
            var G__10033 = null;
            var G__10034 = 0;
            var G__10035 = 0;
            seq__10020 = G__10032;
            chunk__10021 = G__10033;
            count__10022 = G__10034;
            i__10023 = G__10035;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__10036__i = 0, G__10036__a = new Array(arguments.length - 1);
      while (G__10036__i < G__10036__a.length) {
        G__10036__a[G__10036__i] = arguments[G__10036__i + 1];
        ++G__10036__i;
      }
      ss = new cljs.core.IndexedSeq(G__10036__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10037) {
    var writer = cljs.core.first(arglist__10037);
    var ss = cljs.core.rest(arglist__10037);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10039 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10039;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__10042 = '[\\\\"\b\f\n\r\t]';
    var G__10043 = "g";
    return RegExp(G__10042, G__10043);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3746__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3746__auto__)) {
          var and__3746__auto____$1 = function() {
            var G__10057 = obj;
            if (G__10057) {
              var bit__4439__auto__ = G__10057.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4439__auto__ || G__10057.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__10057.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10057);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10057);
            }
          }();
          if (and__3746__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3746__auto____$1;
          }
        } else {
          return and__3746__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__10058 = obj;
            if (G__10058) {
              var bit__4432__auto__ = G__10058.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4432__auto__ || G__10058.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__10059 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__10060 = pr_writer;
                var G__10061 = writer;
                var G__10062 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10059, G__10060, G__10061, G__10062) : cljs.core.print_map.call(null, G__10059, G__10060, G__10061, G__10062);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__10063 = obj;
                    return goog.isString(G__10063);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__10065 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__10065;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__10064 = obj;
                            if (G__10064) {
                              var bit__4439__auto__ = G__10064.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4439__auto__ || G__10064.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__10064.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10064);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10064);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__10070 = cljs.core.seq(cljs.core.next(objs));
  var chunk__10071 = null;
  var count__10072 = 0;
  var i__10073 = 0;
  while (true) {
    if (i__10073 < count__10072) {
      var obj = chunk__10071.cljs$core$IIndexed$_nth$arity$2(null, i__10073);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__10074 = seq__10070;
      var G__10075 = chunk__10071;
      var G__10076 = count__10072;
      var G__10077 = i__10073 + 1;
      seq__10070 = G__10074;
      chunk__10071 = G__10075;
      count__10072 = G__10076;
      i__10073 = G__10077;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__10070);
      if (temp__4126__auto__) {
        var seq__10070__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10070__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first(seq__10070__$1);
          var G__10078 = cljs.core.chunk_rest(seq__10070__$1);
          var G__10079 = c__4545__auto__;
          var G__10080 = cljs.core.count(c__4545__auto__);
          var G__10081 = 0;
          seq__10070 = G__10078;
          chunk__10071 = G__10079;
          count__10072 = G__10080;
          i__10073 = G__10081;
          continue;
        } else {
          var obj = cljs.core.first(seq__10070__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__10082 = cljs.core.next(seq__10070__$1);
          var G__10083 = null;
          var G__10084 = 0;
          var G__10085 = 0;
          seq__10070 = G__10082;
          chunk__10071 = G__10083;
          count__10072 = G__10084;
          i__10073 = G__10085;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10086__i = 0, G__10086__a = new Array(arguments.length - 0);
      while (G__10086__i < G__10086__a.length) {
        G__10086__a[G__10086__i] = arguments[G__10086__i + 0];
        ++G__10086__i;
      }
      objs = new cljs.core.IndexedSeq(G__10086__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10087) {
    var objs = cljs.core.seq(arglist__10087);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10088__i = 0, G__10088__a = new Array(arguments.length - 0);
      while (G__10088__i < G__10088__a.length) {
        G__10088__a[G__10088__i] = arguments[G__10088__i + 0];
        ++G__10088__i;
      }
      objs = new cljs.core.IndexedSeq(G__10088__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10089) {
    var objs = cljs.core.seq(arglist__10089);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10090__i = 0, G__10090__a = new Array(arguments.length - 0);
      while (G__10090__i < G__10090__a.length) {
        G__10090__a[G__10090__i] = arguments[G__10090__i + 0];
        ++G__10090__i;
      }
      objs = new cljs.core.IndexedSeq(G__10090__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10091) {
    var objs = cljs.core.seq(arglist__10091);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10092__i = 0, G__10092__a = new Array(arguments.length - 0);
      while (G__10092__i < G__10092__a.length) {
        G__10092__a[G__10092__i] = arguments[G__10092__i + 0];
        ++G__10092__i;
      }
      objs = new cljs.core.IndexedSeq(G__10092__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10093) {
    var objs = cljs.core.seq(arglist__10093);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10094__i = 0, G__10094__a = new Array(arguments.length - 0);
      while (G__10094__i < G__10094__a.length) {
        G__10094__a[G__10094__i] = arguments[G__10094__i + 0];
        ++G__10094__i;
      }
      objs = new cljs.core.IndexedSeq(G__10094__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10095) {
    var objs = cljs.core.seq(arglist__10095);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10096__i = 0, G__10096__a = new Array(arguments.length - 0);
      while (G__10096__i < G__10096__a.length) {
        G__10096__a[G__10096__i] = arguments[G__10096__i + 0];
        ++G__10096__i;
      }
      objs = new cljs.core.IndexedSeq(G__10096__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10097) {
    var objs = cljs.core.seq(arglist__10097);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10098__i = 0, G__10098__a = new Array(arguments.length - 0);
      while (G__10098__i < G__10098__a.length) {
        G__10098__a[G__10098__i] = arguments[G__10098__i + 0];
        ++G__10098__i;
      }
      objs = new cljs.core.IndexedSeq(G__10098__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10099) {
    var objs = cljs.core.seq(arglist__10099);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10100__i = 0, G__10100__a = new Array(arguments.length - 0);
      while (G__10100__i < G__10100__a.length) {
        G__10100__a[G__10100__i] = arguments[G__10100__i + 0];
        ++G__10100__i;
      }
      objs = new cljs.core.IndexedSeq(G__10100__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10101) {
    var objs = cljs.core.seq(arglist__10101);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__10108_10114 = cljs.core.key(e);
    var G__10109_10115 = w;
    var G__10110_10116 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10108_10114, G__10109_10115, G__10110_10116) : print_one.call(null, G__10108_10114, G__10109_10115, G__10110_10116);
    cljs.core._write(w, " ");
    var G__10111 = cljs.core.val(e);
    var G__10112 = w;
    var G__10113 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10111, G__10112, G__10113) : print_one.call(null, G__10111, G__10112, G__10113);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__10117__i = 0, G__10117__a = new Array(arguments.length - 2);
      while (G__10117__i < G__10117__a.length) {
        G__10117__a[G__10117__i] = arguments[G__10117__i + 2];
        ++G__10117__i;
      }
      args = new cljs.core.IndexedSeq(G__10117__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10118) {
    var iref = cljs.core.first(arglist__10118);
    arglist__10118 = cljs.core.next(arglist__10118);
    var f = cljs.core.first(arglist__10118);
    var args = cljs.core.rest(arglist__10118);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__10121 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10121) : cljs.core.atom.call(null, G__10121);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__10123 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10123) : cljs.core.deref.call(null, G__10123);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__10124_SHARP_, p2__10125_SHARP_) {
    var ret = function() {
      var G__10128 = p1__10124_SHARP_;
      var G__10129 = p2__10125_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10128, G__10129) : rf.call(null, G__10128, G__10129);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__10132 = null;
      var G__10132__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10132__1 = function(result) {
        var G__10131 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10131) : rf.call(null, G__10131);
      };
      var G__10132__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__10132 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10132__0.call(this);
          case 1:
            return G__10132__1.call(this, result);
          case 2:
            return G__10132__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10132.cljs$core$IFn$_invoke$arity$0 = G__10132__0;
      G__10132.cljs$core$IFn$_invoke$arity$1 = G__10132__1;
      G__10132.cljs$core$IFn$_invoke$arity$2 = G__10132__2;
      return G__10132;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__10141 = null;
          var G__10141__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__10141__1 = function(result) {
            var G__10137 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10137) : rf.call(null, G__10137);
          };
          var G__10141__2 = function(result, input) {
            var prior = function() {
              var G__10138 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10138) : cljs.core.deref.call(null, G__10138);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__10139 = result;
              var G__10140 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10139, G__10140) : rf.call(null, G__10139, G__10140);
            }
          };
          G__10141 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10141__0.call(this);
              case 1:
                return G__10141__1.call(this, result);
              case 2:
                return G__10141__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10141.cljs$core$IFn$_invoke$arity$0 = G__10141__0;
          G__10141.cljs$core$IFn$_invoke$arity$1 = G__10141__1;
          G__10141.cljs$core$IFn$_invoke$arity$2 = G__10141__2;
          return G__10141;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4736__auto__ = this;
  return cljs.core.es6_iterator(this__4736__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10143_SHARP_, p2__10142_SHARP_) {
    var G__10145 = p2__10142_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10145) : proc.call(null, G__10145);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj10147 = {};
  return obj10147;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3746__auto__ = x;
    if (and__3746__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4402__auto__ = x == null ? null : x;
    return function() {
      var or__3758__auto__ = cljs.core._clj__GT_js[function() {
        var G__10151 = x__4402__auto__;
        return goog.typeOf(G__10151);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3746__auto__ = x;
    if (and__3746__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4402__auto__ = x == null ? null : x;
    return function() {
      var or__3758__auto__ = cljs.core._key__GT_js[function() {
        var G__10155 = x__4402__auto__;
        return goog.typeOf(G__10155);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10158 = k;
    if (G__10158) {
      var bit__4439__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3758__auto__ = bit__4439__auto__;
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          return G__10158.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10158.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10158);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10158);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__10159 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10159) : cljs.core.clj__GT_js.call(null, G__10159);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10175 = x;
      if (G__10175) {
        var bit__4439__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3758__auto__ = bit__4439__auto__;
          if (cljs.core.truth_(or__3758__auto__)) {
            return or__3758__auto__;
          } else {
            return G__10175.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10175.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10175);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10175);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj10177 = {};
              return obj10177;
            }();
            var seq__10178_10188 = cljs.core.seq(x);
            var chunk__10179_10189 = null;
            var count__10180_10190 = 0;
            var i__10181_10191 = 0;
            while (true) {
              if (i__10181_10191 < count__10180_10190) {
                var vec__10182_10192 = chunk__10179_10189.cljs$core$IIndexed$_nth$arity$2(null, i__10181_10191);
                var k_10193 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10182_10192, 0, null);
                var v_10194 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10182_10192, 1, null);
                m[cljs.core.key__GT_js(k_10193)] = clj__GT_js(v_10194);
                var G__10195 = seq__10178_10188;
                var G__10196 = chunk__10179_10189;
                var G__10197 = count__10180_10190;
                var G__10198 = i__10181_10191 + 1;
                seq__10178_10188 = G__10195;
                chunk__10179_10189 = G__10196;
                count__10180_10190 = G__10197;
                i__10181_10191 = G__10198;
                continue;
              } else {
                var temp__4126__auto___10199 = cljs.core.seq(seq__10178_10188);
                if (temp__4126__auto___10199) {
                  var seq__10178_10200__$1 = temp__4126__auto___10199;
                  if (cljs.core.chunked_seq_QMARK_(seq__10178_10200__$1)) {
                    var c__4545__auto___10201 = cljs.core.chunk_first(seq__10178_10200__$1);
                    var G__10202 = cljs.core.chunk_rest(seq__10178_10200__$1);
                    var G__10203 = c__4545__auto___10201;
                    var G__10204 = cljs.core.count(c__4545__auto___10201);
                    var G__10205 = 0;
                    seq__10178_10188 = G__10202;
                    chunk__10179_10189 = G__10203;
                    count__10180_10190 = G__10204;
                    i__10181_10191 = G__10205;
                    continue;
                  } else {
                    var vec__10183_10206 = cljs.core.first(seq__10178_10200__$1);
                    var k_10207 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10183_10206, 0, null);
                    var v_10208 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10183_10206, 1, null);
                    m[cljs.core.key__GT_js(k_10207)] = clj__GT_js(v_10208);
                    var G__10209 = cljs.core.next(seq__10178_10200__$1);
                    var G__10210 = null;
                    var G__10211 = 0;
                    var G__10212 = 0;
                    seq__10178_10188 = G__10209;
                    chunk__10179_10189 = G__10210;
                    count__10180_10190 = G__10211;
                    i__10181_10191 = G__10212;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__10184_10213 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__10185_10214 = null;
              var count__10186_10215 = 0;
              var i__10187_10216 = 0;
              while (true) {
                if (i__10187_10216 < count__10186_10215) {
                  var x_10217__$1 = chunk__10185_10214.cljs$core$IIndexed$_nth$arity$2(null, i__10187_10216);
                  arr.push(x_10217__$1);
                  var G__10218 = seq__10184_10213;
                  var G__10219 = chunk__10185_10214;
                  var G__10220 = count__10186_10215;
                  var G__10221 = i__10187_10216 + 1;
                  seq__10184_10213 = G__10218;
                  chunk__10185_10214 = G__10219;
                  count__10186_10215 = G__10220;
                  i__10187_10216 = G__10221;
                  continue;
                } else {
                  var temp__4126__auto___10222 = cljs.core.seq(seq__10184_10213);
                  if (temp__4126__auto___10222) {
                    var seq__10184_10223__$1 = temp__4126__auto___10222;
                    if (cljs.core.chunked_seq_QMARK_(seq__10184_10223__$1)) {
                      var c__4545__auto___10224 = cljs.core.chunk_first(seq__10184_10223__$1);
                      var G__10225 = cljs.core.chunk_rest(seq__10184_10223__$1);
                      var G__10226 = c__4545__auto___10224;
                      var G__10227 = cljs.core.count(c__4545__auto___10224);
                      var G__10228 = 0;
                      seq__10184_10213 = G__10225;
                      chunk__10185_10214 = G__10226;
                      count__10186_10215 = G__10227;
                      i__10187_10216 = G__10228;
                      continue;
                    } else {
                      var x_10229__$1 = cljs.core.first(seq__10184_10223__$1);
                      arr.push(x_10229__$1);
                      var G__10230 = cljs.core.next(seq__10184_10223__$1);
                      var G__10231 = null;
                      var G__10232 = 0;
                      var G__10233 = 0;
                      seq__10184_10213 = G__10230;
                      chunk__10185_10214 = G__10231;
                      count__10186_10215 = G__10232;
                      i__10187_10216 = G__10233;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10235 = {};
  return obj10235;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3746__auto__ = x;
    if (and__3746__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4402__auto__ = x == null ? null : x;
    return function() {
      var or__3758__auto__ = cljs.core._js__GT_clj[function() {
        var G__10239 = x__4402__auto__;
        return goog.typeOf(G__10239);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__10296__delegate = function(x, opts) {
      var map__10269 = opts;
      var map__10269__$1 = cljs.core.seq_QMARK_(map__10269) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10269) : map__10269;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10269__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__10269, map__10269__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__10285 = x__$1;
            if (G__10285) {
              var bit__4439__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3758__auto__ = bit__4439__auto__;
                if (cljs.core.truth_(or__3758__auto__)) {
                  return or__3758__auto__;
                } else {
                  return G__10285.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__10285.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10285);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10285);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4514__auto__ = function(map__10269, map__10269__$1, keywordize_keys, keyfn) {
                        return function iter__10286(s__10287) {
                          return new cljs.core.LazySeq(null, function(map__10269, map__10269__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__10287__$1 = s__10287;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__10287__$1);
                                if (temp__4126__auto__) {
                                  var s__10287__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__10287__$2)) {
                                    var c__4512__auto__ = cljs.core.chunk_first(s__10287__$2);
                                    var size__4513__auto__ = cljs.core.count(c__4512__auto__);
                                    var b__10289 = cljs.core.chunk_buffer(size__4513__auto__);
                                    if (function() {
                                      var i__10288 = 0;
                                      while (true) {
                                        if (i__10288 < size__4513__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4512__auto__, i__10288);
                                          cljs.core.chunk_append(b__10289, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__10294 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10294) : keyfn.call(null, G__10294);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__10297 = i__10288 + 1;
                                          i__10288 = G__10297;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10289), iter__10286(cljs.core.chunk_rest(s__10287__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10289), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__10287__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__10295 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10295) : keyfn.call(null, G__10295);
                                    }(), thisfn(x__$1[k])], null), iter__10286(cljs.core.rest(s__10287__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__10269, map__10269__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__10269, map__10269__$1, keywordize_keys, keyfn);
                      return iter__4514__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__10269, map__10269__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__10296 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__10298__i = 0, G__10298__a = new Array(arguments.length - 1);
        while (G__10298__i < G__10298__a.length) {
          G__10298__a[G__10298__i] = arguments[G__10298__i + 1];
          ++G__10298__i;
        }
        opts = new cljs.core.IndexedSeq(G__10298__a, 0);
      }
      return G__10296__delegate.call(this, x, opts);
    };
    G__10296.cljs$lang$maxFixedArity = 1;
    G__10296.cljs$lang$applyTo = function(arglist__10299) {
      var x = cljs.core.first(arglist__10299);
      var opts = cljs.core.rest(arglist__10299);
      return G__10296__delegate(x, opts);
    };
    G__10296.cljs$core$IFn$_invoke$arity$variadic = G__10296__delegate;
    return G__10296;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__10300 = null;
        if (arguments.length > 1) {
          var G__10301__i = 0, G__10301__a = new Array(arguments.length - 1);
          while (G__10301__i < G__10301__a.length) {
            G__10301__a[G__10301__i] = arguments[G__10301__i + 1];
            ++G__10301__i;
          }
          G__10300 = new cljs.core.IndexedSeq(G__10301__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10300);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__10304 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10304) : cljs.core.atom.call(null, G__10304);
  }();
  return function(mem) {
    return function() {
      var G__10306__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__10305 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10305) : cljs.core.deref.call(null, G__10305);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__10306 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10307__i = 0, G__10307__a = new Array(arguments.length - 0);
          while (G__10307__i < G__10307__a.length) {
            G__10307__a[G__10307__i] = arguments[G__10307__i + 0];
            ++G__10307__i;
          }
          args = new cljs.core.IndexedSeq(G__10307__a, 0);
        }
        return G__10306__delegate.call(this, args);
      };
      G__10306.cljs$lang$maxFixedArity = 0;
      G__10306.cljs$lang$applyTo = function(arglist__10308) {
        var args = cljs.core.seq(arglist__10308);
        return G__10306__delegate(args);
      };
      G__10306.cljs$core$IFn$_invoke$arity$variadic = G__10306__delegate;
      return G__10306;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__10310 = ret;
        f = G__10310;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10311__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__10311 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__10312__i = 0, G__10312__a = new Array(arguments.length - 1);
        while (G__10312__i < G__10312__a.length) {
          G__10312__a[G__10312__i] = arguments[G__10312__i + 1];
          ++G__10312__i;
        }
        args = new cljs.core.IndexedSeq(G__10312__a, 0);
      }
      return G__10311__delegate.call(this, f, args);
    };
    G__10311.cljs$lang$maxFixedArity = 1;
    G__10311.cljs$lang$applyTo = function(arglist__10313) {
      var f = cljs.core.first(arglist__10313);
      var args = cljs.core.rest(arglist__10313);
      return G__10311__delegate(f, args);
    };
    G__10311.cljs$core$IFn$_invoke$arity$variadic = G__10311__delegate;
    return G__10311;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__10314 = null;
        if (arguments.length > 1) {
          var G__10315__i = 0, G__10315__a = new Array(arguments.length - 1);
          while (G__10315__i < G__10315__a.length) {
            G__10315__a[G__10315__i] = arguments[G__10315__i + 1];
            ++G__10315__i;
          }
          G__10314 = new cljs.core.IndexedSeq(G__10315__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10314);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__10318 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10318) : Math.floor.call(null, G__10318);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__10320 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10320) : f.call(null, G__10320);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__10322 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10322) : cljs.core.atom.call(null, G__10322);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__10323__i = 0, G__10323__a = new Array(arguments.length - 1);
      while (G__10323__i < G__10323__a.length) {
        G__10323__a[G__10323__i] = arguments[G__10323__i + 1];
        ++G__10323__i;
      }
      args = new cljs.core.IndexedSeq(G__10323__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10324) {
    var f = cljs.core.first(arglist__10324);
    var args = cljs.core.rest(arglist__10324);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10389 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10389) : cljs.core.deref.call(null, G__10389);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3758__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3758__auto__) {
      return or__3758__auto__;
    } else {
      var or__3758__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3758__auto____$1) {
        return or__3758__auto____$1;
      } else {
        var and__3746__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3746__auto__) {
          var and__3746__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3746__auto____$1) {
            var and__3746__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3746__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__10414 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__10412 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10412) : child.call(null, G__10412);
                  }(), function() {
                    var G__10413 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10413) : parent.call(null, G__10413);
                  }());
                  var G__10415 = i + 1;
                  ret = G__10414;
                  i = G__10415;
                  continue;
                }
                break;
              }
            } else {
              return and__3746__auto____$2;
            }
          } else {
            return and__3746__auto____$1;
          }
        } else {
          return and__3746__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10419 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10419) : cljs.core.deref.call(null, G__10419);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10423 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10423) : cljs.core.deref.call(null, G__10423);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10427 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10427) : cljs.core.deref.call(null, G__10427);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__10436 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10436) : targets.call(null, G__10436);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__10437 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10437) : sources.call(null, G__10437);
        }()));
      };
    }(tp, td, ta);
    var or__3758__auto__ = cljs.core.contains_QMARK_(function() {
      var G__10441 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10441) : tp.call(null, G__10441);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__10442 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10442) : ta.call(null, G__10442);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__10443 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10443) : ta.call(null, G__10443);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3758__auto__)) {
      return or__3758__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__10450 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10450) : parentMap.call(null, G__10450);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10451 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10451) : parentMap.call(null, G__10451);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__10444_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__10444_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10444_SHARP_), cljs.core.second(p1__10444_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__10452 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10452) : parentMap.call(null, G__10452);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10445_SHARP_, p2__10446_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10445_SHARP_, p2__10446_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10455 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10455) : cljs.core.deref.call(null, G__10455);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10456 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10456) : cljs.core.deref.call(null, G__10456);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10472 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10472) : cljs.core.deref.call(null, G__10472);
  }().call(null, x);
  var or__3758__auto__ = cljs.core.truth_(function() {
    var and__3746__auto__ = xprefs;
    if (cljs.core.truth_(and__3746__auto__)) {
      var G__10474 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10474) : xprefs.call(null, G__10474);
    } else {
      return and__3746__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3758__auto__)) {
    return or__3758__auto__;
  } else {
    var or__3758__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10475 = cljs.core.rest(ps);
          ps = G__10475;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3758__auto____$1)) {
      return or__3758__auto____$1;
    } else {
      var or__3758__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10476 = cljs.core.rest(ps);
            ps = G__10476;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3758__auto____$2)) {
        return or__3758__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3758__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3758__auto__)) {
    return or__3758__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10490) {
    var vec__10491 = p__10490;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10491, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10491, 1, null);
    var e = vec__10491;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10492 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10492) : cljs.core.deref.call(null, G__10492);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3758__auto__ = be == null;
        if (or__3758__auto__) {
          return or__3758__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10493 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10493) : cljs.core.deref.call(null, G__10493);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10494 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10494) : cljs.core.deref.call(null, G__10494);
    }(), function() {
      var G__10495 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10495) : cljs.core.deref.call(null, G__10495);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10497 = {};
  return obj10497;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._reset[function() {
        var G__10501 = x__4402__auto__;
        return goog.typeOf(G__10501);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._reset["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._add_method[function() {
        var G__10505 = x__4402__auto__;
        return goog.typeOf(G__10505);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._add_method["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._remove_method[function() {
        var G__10509 = x__4402__auto__;
        return goog.typeOf(G__10509);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._remove_method["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._prefer_method[function() {
        var G__10513 = x__4402__auto__;
        return goog.typeOf(G__10513);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._get_method[function() {
        var G__10517 = x__4402__auto__;
        return goog.typeOf(G__10517);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._get_method["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._methods[function() {
        var G__10521 = x__4402__auto__;
        return goog.typeOf(G__10521);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._methods["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3746__auto__ = mf;
    if (and__3746__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4402__auto__ = mf == null ? null : mf;
    return function() {
      var or__3758__auto__ = cljs.core._prefers[function() {
        var G__10525 = x__4402__auto__;
        return goog.typeOf(G__10525);
      }()];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = cljs.core._prefers["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10527 = this$__$1;
  return goog.getUid(G__10527);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10528 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10528) : cljs.core.deref.call(null, G__10528);
  }(), function() {
    var G__10529 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10529) : cljs.core.deref.call(null, G__10529);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__10530 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10530) : cljs.core.deref.call(null, G__10530);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__10531 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10531) : cljs.core.deref.call(null, G__10531);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10532 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10532) : cljs.core.deref.call(null, G__10532);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10533 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10533) : cljs.core.deref.call(null, G__10533);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11374 = null;
  var G__11374__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11374__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10534 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10534) : self__.dispatch_fn.call(null, G__10534);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10535 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10535) : target_fn.call(null, G__10535);
  };
  var G__11374__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10536 = a;
      var G__10537 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10536, G__10537) : self__.dispatch_fn.call(null, G__10536, G__10537);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10538 = a;
    var G__10539 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10538, G__10539) : target_fn.call(null, G__10538, G__10539);
  };
  var G__11374__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10540 = a;
      var G__10541 = b;
      var G__10542 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10540, G__10541, G__10542) : self__.dispatch_fn.call(null, G__10540, G__10541, G__10542);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10543 = a;
    var G__10544 = b;
    var G__10545 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10543, G__10544, G__10545) : target_fn.call(null, G__10543, G__10544, G__10545);
  };
  var G__11374__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10546 = a;
      var G__10547 = b;
      var G__10548 = c;
      var G__10549 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10546, G__10547, G__10548, G__10549) : self__.dispatch_fn.call(null, G__10546, G__10547, G__10548, G__10549);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10550 = a;
    var G__10551 = b;
    var G__10552 = c;
    var G__10553 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10550, G__10551, G__10552, G__10553) : target_fn.call(null, G__10550, G__10551, G__10552, G__10553);
  };
  var G__11374__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10554 = a;
      var G__10555 = b;
      var G__10556 = c;
      var G__10557 = d;
      var G__10558 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10554, G__10555, G__10556, G__10557, G__10558) : self__.dispatch_fn.call(null, G__10554, G__10555, G__10556, G__10557, G__10558);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10559 = a;
    var G__10560 = b;
    var G__10561 = c;
    var G__10562 = d;
    var G__10563 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10559, G__10560, G__10561, G__10562, G__10563) : target_fn.call(null, G__10559, G__10560, G__10561, G__10562, G__10563);
  };
  var G__11374__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10564 = a;
      var G__10565 = b;
      var G__10566 = c;
      var G__10567 = d;
      var G__10568 = e;
      var G__10569 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10564, G__10565, G__10566, G__10567, G__10568, G__10569) : self__.dispatch_fn.call(null, G__10564, G__10565, G__10566, G__10567, G__10568, G__10569);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10570 = a;
    var G__10571 = b;
    var G__10572 = c;
    var G__10573 = d;
    var G__10574 = e;
    var G__10575 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10570, G__10571, G__10572, G__10573, G__10574, G__10575) : target_fn.call(null, G__10570, G__10571, G__10572, G__10573, G__10574, G__10575);
  };
  var G__11374__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10576 = a;
      var G__10577 = b;
      var G__10578 = c;
      var G__10579 = d;
      var G__10580 = e;
      var G__10581 = f;
      var G__10582 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582) : self__.dispatch_fn.call(null, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10583 = a;
    var G__10584 = b;
    var G__10585 = c;
    var G__10586 = d;
    var G__10587 = e;
    var G__10588 = f;
    var G__10589 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10583, G__10584, G__10585, G__10586, G__10587, G__10588, G__10589) : target_fn.call(null, G__10583, G__10584, G__10585, G__10586, G__10587, G__10588, G__10589);
  };
  var G__11374__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10590 = a;
      var G__10591 = b;
      var G__10592 = c;
      var G__10593 = d;
      var G__10594 = e;
      var G__10595 = f;
      var G__10596 = g;
      var G__10597 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597) : self__.dispatch_fn.call(null, G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10598 = a;
    var G__10599 = b;
    var G__10600 = c;
    var G__10601 = d;
    var G__10602 = e;
    var G__10603 = f;
    var G__10604 = g;
    var G__10605 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604, G__10605) : target_fn.call(null, G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604, G__10605);
  };
  var G__11374__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10606 = a;
      var G__10607 = b;
      var G__10608 = c;
      var G__10609 = d;
      var G__10610 = e;
      var G__10611 = f;
      var G__10612 = g;
      var G__10613 = h;
      var G__10614 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614) : self__.dispatch_fn.call(null, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10615 = a;
    var G__10616 = b;
    var G__10617 = c;
    var G__10618 = d;
    var G__10619 = e;
    var G__10620 = f;
    var G__10621 = g;
    var G__10622 = h;
    var G__10623 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623) : target_fn.call(null, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623);
  };
  var G__11374__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10624 = a;
      var G__10625 = b;
      var G__10626 = c;
      var G__10627 = d;
      var G__10628 = e;
      var G__10629 = f;
      var G__10630 = g;
      var G__10631 = h;
      var G__10632 = i;
      var G__10633 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633) : self__.dispatch_fn.call(null, G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10634 = a;
    var G__10635 = b;
    var G__10636 = c;
    var G__10637 = d;
    var G__10638 = e;
    var G__10639 = f;
    var G__10640 = g;
    var G__10641 = h;
    var G__10642 = i;
    var G__10643 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10634, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640, G__10641, G__10642, G__10643) : target_fn.call(null, G__10634, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640, G__10641, G__10642, G__10643);
  };
  var G__11374__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10644 = a;
      var G__10645 = b;
      var G__10646 = c;
      var G__10647 = d;
      var G__10648 = e;
      var G__10649 = f;
      var G__10650 = g;
      var G__10651 = h;
      var G__10652 = i;
      var G__10653 = j;
      var G__10654 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10644, G__10645, G__10646, G__10647, G__10648, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654) : self__.dispatch_fn.call(null, G__10644, G__10645, G__10646, G__10647, G__10648, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10655 = a;
    var G__10656 = b;
    var G__10657 = c;
    var G__10658 = d;
    var G__10659 = e;
    var G__10660 = f;
    var G__10661 = g;
    var G__10662 = h;
    var G__10663 = i;
    var G__10664 = j;
    var G__10665 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661, G__10662, G__10663, G__10664, G__10665) : target_fn.call(null, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661, G__10662, G__10663, G__10664, G__10665);
  };
  var G__11374__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10666 = a;
      var G__10667 = b;
      var G__10668 = c;
      var G__10669 = d;
      var G__10670 = e;
      var G__10671 = f;
      var G__10672 = g;
      var G__10673 = h;
      var G__10674 = i;
      var G__10675 = j;
      var G__10676 = k;
      var G__10677 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10666, G__10667, G__10668, G__10669, G__10670, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677) : self__.dispatch_fn.call(null, G__10666, G__10667, G__10668, G__10669, G__10670, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10678 = a;
    var G__10679 = b;
    var G__10680 = c;
    var G__10681 = d;
    var G__10682 = e;
    var G__10683 = f;
    var G__10684 = g;
    var G__10685 = h;
    var G__10686 = i;
    var G__10687 = j;
    var G__10688 = k;
    var G__10689 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688, G__10689) : target_fn.call(null, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688, G__10689);
  };
  var G__11374__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10690 = a;
      var G__10691 = b;
      var G__10692 = c;
      var G__10693 = d;
      var G__10694 = e;
      var G__10695 = f;
      var G__10696 = g;
      var G__10697 = h;
      var G__10698 = i;
      var G__10699 = j;
      var G__10700 = k;
      var G__10701 = l;
      var G__10702 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699, G__10700, G__10701, G__10702) : self__.dispatch_fn.call(null, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699, G__10700, G__10701, G__10702);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10703 = a;
    var G__10704 = b;
    var G__10705 = c;
    var G__10706 = d;
    var G__10707 = e;
    var G__10708 = f;
    var G__10709 = g;
    var G__10710 = h;
    var G__10711 = i;
    var G__10712 = j;
    var G__10713 = k;
    var G__10714 = l;
    var G__10715 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715) : target_fn.call(null, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715);
  };
  var G__11374__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10716 = a;
      var G__10717 = b;
      var G__10718 = c;
      var G__10719 = d;
      var G__10720 = e;
      var G__10721 = f;
      var G__10722 = g;
      var G__10723 = h;
      var G__10724 = i;
      var G__10725 = j;
      var G__10726 = k;
      var G__10727 = l;
      var G__10728 = m;
      var G__10729 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729) : self__.dispatch_fn.call(null, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10730 = a;
    var G__10731 = b;
    var G__10732 = c;
    var G__10733 = d;
    var G__10734 = e;
    var G__10735 = f;
    var G__10736 = g;
    var G__10737 = h;
    var G__10738 = i;
    var G__10739 = j;
    var G__10740 = k;
    var G__10741 = l;
    var G__10742 = m;
    var G__10743 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743) : target_fn.call(null, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743);
  };
  var G__11374__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10744 = a;
      var G__10745 = b;
      var G__10746 = c;
      var G__10747 = d;
      var G__10748 = e;
      var G__10749 = f;
      var G__10750 = g;
      var G__10751 = h;
      var G__10752 = i;
      var G__10753 = j;
      var G__10754 = k;
      var G__10755 = l;
      var G__10756 = m;
      var G__10757 = n;
      var G__10758 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758) : self__.dispatch_fn.call(null, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10759 = a;
    var G__10760 = b;
    var G__10761 = c;
    var G__10762 = d;
    var G__10763 = e;
    var G__10764 = f;
    var G__10765 = g;
    var G__10766 = h;
    var G__10767 = i;
    var G__10768 = j;
    var G__10769 = k;
    var G__10770 = l;
    var G__10771 = m;
    var G__10772 = n;
    var G__10773 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773) : target_fn.call(null, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773);
  };
  var G__11374__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10774 = a;
      var G__10775 = b;
      var G__10776 = c;
      var G__10777 = d;
      var G__10778 = e;
      var G__10779 = f;
      var G__10780 = g;
      var G__10781 = h;
      var G__10782 = i;
      var G__10783 = j;
      var G__10784 = k;
      var G__10785 = l;
      var G__10786 = m;
      var G__10787 = n;
      var G__10788 = o;
      var G__10789 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789) : self__.dispatch_fn.call(null, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10790 = a;
    var G__10791 = b;
    var G__10792 = c;
    var G__10793 = d;
    var G__10794 = e;
    var G__10795 = f;
    var G__10796 = g;
    var G__10797 = h;
    var G__10798 = i;
    var G__10799 = j;
    var G__10800 = k;
    var G__10801 = l;
    var G__10802 = m;
    var G__10803 = n;
    var G__10804 = o;
    var G__10805 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805) : target_fn.call(null, G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805);
  };
  var G__11374__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10806 = a;
      var G__10807 = b;
      var G__10808 = c;
      var G__10809 = d;
      var G__10810 = e;
      var G__10811 = f;
      var G__10812 = g;
      var G__10813 = h;
      var G__10814 = i;
      var G__10815 = j;
      var G__10816 = k;
      var G__10817 = l;
      var G__10818 = m;
      var G__10819 = n;
      var G__10820 = o;
      var G__10821 = p;
      var G__10822 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822) : self__.dispatch_fn.call(null, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10823 = a;
    var G__10824 = b;
    var G__10825 = c;
    var G__10826 = d;
    var G__10827 = e;
    var G__10828 = f;
    var G__10829 = g;
    var G__10830 = h;
    var G__10831 = i;
    var G__10832 = j;
    var G__10833 = k;
    var G__10834 = l;
    var G__10835 = m;
    var G__10836 = n;
    var G__10837 = o;
    var G__10838 = p;
    var G__10839 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839) : target_fn.call(null, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839);
  };
  var G__11374__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10840 = a;
      var G__10841 = b;
      var G__10842 = c;
      var G__10843 = d;
      var G__10844 = e;
      var G__10845 = f;
      var G__10846 = g;
      var G__10847 = h;
      var G__10848 = i;
      var G__10849 = j;
      var G__10850 = k;
      var G__10851 = l;
      var G__10852 = m;
      var G__10853 = n;
      var G__10854 = o;
      var G__10855 = p;
      var G__10856 = q;
      var G__10857 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857) : self__.dispatch_fn.call(null, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10858 = a;
    var G__10859 = b;
    var G__10860 = c;
    var G__10861 = d;
    var G__10862 = e;
    var G__10863 = f;
    var G__10864 = g;
    var G__10865 = h;
    var G__10866 = i;
    var G__10867 = j;
    var G__10868 = k;
    var G__10869 = l;
    var G__10870 = m;
    var G__10871 = n;
    var G__10872 = o;
    var G__10873 = p;
    var G__10874 = q;
    var G__10875 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875) : target_fn.call(null, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875);
  };
  var G__11374__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10876 = a;
      var G__10877 = b;
      var G__10878 = c;
      var G__10879 = d;
      var G__10880 = e;
      var G__10881 = f;
      var G__10882 = g;
      var G__10883 = h;
      var G__10884 = i;
      var G__10885 = j;
      var G__10886 = k;
      var G__10887 = l;
      var G__10888 = m;
      var G__10889 = n;
      var G__10890 = o;
      var G__10891 = p;
      var G__10892 = q;
      var G__10893 = r;
      var G__10894 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894) : self__.dispatch_fn.call(null, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, 
      G__10893, G__10894);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10895 = a;
    var G__10896 = b;
    var G__10897 = c;
    var G__10898 = d;
    var G__10899 = e;
    var G__10900 = f;
    var G__10901 = g;
    var G__10902 = h;
    var G__10903 = i;
    var G__10904 = j;
    var G__10905 = k;
    var G__10906 = l;
    var G__10907 = m;
    var G__10908 = n;
    var G__10909 = o;
    var G__10910 = p;
    var G__10911 = q;
    var G__10912 = r;
    var G__10913 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913) : target_fn.call(null, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913);
  };
  var G__11374__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10914 = a;
      var G__10915 = b;
      var G__10916 = c;
      var G__10917 = d;
      var G__10918 = e;
      var G__10919 = f;
      var G__10920 = g;
      var G__10921 = h;
      var G__10922 = i;
      var G__10923 = j;
      var G__10924 = k;
      var G__10925 = l;
      var G__10926 = m;
      var G__10927 = n;
      var G__10928 = o;
      var G__10929 = p;
      var G__10930 = q;
      var G__10931 = r;
      var G__10932 = s;
      var G__10933 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933) : self__.dispatch_fn.call(null, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, 
      G__10930, G__10931, G__10932, G__10933);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10934 = a;
    var G__10935 = b;
    var G__10936 = c;
    var G__10937 = d;
    var G__10938 = e;
    var G__10939 = f;
    var G__10940 = g;
    var G__10941 = h;
    var G__10942 = i;
    var G__10943 = j;
    var G__10944 = k;
    var G__10945 = l;
    var G__10946 = m;
    var G__10947 = n;
    var G__10948 = o;
    var G__10949 = p;
    var G__10950 = q;
    var G__10951 = r;
    var G__10952 = s;
    var G__10953 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953) : target_fn.call(null, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, 
    G__10953);
  };
  var G__11374__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11374 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11374__1.call(this, self__);
      case 2:
        return G__11374__2.call(this, self__, a);
      case 3:
        return G__11374__3.call(this, self__, a, b);
      case 4:
        return G__11374__4.call(this, self__, a, b, c);
      case 5:
        return G__11374__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11374__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11374__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11374__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11374__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11374__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11374__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11374__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11374__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11374__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11374__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11374__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11374__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11374__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11374__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11374__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11374__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11374__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11374.cljs$core$IFn$_invoke$arity$1 = G__11374__1;
  G__11374.cljs$core$IFn$_invoke$arity$2 = G__11374__2;
  G__11374.cljs$core$IFn$_invoke$arity$3 = G__11374__3;
  G__11374.cljs$core$IFn$_invoke$arity$4 = G__11374__4;
  G__11374.cljs$core$IFn$_invoke$arity$5 = G__11374__5;
  G__11374.cljs$core$IFn$_invoke$arity$6 = G__11374__6;
  G__11374.cljs$core$IFn$_invoke$arity$7 = G__11374__7;
  G__11374.cljs$core$IFn$_invoke$arity$8 = G__11374__8;
  G__11374.cljs$core$IFn$_invoke$arity$9 = G__11374__9;
  G__11374.cljs$core$IFn$_invoke$arity$10 = G__11374__10;
  G__11374.cljs$core$IFn$_invoke$arity$11 = G__11374__11;
  G__11374.cljs$core$IFn$_invoke$arity$12 = G__11374__12;
  G__11374.cljs$core$IFn$_invoke$arity$13 = G__11374__13;
  G__11374.cljs$core$IFn$_invoke$arity$14 = G__11374__14;
  G__11374.cljs$core$IFn$_invoke$arity$15 = G__11374__15;
  G__11374.cljs$core$IFn$_invoke$arity$16 = G__11374__16;
  G__11374.cljs$core$IFn$_invoke$arity$17 = G__11374__17;
  G__11374.cljs$core$IFn$_invoke$arity$18 = G__11374__18;
  G__11374.cljs$core$IFn$_invoke$arity$19 = G__11374__19;
  G__11374.cljs$core$IFn$_invoke$arity$20 = G__11374__20;
  G__11374.cljs$core$IFn$_invoke$arity$21 = G__11374__21;
  G__11374.cljs$core$IFn$_invoke$arity$22 = G__11374__22;
  return G__11374;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args10526) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10526)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10954 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10954) : self__.dispatch_fn.call(null, G__10954);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10955 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10955) : target_fn.call(null, G__10955);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10956 = a;
    var G__10957 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10956, G__10957) : self__.dispatch_fn.call(null, G__10956, G__10957);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10958 = a;
  var G__10959 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10958, G__10959) : target_fn.call(null, G__10958, G__10959);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10960 = a;
    var G__10961 = b;
    var G__10962 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10960, G__10961, G__10962) : self__.dispatch_fn.call(null, G__10960, G__10961, G__10962);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10963 = a;
  var G__10964 = b;
  var G__10965 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10963, G__10964, G__10965) : target_fn.call(null, G__10963, G__10964, G__10965);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10966 = a;
    var G__10967 = b;
    var G__10968 = c;
    var G__10969 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10966, G__10967, G__10968, G__10969) : self__.dispatch_fn.call(null, G__10966, G__10967, G__10968, G__10969);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10970 = a;
  var G__10971 = b;
  var G__10972 = c;
  var G__10973 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10970, G__10971, G__10972, G__10973) : target_fn.call(null, G__10970, G__10971, G__10972, G__10973);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10974 = a;
    var G__10975 = b;
    var G__10976 = c;
    var G__10977 = d;
    var G__10978 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10974, G__10975, G__10976, G__10977, G__10978) : self__.dispatch_fn.call(null, G__10974, G__10975, G__10976, G__10977, G__10978);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10979 = a;
  var G__10980 = b;
  var G__10981 = c;
  var G__10982 = d;
  var G__10983 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10979, G__10980, G__10981, G__10982, G__10983) : target_fn.call(null, G__10979, G__10980, G__10981, G__10982, G__10983);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10984 = a;
    var G__10985 = b;
    var G__10986 = c;
    var G__10987 = d;
    var G__10988 = e;
    var G__10989 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10984, G__10985, G__10986, G__10987, G__10988, G__10989) : self__.dispatch_fn.call(null, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10990 = a;
  var G__10991 = b;
  var G__10992 = c;
  var G__10993 = d;
  var G__10994 = e;
  var G__10995 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10990, G__10991, G__10992, G__10993, G__10994, G__10995) : target_fn.call(null, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10996 = a;
    var G__10997 = b;
    var G__10998 = c;
    var G__10999 = d;
    var G__11000 = e;
    var G__11001 = f;
    var G__11002 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002) : self__.dispatch_fn.call(null, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11003 = a;
  var G__11004 = b;
  var G__11005 = c;
  var G__11006 = d;
  var G__11007 = e;
  var G__11008 = f;
  var G__11009 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009) : target_fn.call(null, G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11010 = a;
    var G__11011 = b;
    var G__11012 = c;
    var G__11013 = d;
    var G__11014 = e;
    var G__11015 = f;
    var G__11016 = g;
    var G__11017 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017) : self__.dispatch_fn.call(null, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11018 = a;
  var G__11019 = b;
  var G__11020 = c;
  var G__11021 = d;
  var G__11022 = e;
  var G__11023 = f;
  var G__11024 = g;
  var G__11025 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11018, G__11019, G__11020, G__11021, G__11022, G__11023, G__11024, G__11025) : target_fn.call(null, G__11018, G__11019, G__11020, G__11021, G__11022, G__11023, G__11024, G__11025);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11026 = a;
    var G__11027 = b;
    var G__11028 = c;
    var G__11029 = d;
    var G__11030 = e;
    var G__11031 = f;
    var G__11032 = g;
    var G__11033 = h;
    var G__11034 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034) : self__.dispatch_fn.call(null, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11035 = a;
  var G__11036 = b;
  var G__11037 = c;
  var G__11038 = d;
  var G__11039 = e;
  var G__11040 = f;
  var G__11041 = g;
  var G__11042 = h;
  var G__11043 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043) : target_fn.call(null, G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11044 = a;
    var G__11045 = b;
    var G__11046 = c;
    var G__11047 = d;
    var G__11048 = e;
    var G__11049 = f;
    var G__11050 = g;
    var G__11051 = h;
    var G__11052 = i;
    var G__11053 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052, G__11053) : self__.dispatch_fn.call(null, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052, G__11053);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11054 = a;
  var G__11055 = b;
  var G__11056 = c;
  var G__11057 = d;
  var G__11058 = e;
  var G__11059 = f;
  var G__11060 = g;
  var G__11061 = h;
  var G__11062 = i;
  var G__11063 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11054, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060, G__11061, G__11062, G__11063) : target_fn.call(null, G__11054, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060, G__11061, G__11062, G__11063);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11064 = a;
    var G__11065 = b;
    var G__11066 = c;
    var G__11067 = d;
    var G__11068 = e;
    var G__11069 = f;
    var G__11070 = g;
    var G__11071 = h;
    var G__11072 = i;
    var G__11073 = j;
    var G__11074 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074) : self__.dispatch_fn.call(null, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11075 = a;
  var G__11076 = b;
  var G__11077 = c;
  var G__11078 = d;
  var G__11079 = e;
  var G__11080 = f;
  var G__11081 = g;
  var G__11082 = h;
  var G__11083 = i;
  var G__11084 = j;
  var G__11085 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085) : target_fn.call(null, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11086 = a;
    var G__11087 = b;
    var G__11088 = c;
    var G__11089 = d;
    var G__11090 = e;
    var G__11091 = f;
    var G__11092 = g;
    var G__11093 = h;
    var G__11094 = i;
    var G__11095 = j;
    var G__11096 = k;
    var G__11097 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11086, G__11087, G__11088, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097) : self__.dispatch_fn.call(null, G__11086, G__11087, G__11088, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11098 = a;
  var G__11099 = b;
  var G__11100 = c;
  var G__11101 = d;
  var G__11102 = e;
  var G__11103 = f;
  var G__11104 = g;
  var G__11105 = h;
  var G__11106 = i;
  var G__11107 = j;
  var G__11108 = k;
  var G__11109 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, G__11109) : target_fn.call(null, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, G__11109);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11110 = a;
    var G__11111 = b;
    var G__11112 = c;
    var G__11113 = d;
    var G__11114 = e;
    var G__11115 = f;
    var G__11116 = g;
    var G__11117 = h;
    var G__11118 = i;
    var G__11119 = j;
    var G__11120 = k;
    var G__11121 = l;
    var G__11122 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122) : self__.dispatch_fn.call(null, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11123 = a;
  var G__11124 = b;
  var G__11125 = c;
  var G__11126 = d;
  var G__11127 = e;
  var G__11128 = f;
  var G__11129 = g;
  var G__11130 = h;
  var G__11131 = i;
  var G__11132 = j;
  var G__11133 = k;
  var G__11134 = l;
  var G__11135 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135) : target_fn.call(null, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11136 = a;
    var G__11137 = b;
    var G__11138 = c;
    var G__11139 = d;
    var G__11140 = e;
    var G__11141 = f;
    var G__11142 = g;
    var G__11143 = h;
    var G__11144 = i;
    var G__11145 = j;
    var G__11146 = k;
    var G__11147 = l;
    var G__11148 = m;
    var G__11149 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149) : self__.dispatch_fn.call(null, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11150 = a;
  var G__11151 = b;
  var G__11152 = c;
  var G__11153 = d;
  var G__11154 = e;
  var G__11155 = f;
  var G__11156 = g;
  var G__11157 = h;
  var G__11158 = i;
  var G__11159 = j;
  var G__11160 = k;
  var G__11161 = l;
  var G__11162 = m;
  var G__11163 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163) : target_fn.call(null, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11164 = a;
    var G__11165 = b;
    var G__11166 = c;
    var G__11167 = d;
    var G__11168 = e;
    var G__11169 = f;
    var G__11170 = g;
    var G__11171 = h;
    var G__11172 = i;
    var G__11173 = j;
    var G__11174 = k;
    var G__11175 = l;
    var G__11176 = m;
    var G__11177 = n;
    var G__11178 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178) : self__.dispatch_fn.call(null, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11179 = a;
  var G__11180 = b;
  var G__11181 = c;
  var G__11182 = d;
  var G__11183 = e;
  var G__11184 = f;
  var G__11185 = g;
  var G__11186 = h;
  var G__11187 = i;
  var G__11188 = j;
  var G__11189 = k;
  var G__11190 = l;
  var G__11191 = m;
  var G__11192 = n;
  var G__11193 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11179, G__11180, G__11181, G__11182, G__11183, G__11184, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193) : target_fn.call(null, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11194 = a;
    var G__11195 = b;
    var G__11196 = c;
    var G__11197 = d;
    var G__11198 = e;
    var G__11199 = f;
    var G__11200 = g;
    var G__11201 = h;
    var G__11202 = i;
    var G__11203 = j;
    var G__11204 = k;
    var G__11205 = l;
    var G__11206 = m;
    var G__11207 = n;
    var G__11208 = o;
    var G__11209 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209) : self__.dispatch_fn.call(null, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11210 = a;
  var G__11211 = b;
  var G__11212 = c;
  var G__11213 = d;
  var G__11214 = e;
  var G__11215 = f;
  var G__11216 = g;
  var G__11217 = h;
  var G__11218 = i;
  var G__11219 = j;
  var G__11220 = k;
  var G__11221 = l;
  var G__11222 = m;
  var G__11223 = n;
  var G__11224 = o;
  var G__11225 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225) : target_fn.call(null, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11226 = a;
    var G__11227 = b;
    var G__11228 = c;
    var G__11229 = d;
    var G__11230 = e;
    var G__11231 = f;
    var G__11232 = g;
    var G__11233 = h;
    var G__11234 = i;
    var G__11235 = j;
    var G__11236 = k;
    var G__11237 = l;
    var G__11238 = m;
    var G__11239 = n;
    var G__11240 = o;
    var G__11241 = p;
    var G__11242 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242) : self__.dispatch_fn.call(null, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11243 = a;
  var G__11244 = b;
  var G__11245 = c;
  var G__11246 = d;
  var G__11247 = e;
  var G__11248 = f;
  var G__11249 = g;
  var G__11250 = h;
  var G__11251 = i;
  var G__11252 = j;
  var G__11253 = k;
  var G__11254 = l;
  var G__11255 = m;
  var G__11256 = n;
  var G__11257 = o;
  var G__11258 = p;
  var G__11259 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259) : target_fn.call(null, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11260 = a;
    var G__11261 = b;
    var G__11262 = c;
    var G__11263 = d;
    var G__11264 = e;
    var G__11265 = f;
    var G__11266 = g;
    var G__11267 = h;
    var G__11268 = i;
    var G__11269 = j;
    var G__11270 = k;
    var G__11271 = l;
    var G__11272 = m;
    var G__11273 = n;
    var G__11274 = o;
    var G__11275 = p;
    var G__11276 = q;
    var G__11277 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277) : self__.dispatch_fn.call(null, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11278 = a;
  var G__11279 = b;
  var G__11280 = c;
  var G__11281 = d;
  var G__11282 = e;
  var G__11283 = f;
  var G__11284 = g;
  var G__11285 = h;
  var G__11286 = i;
  var G__11287 = j;
  var G__11288 = k;
  var G__11289 = l;
  var G__11290 = m;
  var G__11291 = n;
  var G__11292 = o;
  var G__11293 = p;
  var G__11294 = q;
  var G__11295 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11278, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291, G__11292, G__11293, G__11294, G__11295) : target_fn.call(null, G__11278, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291, G__11292, G__11293, G__11294, G__11295);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11296 = a;
    var G__11297 = b;
    var G__11298 = c;
    var G__11299 = d;
    var G__11300 = e;
    var G__11301 = f;
    var G__11302 = g;
    var G__11303 = h;
    var G__11304 = i;
    var G__11305 = j;
    var G__11306 = k;
    var G__11307 = l;
    var G__11308 = m;
    var G__11309 = n;
    var G__11310 = o;
    var G__11311 = p;
    var G__11312 = q;
    var G__11313 = r;
    var G__11314 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11296, G__11297, G__11298, G__11299, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314) : self__.dispatch_fn.call(null, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, 
    G__11313, G__11314);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11315 = a;
  var G__11316 = b;
  var G__11317 = c;
  var G__11318 = d;
  var G__11319 = e;
  var G__11320 = f;
  var G__11321 = g;
  var G__11322 = h;
  var G__11323 = i;
  var G__11324 = j;
  var G__11325 = k;
  var G__11326 = l;
  var G__11327 = m;
  var G__11328 = n;
  var G__11329 = o;
  var G__11330 = p;
  var G__11331 = q;
  var G__11332 = r;
  var G__11333 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333) : target_fn.call(null, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11334 = a;
    var G__11335 = b;
    var G__11336 = c;
    var G__11337 = d;
    var G__11338 = e;
    var G__11339 = f;
    var G__11340 = g;
    var G__11341 = h;
    var G__11342 = i;
    var G__11343 = j;
    var G__11344 = k;
    var G__11345 = l;
    var G__11346 = m;
    var G__11347 = n;
    var G__11348 = o;
    var G__11349 = p;
    var G__11350 = q;
    var G__11351 = r;
    var G__11352 = s;
    var G__11353 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353) : self__.dispatch_fn.call(null, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, 
    G__11350, G__11351, G__11352, G__11353);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11354 = a;
  var G__11355 = b;
  var G__11356 = c;
  var G__11357 = d;
  var G__11358 = e;
  var G__11359 = f;
  var G__11360 = g;
  var G__11361 = h;
  var G__11362 = i;
  var G__11363 = j;
  var G__11364 = k;
  var G__11365 = l;
  var G__11366 = m;
  var G__11367 = n;
  var G__11368 = o;
  var G__11369 = p;
  var G__11370 = q;
  var G__11371 = r;
  var G__11372 = s;
  var G__11373 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373) : target_fn.call(null, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, 
  G__11373);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11375 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11375);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
  return cljs.core._write(writer__4346__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__11380 = msg;
      return Error(G__11380);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11385 = x;
      var G__11386 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11385, G__11386) : pred.call(null, G__11385, G__11386);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11387 = y;
        var G__11388 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11387, G__11388) : pred.call(null, G__11387, G__11388);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("tic_tac_toe.game");
goog.require("cljs.core");
tic_tac_toe.game.blank_board = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "e", 
"e", 1381269198), new cljs.core.Keyword(null, "e", "e", 1381269198)], null);
tic_tac_toe.game.poses = cljs.core.range.call(null, 9);
tic_tac_toe.game.available_squares = function available_squares(board) {
  return cljs.core.filter.call(null, function(p1__5813_SHARP_) {
    return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "e", "e", 1381269198), board.call(null, p1__5813_SHARP_));
  }, tic_tac_toe.game.poses);
};
tic_tac_toe.game.zip = function zip(rest) {
  return cljs.core.apply.call(null, cljs.core.map, cljs.core.vector, rest);
};
tic_tac_toe.game.place_piece = function place_piece(board, piece, pos) {
  return cljs.core.assoc.call(null, board, pos, piece);
};
tic_tac_toe.game.winning_partitions = function winning_partitions(board) {
  var rows = cljs.core.partition.call(null, 3, board);
  var cols = tic_tac_toe.game.zip.call(null, rows);
  var diagonals = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.concat, cljs.core.partition.call(null, 1, 4, board)), cljs.core.apply.call(null, cljs.core.concat, cljs.core.take.call(null, 3, cljs.core.partition.call(null, 1, 2, cljs.core.drop.call(null, 2, board))))], null);
  return cljs.core.concat.call(null, rows, cols, diagonals);
};
tic_tac_toe.game.player_has_won = function player_has_won(player, partitions) {
  return cljs.core.some.call(null, function(partition) {
    return cljs.core.every_QMARK_.call(null, function(p1__5814_SHARP_) {
      return cljs.core._EQ_.call(null, player, p1__5814_SHARP_);
    }, partition);
  }, partitions);
};
tic_tac_toe.game.get_game_state = function get_game_state(board) {
  var partitions = tic_tac_toe.game.winning_partitions.call(null, board);
  if (cljs.core.truth_(tic_tac_toe.game.player_has_won.call(null, new cljs.core.Keyword(null, "x", "x", 2099068185), partitions))) {
    return new cljs.core.Keyword(null, "x", "x", 2099068185);
  } else {
    if (cljs.core.truth_(tic_tac_toe.game.player_has_won.call(null, new cljs.core.Keyword(null, "o", "o", -1350007228), partitions))) {
      return new cljs.core.Keyword(null, "o", "o", -1350007228);
    } else {
      if (cljs.core.empty_QMARK_.call(null, tic_tac_toe.game.available_squares.call(null, board))) {
        return new cljs.core.Keyword(null, "draw", "draw", 1358331674);
      } else {
        return new cljs.core.Keyword(null, "ongoing", "ongoing", -30673877);
      }
    }
  }
};
tic_tac_toe.game.other_player = function other_player(who) {
  if (cljs.core._EQ_.call(null, who, new cljs.core.Keyword(null, "x", "x", 2099068185))) {
    return new cljs.core.Keyword(null, "o", "o", -1350007228);
  } else {
    return new cljs.core.Keyword(null, "x", "x", 2099068185);
  }
};
tic_tac_toe.game.score_board = function score_board(board, who) {
  var pred__5818 = cljs.core._EQ_;
  var expr__5819 = tic_tac_toe.game.get_game_state.call(null, board);
  if (cljs.core.truth_(pred__5818.call(null, who, expr__5819))) {
    return 100;
  } else {
    if (cljs.core.truth_(pred__5818.call(null, tic_tac_toe.game.other_player.call(null, who), expr__5819))) {
      return-100;
    } else {
      if (cljs.core.truth_(pred__5818.call(null, new cljs.core.Keyword(null, "draw", "draw", 1358331674), expr__5819))) {
        return 0;
      } else {
        if (cljs.core.truth_(pred__5818.call(null, new cljs.core.Keyword(null, "ongoing", "ongoing", -30673877), expr__5819))) {
          var other_players_move = tic_tac_toe.game.choose_move.call(null, board, tic_tac_toe.game.other_player.call(null, who));
          var score = cljs.core.second.call(null, other_players_move);
          return-1 * score;
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__5819)].join(""));
        }
      }
    }
  }
};
tic_tac_toe.game.score_move = function score_move(board, who, place) {
  var new_board = tic_tac_toe.game.place_piece.call(null, board, who, place);
  var score = tic_tac_toe.game.score_board.call(null, new_board, who);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [place, score], null);
};
tic_tac_toe.game.choose_move = function choose_move(board, who) {
  var open_spaces = tic_tac_toe.game.available_squares.call(null, board);
  var weighted_moves = cljs.core.map.call(null, function(open_spaces) {
    return function(p1__5821_SHARP_) {
      return tic_tac_toe.game.score_move.call(null, board, who, p1__5821_SHARP_);
    };
  }(open_spaces), open_spaces);
  var best_move = cljs.core.first.call(null, cljs.core.sort_by.call(null, cljs.core.second, cljs.core._GT_, weighted_moves));
  return best_move;
};
tic_tac_toe.game.choose_move = cljs.core.memoize.call(null, tic_tac_toe.game.choose_move);
tic_tac_toe.game.choose_really_good_move = function choose_really_good_move(board, who) {
  var best_score = tic_tac_toe.game.choose_move.call(null, board, who);
  var temp__4124__auto__ = cljs.core._EQ_.call(null, 100, cljs.core.second.call(null, best_score));
  if (temp__4124__auto__) {
    var score = temp__4124__auto__;
    return cljs.core.first.call(null, best_score);
  } else {
    return cljs.core.first.call(null, tic_tac_toe.game.choose_move.call(null, board, tic_tac_toe.game.other_player.call(null, who)));
  }
};
tic_tac_toe.game.upgraded_rgm = cljs.core.memoize.call(null, tic_tac_toe.game.choose_really_good_move);
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return!goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return(prefix + eventType).toLowerCase();
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0;i < els.length;i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__5902 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__5903 = cljs.core.next.call(null, coll__$1);
        sb = G__5902;
        coll__$1 = G__5903;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__5904 = sb;
        var G__5905 = coll__$2;
        sb = G__5904;
        coll__$1 = G__5905;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__5906 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__5906;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__5910 = cljs.core._EQ_;
    var expr__5911 = limit;
    if (cljs.core.truth_(pred__5910.call(null, 1, expr__5911))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__5910.call(null, 2, expr__5911))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__5913 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__5914 = limit__$1 - 1;
            var G__5915 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__5913;
            limit__$1 = G__5914;
            parts = G__5915;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__5916 = index - 1;
        index = G__5916;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___5917 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___5917)) {
        var replacement_5918 = temp__4124__auto___5917;
        buffer.append([cljs.core.str(replacement_5918)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__5919 = index + 1;
      index = G__5919;
      continue;
    }
    break;
  }
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return[cljs.core.str(x)].join("");
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", -1170142052);
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", -1170142052));
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_5454 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_5454;
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name)), cljs.core.str('\x3d"'), cljs.core.str(hiccups.runtime.escape_html.call(null, value)), cljs.core.str('"')].join("");
};
hiccups.runtime.render_attribute = function render_attribute(p__5455) {
  var vec__5457 = p__5455;
  var name = cljs.core.nth.call(null, vec__5457, 0, null);
  var value = cljs.core.nth.call(null, vec__5457, 1, null);
  if (value === true) {
    if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name))].join("");
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      return hiccups.runtime.xml_attribute.call(null, name, value);
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function normalize_element(p__5458) {
  var vec__5461 = p__5458;
  var tag = cljs.core.nth.call(null, vec__5461, 0, null);
  var content = cljs.core.nthnext.call(null, vec__5461, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw[cljs.core.str(tag), cljs.core.str(" is not a valid tag name")].join("");
  } else {
  }
  var vec__5462 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__5462, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__5462, 1, null);
  var id = cljs.core.nth.call(null, vec__5462, 2, null);
  var class$ = cljs.core.nth.call(null, vec__5462, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__5464 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__5464, 0, null);
  var attrs = cljs.core.nth.call(null, vec__5464, 1, null);
  var content = cljs.core.nth.call(null, vec__5464, 2, null);
  if (cljs.core.truth_(function() {
    var or__3758__auto__ = content;
    if (cljs.core.truth_(or__3758__auto__)) {
      return or__3758__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return[cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs)), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, content)), cljs.core.str("\x3c/"), cljs.core.str(tag), cljs.core.str("\x3e")].join("");
  } else {
    return[cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs)), cljs.core.str(hiccups.runtime.end_tag.call(null))].join("");
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x));
    } else {
      return hiccups.runtime.as_str.call(null, x);
    }
  }
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div_5922 = document.createElement("div");
var test_html_5923 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_5922.innerHTML = test_html_5923;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_5922.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_5922.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_5922.getElementsByTagName("link").length, 0);
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS", false);
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return{"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = !goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS && goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var pos;
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    var box = goog.style.getBoundingClientRect_(el);
    pos = new goog.math.Coordinate(box.left, box.top);
  } else {
    var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
    var pageCoord = goog.style.getPageOffset(el);
    pos = new goog.math.Coordinate(pageCoord.x - scrollCoord.x, pageCoord.y - scrollCoord.y);
  }
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12)) {
    return goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
  } else {
    return pos;
  }
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var be = (el);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && be.getBrowserEvent().targetTouches) {
        targetEvent = be.getBrowserEvent().targetTouches[0];
      }
    }
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.style");
goog.require("clojure.string");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_5445 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_5446 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_5447 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", -1987822328), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_5447, opt_wrapper_5445, table_section_wrapper_5446, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, 
cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_5445, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_5446, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_5446, cell_wrapper_5447, table_section_wrapper_5446, table_section_wrapper_5446]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3746__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3746__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3746__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? div.childNodes : cljs.core.PersistentVector.EMPTY;
  var seq__5452 = cljs.core.seq.call(null, tbody);
  var chunk__5453 = null;
  var count__5454 = 0;
  var i__5455 = 0;
  while (true) {
    if (i__5455 < count__5454) {
      var child = cljs.core._nth.call(null, chunk__5453, i__5455);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__5456 = seq__5452;
      var G__5457 = chunk__5453;
      var G__5458 = count__5454;
      var G__5459 = i__5455 + 1;
      seq__5452 = G__5456;
      chunk__5453 = G__5457;
      count__5454 = G__5458;
      i__5455 = G__5459;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5452);
      if (temp__4126__auto__) {
        var seq__5452__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5452__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first.call(null, seq__5452__$1);
          var G__5460 = cljs.core.chunk_rest.call(null, seq__5452__$1);
          var G__5461 = c__4545__auto__;
          var G__5462 = cljs.core.count.call(null, c__4545__auto__);
          var G__5463 = 0;
          seq__5452 = G__5460;
          chunk__5453 = G__5461;
          count__5454 = G__5462;
          i__5455 = G__5463;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__5452__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__5464 = cljs.core.next.call(null, seq__5452__$1);
          var G__5465 = null;
          var G__5466 = 0;
          var G__5467 = 0;
          seq__5452 = G__5464;
          chunk__5453 = G__5465;
          count__5454 = G__5466;
          i__5455 = G__5467;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__5469 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__5469, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__5469, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__5469, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str(start_wrap), cljs.core.str(html__$1), cljs.core.str(end_wrap)].join("");
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__5470 = wrapper.lastChild;
        var G__5471 = level - 1;
        wrapper = G__5470;
        level = G__5471;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3746__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if (and__3746__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__3746__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj5473 = {};
  return obj5473;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__3746__auto__ = content;
    if (and__3746__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4402__auto__ = content == null ? null : content;
    return function() {
      var or__3758__auto__ = domina.nodes[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.nodes["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__3746__auto__ = nodeseq;
    if (and__3746__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4402__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3758__auto__ = domina.single_node[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.single_node["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__3746__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined);
      } else {
        return and__3746__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      var G__5474__i = 0, G__5474__a = new Array(arguments.length - 0);
      while (G__5474__i < G__5474__a.length) {
        G__5474__a[G__5474__i] = arguments[G__5474__i + 0];
        ++G__5474__i;
      }
      mesg = new cljs.core.IndexedSeq(G__5474__a, 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__5475) {
    var mesg = cljs.core.seq(arglist__5475);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      var G__5476__i = 0, G__5476__a = new Array(arguments.length - 0);
      while (G__5476__i < G__5476__a.length) {
        G__5476__a[G__5476__i] = arguments[G__5476__i + 0];
        ++G__5476__i;
      }
      mesg = new cljs.core.IndexedSeq(G__5476__a, 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__5477) {
    var mesg = cljs.core.seq(arglist__5477);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      var G__5478__i = 0, G__5478__a = new Array(arguments.length - 0);
      while (G__5478__i < G__5478__a.length) {
        G__5478__a[G__5478__i] = arguments[G__5478__i + 0];
        ++G__5478__i;
      }
      contents = new cljs.core.IndexedSeq(G__5478__a, 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__5479) {
    var contents = cljs.core.seq(arglist__5479);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__5480_SHARP_) {
    return p1__5480_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__5481_SHARP_, p2__5482_SHARP_) {
    return goog.dom.insertChildAt(p1__5481_SHARP_, p2__5482_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__5484_SHARP_, p2__5483_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__5483_SHARP_, p1__5484_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__5486_SHARP_, p2__5485_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__5485_SHARP_, p1__5486_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__5488_SHARP_, p2__5487_SHARP_) {
    return goog.dom.replaceNode(p2__5487_SHARP_, p1__5488_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__5493_5497 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__5494_5498 = null;
    var count__5495_5499 = 0;
    var i__5496_5500 = 0;
    while (true) {
      if (i__5496_5500 < count__5495_5499) {
        var n_5501 = cljs.core._nth.call(null, chunk__5494_5498, i__5496_5500);
        goog.style.setStyle(n_5501, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__5502 = seq__5493_5497;
        var G__5503 = chunk__5494_5498;
        var G__5504 = count__5495_5499;
        var G__5505 = i__5496_5500 + 1;
        seq__5493_5497 = G__5502;
        chunk__5494_5498 = G__5503;
        count__5495_5499 = G__5504;
        i__5496_5500 = G__5505;
        continue;
      } else {
        var temp__4126__auto___5506 = cljs.core.seq.call(null, seq__5493_5497);
        if (temp__4126__auto___5506) {
          var seq__5493_5507__$1 = temp__4126__auto___5506;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__5493_5507__$1)) {
            var c__4545__auto___5508 = cljs.core.chunk_first.call(null, seq__5493_5507__$1);
            var G__5509 = cljs.core.chunk_rest.call(null, seq__5493_5507__$1);
            var G__5510 = c__4545__auto___5508;
            var G__5511 = cljs.core.count.call(null, c__4545__auto___5508);
            var G__5512 = 0;
            seq__5493_5497 = G__5509;
            chunk__5494_5498 = G__5510;
            count__5495_5499 = G__5511;
            i__5496_5500 = G__5512;
            continue;
          } else {
            var n_5513 = cljs.core.first.call(null, seq__5493_5507__$1);
            goog.style.setStyle(n_5513, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__5514 = cljs.core.next.call(null, seq__5493_5507__$1);
            var G__5515 = null;
            var G__5516 = 0;
            var G__5517 = 0;
            seq__5493_5497 = G__5514;
            chunk__5494_5498 = G__5515;
            count__5495_5499 = G__5516;
            i__5496_5500 = G__5517;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      var G__5518__i = 0, G__5518__a = new Array(arguments.length - 2);
      while (G__5518__i < G__5518__a.length) {
        G__5518__a[G__5518__i] = arguments[G__5518__i + 2];
        ++G__5518__i;
      }
      value = new cljs.core.IndexedSeq(G__5518__a, 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__5519) {
    var content = cljs.core.first(arglist__5519);
    arglist__5519 = cljs.core.next(arglist__5519);
    var name = cljs.core.first(arglist__5519);
    var value = cljs.core.rest(arglist__5519);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__5524_5528 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__5525_5529 = null;
    var count__5526_5530 = 0;
    var i__5527_5531 = 0;
    while (true) {
      if (i__5527_5531 < count__5526_5530) {
        var n_5532 = cljs.core._nth.call(null, chunk__5525_5529, i__5527_5531);
        n_5532.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__5533 = seq__5524_5528;
        var G__5534 = chunk__5525_5529;
        var G__5535 = count__5526_5530;
        var G__5536 = i__5527_5531 + 1;
        seq__5524_5528 = G__5533;
        chunk__5525_5529 = G__5534;
        count__5526_5530 = G__5535;
        i__5527_5531 = G__5536;
        continue;
      } else {
        var temp__4126__auto___5537 = cljs.core.seq.call(null, seq__5524_5528);
        if (temp__4126__auto___5537) {
          var seq__5524_5538__$1 = temp__4126__auto___5537;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__5524_5538__$1)) {
            var c__4545__auto___5539 = cljs.core.chunk_first.call(null, seq__5524_5538__$1);
            var G__5540 = cljs.core.chunk_rest.call(null, seq__5524_5538__$1);
            var G__5541 = c__4545__auto___5539;
            var G__5542 = cljs.core.count.call(null, c__4545__auto___5539);
            var G__5543 = 0;
            seq__5524_5528 = G__5540;
            chunk__5525_5529 = G__5541;
            count__5526_5530 = G__5542;
            i__5527_5531 = G__5543;
            continue;
          } else {
            var n_5544 = cljs.core.first.call(null, seq__5524_5538__$1);
            n_5544.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__5545 = cljs.core.next.call(null, seq__5524_5538__$1);
            var G__5546 = null;
            var G__5547 = 0;
            var G__5548 = 0;
            seq__5524_5528 = G__5545;
            chunk__5525_5529 = G__5546;
            count__5526_5530 = G__5547;
            i__5527_5531 = G__5548;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      var G__5549__i = 0, G__5549__a = new Array(arguments.length - 2);
      while (G__5549__i < G__5549__a.length) {
        G__5549__a[G__5549__i] = arguments[G__5549__i + 2];
        ++G__5549__i;
      }
      value = new cljs.core.IndexedSeq(G__5549__a, 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__5550) {
    var content = cljs.core.first(arglist__5550);
    arglist__5550 = cljs.core.next(arglist__5550);
    var name = cljs.core.first(arglist__5550);
    var value = cljs.core.rest(arglist__5550);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__5555_5559 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5556_5560 = null;
  var count__5557_5561 = 0;
  var i__5558_5562 = 0;
  while (true) {
    if (i__5558_5562 < count__5557_5561) {
      var n_5563 = cljs.core._nth.call(null, chunk__5556_5560, i__5558_5562);
      n_5563.removeAttribute(cljs.core.name.call(null, name));
      var G__5564 = seq__5555_5559;
      var G__5565 = chunk__5556_5560;
      var G__5566 = count__5557_5561;
      var G__5567 = i__5558_5562 + 1;
      seq__5555_5559 = G__5564;
      chunk__5556_5560 = G__5565;
      count__5557_5561 = G__5566;
      i__5558_5562 = G__5567;
      continue;
    } else {
      var temp__4126__auto___5568 = cljs.core.seq.call(null, seq__5555_5559);
      if (temp__4126__auto___5568) {
        var seq__5555_5569__$1 = temp__4126__auto___5568;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5555_5569__$1)) {
          var c__4545__auto___5570 = cljs.core.chunk_first.call(null, seq__5555_5569__$1);
          var G__5571 = cljs.core.chunk_rest.call(null, seq__5555_5569__$1);
          var G__5572 = c__4545__auto___5570;
          var G__5573 = cljs.core.count.call(null, c__4545__auto___5570);
          var G__5574 = 0;
          seq__5555_5559 = G__5571;
          chunk__5556_5560 = G__5572;
          count__5557_5561 = G__5573;
          i__5558_5562 = G__5574;
          continue;
        } else {
          var n_5575 = cljs.core.first.call(null, seq__5555_5569__$1);
          n_5575.removeAttribute(cljs.core.name.call(null, name));
          var G__5576 = cljs.core.next.call(null, seq__5555_5569__$1);
          var G__5577 = null;
          var G__5578 = 0;
          var G__5579 = 0;
          seq__5555_5559 = G__5576;
          chunk__5556_5560 = G__5577;
          count__5557_5561 = G__5578;
          i__5558_5562 = G__5579;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__5581 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__5581, 0, null);
    var v = cljs.core.nth.call(null, vec__5581, 1, null);
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = k;
      if (cljs.core.truth_(and__3746__auto__)) {
        return v;
      } else {
        return and__3746__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs__$1) {
    return function(p1__5582_SHARP_) {
      var attr = attrs__$1.item(p1__5582_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.call(null, attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__5589_5595 = cljs.core.seq.call(null, styles);
  var chunk__5590_5596 = null;
  var count__5591_5597 = 0;
  var i__5592_5598 = 0;
  while (true) {
    if (i__5592_5598 < count__5591_5597) {
      var vec__5593_5599 = cljs.core._nth.call(null, chunk__5590_5596, i__5592_5598);
      var name_5600 = cljs.core.nth.call(null, vec__5593_5599, 0, null);
      var value_5601 = cljs.core.nth.call(null, vec__5593_5599, 1, null);
      domina.set_style_BANG_.call(null, content, name_5600, value_5601);
      var G__5602 = seq__5589_5595;
      var G__5603 = chunk__5590_5596;
      var G__5604 = count__5591_5597;
      var G__5605 = i__5592_5598 + 1;
      seq__5589_5595 = G__5602;
      chunk__5590_5596 = G__5603;
      count__5591_5597 = G__5604;
      i__5592_5598 = G__5605;
      continue;
    } else {
      var temp__4126__auto___5606 = cljs.core.seq.call(null, seq__5589_5595);
      if (temp__4126__auto___5606) {
        var seq__5589_5607__$1 = temp__4126__auto___5606;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5589_5607__$1)) {
          var c__4545__auto___5608 = cljs.core.chunk_first.call(null, seq__5589_5607__$1);
          var G__5609 = cljs.core.chunk_rest.call(null, seq__5589_5607__$1);
          var G__5610 = c__4545__auto___5608;
          var G__5611 = cljs.core.count.call(null, c__4545__auto___5608);
          var G__5612 = 0;
          seq__5589_5595 = G__5609;
          chunk__5590_5596 = G__5610;
          count__5591_5597 = G__5611;
          i__5592_5598 = G__5612;
          continue;
        } else {
          var vec__5594_5613 = cljs.core.first.call(null, seq__5589_5607__$1);
          var name_5614 = cljs.core.nth.call(null, vec__5594_5613, 0, null);
          var value_5615 = cljs.core.nth.call(null, vec__5594_5613, 1, null);
          domina.set_style_BANG_.call(null, content, name_5614, value_5615);
          var G__5616 = cljs.core.next.call(null, seq__5589_5607__$1);
          var G__5617 = null;
          var G__5618 = 0;
          var G__5619 = 0;
          seq__5589_5595 = G__5616;
          chunk__5590_5596 = G__5617;
          count__5591_5597 = G__5618;
          i__5592_5598 = G__5619;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__5626_5632 = cljs.core.seq.call(null, attrs);
  var chunk__5627_5633 = null;
  var count__5628_5634 = 0;
  var i__5629_5635 = 0;
  while (true) {
    if (i__5629_5635 < count__5628_5634) {
      var vec__5630_5636 = cljs.core._nth.call(null, chunk__5627_5633, i__5629_5635);
      var name_5637 = cljs.core.nth.call(null, vec__5630_5636, 0, null);
      var value_5638 = cljs.core.nth.call(null, vec__5630_5636, 1, null);
      domina.set_attr_BANG_.call(null, content, name_5637, value_5638);
      var G__5639 = seq__5626_5632;
      var G__5640 = chunk__5627_5633;
      var G__5641 = count__5628_5634;
      var G__5642 = i__5629_5635 + 1;
      seq__5626_5632 = G__5639;
      chunk__5627_5633 = G__5640;
      count__5628_5634 = G__5641;
      i__5629_5635 = G__5642;
      continue;
    } else {
      var temp__4126__auto___5643 = cljs.core.seq.call(null, seq__5626_5632);
      if (temp__4126__auto___5643) {
        var seq__5626_5644__$1 = temp__4126__auto___5643;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5626_5644__$1)) {
          var c__4545__auto___5645 = cljs.core.chunk_first.call(null, seq__5626_5644__$1);
          var G__5646 = cljs.core.chunk_rest.call(null, seq__5626_5644__$1);
          var G__5647 = c__4545__auto___5645;
          var G__5648 = cljs.core.count.call(null, c__4545__auto___5645);
          var G__5649 = 0;
          seq__5626_5632 = G__5646;
          chunk__5627_5633 = G__5647;
          count__5628_5634 = G__5648;
          i__5629_5635 = G__5649;
          continue;
        } else {
          var vec__5631_5650 = cljs.core.first.call(null, seq__5626_5644__$1);
          var name_5651 = cljs.core.nth.call(null, vec__5631_5650, 0, null);
          var value_5652 = cljs.core.nth.call(null, vec__5631_5650, 1, null);
          domina.set_attr_BANG_.call(null, content, name_5651, value_5652);
          var G__5653 = cljs.core.next.call(null, seq__5626_5644__$1);
          var G__5654 = null;
          var G__5655 = 0;
          var G__5656 = 0;
          seq__5626_5632 = G__5653;
          chunk__5627_5633 = G__5654;
          count__5628_5634 = G__5655;
          i__5629_5635 = G__5656;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__5661_5665 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5662_5666 = null;
  var count__5663_5667 = 0;
  var i__5664_5668 = 0;
  while (true) {
    if (i__5664_5668 < count__5663_5667) {
      var node_5669 = cljs.core._nth.call(null, chunk__5662_5666, i__5664_5668);
      goog.dom.classes.add(node_5669, class$);
      var G__5670 = seq__5661_5665;
      var G__5671 = chunk__5662_5666;
      var G__5672 = count__5663_5667;
      var G__5673 = i__5664_5668 + 1;
      seq__5661_5665 = G__5670;
      chunk__5662_5666 = G__5671;
      count__5663_5667 = G__5672;
      i__5664_5668 = G__5673;
      continue;
    } else {
      var temp__4126__auto___5674 = cljs.core.seq.call(null, seq__5661_5665);
      if (temp__4126__auto___5674) {
        var seq__5661_5675__$1 = temp__4126__auto___5674;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5661_5675__$1)) {
          var c__4545__auto___5676 = cljs.core.chunk_first.call(null, seq__5661_5675__$1);
          var G__5677 = cljs.core.chunk_rest.call(null, seq__5661_5675__$1);
          var G__5678 = c__4545__auto___5676;
          var G__5679 = cljs.core.count.call(null, c__4545__auto___5676);
          var G__5680 = 0;
          seq__5661_5665 = G__5677;
          chunk__5662_5666 = G__5678;
          count__5663_5667 = G__5679;
          i__5664_5668 = G__5680;
          continue;
        } else {
          var node_5681 = cljs.core.first.call(null, seq__5661_5675__$1);
          goog.dom.classes.add(node_5681, class$);
          var G__5682 = cljs.core.next.call(null, seq__5661_5675__$1);
          var G__5683 = null;
          var G__5684 = 0;
          var G__5685 = 0;
          seq__5661_5665 = G__5682;
          chunk__5662_5666 = G__5683;
          count__5663_5667 = G__5684;
          i__5664_5668 = G__5685;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__5690_5694 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5691_5695 = null;
  var count__5692_5696 = 0;
  var i__5693_5697 = 0;
  while (true) {
    if (i__5693_5697 < count__5692_5696) {
      var node_5698 = cljs.core._nth.call(null, chunk__5691_5695, i__5693_5697);
      goog.dom.classes.remove(node_5698, class$);
      var G__5699 = seq__5690_5694;
      var G__5700 = chunk__5691_5695;
      var G__5701 = count__5692_5696;
      var G__5702 = i__5693_5697 + 1;
      seq__5690_5694 = G__5699;
      chunk__5691_5695 = G__5700;
      count__5692_5696 = G__5701;
      i__5693_5697 = G__5702;
      continue;
    } else {
      var temp__4126__auto___5703 = cljs.core.seq.call(null, seq__5690_5694);
      if (temp__4126__auto___5703) {
        var seq__5690_5704__$1 = temp__4126__auto___5703;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5690_5704__$1)) {
          var c__4545__auto___5705 = cljs.core.chunk_first.call(null, seq__5690_5704__$1);
          var G__5706 = cljs.core.chunk_rest.call(null, seq__5690_5704__$1);
          var G__5707 = c__4545__auto___5705;
          var G__5708 = cljs.core.count.call(null, c__4545__auto___5705);
          var G__5709 = 0;
          seq__5690_5694 = G__5706;
          chunk__5691_5695 = G__5707;
          count__5692_5696 = G__5708;
          i__5693_5697 = G__5709;
          continue;
        } else {
          var node_5710 = cljs.core.first.call(null, seq__5690_5704__$1);
          goog.dom.classes.remove(node_5710, class$);
          var G__5711 = cljs.core.next.call(null, seq__5690_5704__$1);
          var G__5712 = null;
          var G__5713 = 0;
          var G__5714 = 0;
          seq__5690_5694 = G__5711;
          chunk__5691_5695 = G__5712;
          count__5692_5696 = G__5713;
          i__5693_5697 = G__5714;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__5719_5723 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5720_5724 = null;
  var count__5721_5725 = 0;
  var i__5722_5726 = 0;
  while (true) {
    if (i__5722_5726 < count__5721_5725) {
      var node_5727 = cljs.core._nth.call(null, chunk__5720_5724, i__5722_5726);
      goog.dom.classes.toggle(node_5727, class$);
      var G__5728 = seq__5719_5723;
      var G__5729 = chunk__5720_5724;
      var G__5730 = count__5721_5725;
      var G__5731 = i__5722_5726 + 1;
      seq__5719_5723 = G__5728;
      chunk__5720_5724 = G__5729;
      count__5721_5725 = G__5730;
      i__5722_5726 = G__5731;
      continue;
    } else {
      var temp__4126__auto___5732 = cljs.core.seq.call(null, seq__5719_5723);
      if (temp__4126__auto___5732) {
        var seq__5719_5733__$1 = temp__4126__auto___5732;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5719_5733__$1)) {
          var c__4545__auto___5734 = cljs.core.chunk_first.call(null, seq__5719_5733__$1);
          var G__5735 = cljs.core.chunk_rest.call(null, seq__5719_5733__$1);
          var G__5736 = c__4545__auto___5734;
          var G__5737 = cljs.core.count.call(null, c__4545__auto___5734);
          var G__5738 = 0;
          seq__5719_5723 = G__5735;
          chunk__5720_5724 = G__5736;
          count__5721_5725 = G__5737;
          i__5722_5726 = G__5738;
          continue;
        } else {
          var node_5739 = cljs.core.first.call(null, seq__5719_5733__$1);
          goog.dom.classes.toggle(node_5739, class$);
          var G__5740 = cljs.core.next.call(null, seq__5719_5733__$1);
          var G__5741 = null;
          var G__5742 = 0;
          var G__5743 = 0;
          seq__5719_5723 = G__5740;
          chunk__5720_5724 = G__5741;
          count__5721_5725 = G__5742;
          i__5722_5726 = G__5743;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_5752__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__5748_5753 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5749_5754 = null;
  var count__5750_5755 = 0;
  var i__5751_5756 = 0;
  while (true) {
    if (i__5751_5756 < count__5750_5755) {
      var node_5757 = cljs.core._nth.call(null, chunk__5749_5754, i__5751_5756);
      goog.dom.classes.set(node_5757, classes_5752__$1);
      var G__5758 = seq__5748_5753;
      var G__5759 = chunk__5749_5754;
      var G__5760 = count__5750_5755;
      var G__5761 = i__5751_5756 + 1;
      seq__5748_5753 = G__5758;
      chunk__5749_5754 = G__5759;
      count__5750_5755 = G__5760;
      i__5751_5756 = G__5761;
      continue;
    } else {
      var temp__4126__auto___5762 = cljs.core.seq.call(null, seq__5748_5753);
      if (temp__4126__auto___5762) {
        var seq__5748_5763__$1 = temp__4126__auto___5762;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5748_5763__$1)) {
          var c__4545__auto___5764 = cljs.core.chunk_first.call(null, seq__5748_5763__$1);
          var G__5765 = cljs.core.chunk_rest.call(null, seq__5748_5763__$1);
          var G__5766 = c__4545__auto___5764;
          var G__5767 = cljs.core.count.call(null, c__4545__auto___5764);
          var G__5768 = 0;
          seq__5748_5753 = G__5765;
          chunk__5749_5754 = G__5766;
          count__5750_5755 = G__5767;
          i__5751_5756 = G__5768;
          continue;
        } else {
          var node_5769 = cljs.core.first.call(null, seq__5748_5763__$1);
          goog.dom.classes.set(node_5769, classes_5752__$1);
          var G__5770 = cljs.core.next.call(null, seq__5748_5763__$1);
          var G__5771 = null;
          var G__5772 = 0;
          var G__5773 = 0;
          seq__5748_5753 = G__5770;
          chunk__5749_5754 = G__5771;
          count__5750_5755 = G__5772;
          i__5751_5756 = G__5773;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__5778_5782 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5779_5783 = null;
  var count__5780_5784 = 0;
  var i__5781_5785 = 0;
  while (true) {
    if (i__5781_5785 < count__5780_5784) {
      var node_5786 = cljs.core._nth.call(null, chunk__5779_5783, i__5781_5785);
      goog.dom.setTextContent(node_5786, value);
      var G__5787 = seq__5778_5782;
      var G__5788 = chunk__5779_5783;
      var G__5789 = count__5780_5784;
      var G__5790 = i__5781_5785 + 1;
      seq__5778_5782 = G__5787;
      chunk__5779_5783 = G__5788;
      count__5780_5784 = G__5789;
      i__5781_5785 = G__5790;
      continue;
    } else {
      var temp__4126__auto___5791 = cljs.core.seq.call(null, seq__5778_5782);
      if (temp__4126__auto___5791) {
        var seq__5778_5792__$1 = temp__4126__auto___5791;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5778_5792__$1)) {
          var c__4545__auto___5793 = cljs.core.chunk_first.call(null, seq__5778_5792__$1);
          var G__5794 = cljs.core.chunk_rest.call(null, seq__5778_5792__$1);
          var G__5795 = c__4545__auto___5793;
          var G__5796 = cljs.core.count.call(null, c__4545__auto___5793);
          var G__5797 = 0;
          seq__5778_5782 = G__5794;
          chunk__5779_5783 = G__5795;
          count__5780_5784 = G__5796;
          i__5781_5785 = G__5797;
          continue;
        } else {
          var node_5798 = cljs.core.first.call(null, seq__5778_5792__$1);
          goog.dom.setTextContent(node_5798, value);
          var G__5799 = cljs.core.next.call(null, seq__5778_5792__$1);
          var G__5800 = null;
          var G__5801 = 0;
          var G__5802 = 0;
          seq__5778_5782 = G__5799;
          chunk__5779_5783 = G__5800;
          count__5780_5784 = G__5801;
          i__5781_5785 = G__5802;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__5807_5811 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__5808_5812 = null;
  var count__5809_5813 = 0;
  var i__5810_5814 = 0;
  while (true) {
    if (i__5810_5814 < count__5809_5813) {
      var node_5815 = cljs.core._nth.call(null, chunk__5808_5812, i__5810_5814);
      goog.dom.forms.setValue(node_5815, value);
      var G__5816 = seq__5807_5811;
      var G__5817 = chunk__5808_5812;
      var G__5818 = count__5809_5813;
      var G__5819 = i__5810_5814 + 1;
      seq__5807_5811 = G__5816;
      chunk__5808_5812 = G__5817;
      count__5809_5813 = G__5818;
      i__5810_5814 = G__5819;
      continue;
    } else {
      var temp__4126__auto___5820 = cljs.core.seq.call(null, seq__5807_5811);
      if (temp__4126__auto___5820) {
        var seq__5807_5821__$1 = temp__4126__auto___5820;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5807_5821__$1)) {
          var c__4545__auto___5822 = cljs.core.chunk_first.call(null, seq__5807_5821__$1);
          var G__5823 = cljs.core.chunk_rest.call(null, seq__5807_5821__$1);
          var G__5824 = c__4545__auto___5822;
          var G__5825 = cljs.core.count.call(null, c__4545__auto___5822);
          var G__5826 = 0;
          seq__5807_5811 = G__5823;
          chunk__5808_5812 = G__5824;
          count__5809_5813 = G__5825;
          i__5810_5814 = G__5826;
          continue;
        } else {
          var node_5827 = cljs.core.first.call(null, seq__5807_5821__$1);
          goog.dom.forms.setValue(node_5827, value);
          var G__5828 = cljs.core.next.call(null, seq__5807_5821__$1);
          var G__5829 = null;
          var G__5830 = 0;
          var G__5831 = 0;
          seq__5807_5811 = G__5828;
          chunk__5808_5812 = G__5829;
          count__5809_5813 = G__5830;
          i__5810_5814 = G__5831;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__3746__auto__ = allows_inner_html_QMARK_;
    if (and__3746__auto__) {
      var and__3746__auto____$1 = function() {
        var or__3758__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__3758__auto__)) {
          return or__3758__auto__;
        } else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__3746__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__3746__auto____$1;
      }
    } else {
      return and__3746__auto__;
    }
  }())) {
    var value_5842 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__5838_5843 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__5839_5844 = null;
      var count__5840_5845 = 0;
      var i__5841_5846 = 0;
      while (true) {
        if (i__5841_5846 < count__5840_5845) {
          var node_5847 = cljs.core._nth.call(null, chunk__5839_5844, i__5841_5846);
          node_5847.innerHTML = value_5842;
          var G__5848 = seq__5838_5843;
          var G__5849 = chunk__5839_5844;
          var G__5850 = count__5840_5845;
          var G__5851 = i__5841_5846 + 1;
          seq__5838_5843 = G__5848;
          chunk__5839_5844 = G__5849;
          count__5840_5845 = G__5850;
          i__5841_5846 = G__5851;
          continue;
        } else {
          var temp__4126__auto___5852 = cljs.core.seq.call(null, seq__5838_5843);
          if (temp__4126__auto___5852) {
            var seq__5838_5853__$1 = temp__4126__auto___5852;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__5838_5853__$1)) {
              var c__4545__auto___5854 = cljs.core.chunk_first.call(null, seq__5838_5853__$1);
              var G__5855 = cljs.core.chunk_rest.call(null, seq__5838_5853__$1);
              var G__5856 = c__4545__auto___5854;
              var G__5857 = cljs.core.count.call(null, c__4545__auto___5854);
              var G__5858 = 0;
              seq__5838_5843 = G__5855;
              chunk__5839_5844 = G__5856;
              count__5840_5845 = G__5857;
              i__5841_5846 = G__5858;
              continue;
            } else {
              var node_5859 = cljs.core.first.call(null, seq__5838_5853__$1);
              node_5859.innerHTML = value_5842;
              var G__5860 = cljs.core.next.call(null, seq__5838_5853__$1);
              var G__5861 = null;
              var G__5862 = 0;
              var G__5863 = 0;
              seq__5838_5843 = G__5860;
              chunk__5839_5844 = G__5861;
              count__5840_5845 = G__5862;
              i__5841_5846 = G__5863;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e5837) {
      if (e5837 instanceof Error) {
        var e_5864 = e5837;
        domina.replace_children_BANG_.call(null, content, value_5842);
      } else {
        throw e5837;
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if (cljs.core.truth_(function() {
      var and__3746__auto__ = bubble;
      if (cljs.core.truth_(and__3746__auto__)) {
        return value == null;
      } else {
        return and__3746__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node.call(null, node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.call(null, parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3758__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__3758__auto__)) {
      return or__3758__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__5871_5875 = cljs.core.seq.call(null, children);
    var chunk__5872_5876 = null;
    var count__5873_5877 = 0;
    var i__5874_5878 = 0;
    while (true) {
      if (i__5874_5878 < count__5873_5877) {
        var child_5879 = cljs.core._nth.call(null, chunk__5872_5876, i__5874_5878);
        frag.appendChild(child_5879);
        var G__5880 = seq__5871_5875;
        var G__5881 = chunk__5872_5876;
        var G__5882 = count__5873_5877;
        var G__5883 = i__5874_5878 + 1;
        seq__5871_5875 = G__5880;
        chunk__5872_5876 = G__5881;
        count__5873_5877 = G__5882;
        i__5874_5878 = G__5883;
        continue;
      } else {
        var temp__4126__auto___5884 = cljs.core.seq.call(null, seq__5871_5875);
        if (temp__4126__auto___5884) {
          var seq__5871_5885__$1 = temp__4126__auto___5884;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__5871_5885__$1)) {
            var c__4545__auto___5886 = cljs.core.chunk_first.call(null, seq__5871_5885__$1);
            var G__5887 = cljs.core.chunk_rest.call(null, seq__5871_5885__$1);
            var G__5888 = c__4545__auto___5886;
            var G__5889 = cljs.core.count.call(null, c__4545__auto___5886);
            var G__5890 = 0;
            seq__5871_5875 = G__5887;
            chunk__5872_5876 = G__5888;
            count__5873_5877 = G__5889;
            i__5874_5878 = G__5890;
            continue;
          } else {
            var child_5891 = cljs.core.first.call(null, seq__5871_5885__$1);
            frag.appendChild(child_5891);
            var G__5892 = cljs.core.next.call(null, seq__5871_5885__$1);
            var G__5893 = null;
            var G__5894 = 0;
            var G__5895 = 0;
            seq__5871_5875 = G__5892;
            chunk__5872_5876 = G__5893;
            count__5873_5877 = G__5894;
            i__5874_5878 = G__5895;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__5865_SHARP_, p2__5866_SHARP_) {
        return f.call(null, p1__5865_SHARP_, p2__5866_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3746__auto__ = obj;
  if (cljs.core.truth_(and__3746__auto__)) {
    var and__3746__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__3746__auto____$1) {
      return obj.length;
    } else {
      return and__3746__auto____$1;
    }
  } else {
    return and__3746__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__5897 = list_thing;
      if (G__5897) {
        var bit__4439__auto__ = G__5897.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4439__auto__ || G__5897.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__5897.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5897);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5897);
      }
    }()) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__5898 = content;
      if (G__5898) {
        var bit__4439__auto__ = G__5898.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4439__auto__ || G__5898.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__5898.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5898);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5898);
      }
    }()) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__5899 = content;
      if (G__5899) {
        var bit__4439__auto__ = G__5899.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4439__auto__ || G__5899.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__5899.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5899);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5899);
      }
    }()) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        return content;
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = function() {
  var obj6892 = {};
  return obj6892;
}();
domina.events.prevent_default = function prevent_default(evt) {
  if (function() {
    var and__3746__auto__ = evt;
    if (and__3746__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt);
  } else {
    var x__4402__auto__ = evt == null ? null : evt;
    return function() {
      var or__3758__auto__ = domina.events.prevent_default[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.events.prevent_default["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if (function() {
    var and__3746__auto__ = evt;
    if (and__3746__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt);
  } else {
    var x__4402__auto__ = evt == null ? null : evt;
    return function() {
      var or__3758__auto__ = domina.events.stop_propagation[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.events.stop_propagation["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.target = function target(evt) {
  if (function() {
    var and__3746__auto__ = evt;
    if (and__3746__auto__) {
      return evt.domina$events$Event$target$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt);
  } else {
    var x__4402__auto__ = evt == null ? null : evt;
    return function() {
      var or__3758__auto__ = domina.events.target[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.events.target["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.current_target = function current_target(evt) {
  if (function() {
    var and__3746__auto__ = evt;
    if (and__3746__auto__) {
      return evt.domina$events$Event$current_target$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt);
  } else {
    var x__4402__auto__ = evt == null ? null : evt;
    return function() {
      var or__3758__auto__ = domina.events.current_target[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.events.current_target["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.event_type = function event_type(evt) {
  if (function() {
    var and__3746__auto__ = evt;
    if (and__3746__auto__) {
      return evt.domina$events$Event$event_type$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt);
  } else {
    var x__4402__auto__ = evt == null ? null : evt;
    return function() {
      var or__3758__auto__ = domina.events.event_type[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.events.event_type["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.raw_event = function raw_event(evt) {
  if (function() {
    var and__3746__auto__ = evt;
    if (and__3746__auto__) {
      return evt.domina$events$Event$raw_event$arity$1;
    } else {
      return and__3746__auto__;
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt);
  } else {
    var x__4402__auto__ = evt == null ? null : evt;
    return function() {
      var or__3758__auto__ = domina.events.raw_event[goog.typeOf(x__4402__auto__)];
      if (or__3758__auto__) {
        return or__3758__auto__;
      } else {
        var or__3758__auto____$1 = domina.events.raw_event["_"];
        if (or__3758__auto____$1) {
          return or__3758__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.root_element = window.document.documentElement;
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if (typeof domina.events.t6896 !== "undefined") {
      } else {
        domina.events.t6896 = function(evt, f, create_listener_function, meta6897) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta6897 = meta6897;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472;
        };
        domina.events.t6896.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var o__$1 = this;
          var temp__4124__auto__ = self__.evt[k];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var val = temp__4124__auto__;
            return val;
          } else {
            return self__.evt[cljs.core.name.call(null, k)];
          }
        };
        domina.events.t6896.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var o__$1 = this;
          var or__3758__auto__ = cljs.core._lookup.call(null, o__$1, k);
          if (cljs.core.truth_(or__3758__auto__)) {
            return or__3758__auto__;
          } else {
            return not_found;
          }
        };
        domina.events.t6896.prototype.domina$events$Event$ = true;
        domina.events.t6896.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.preventDefault();
        };
        domina.events.t6896.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.stopPropagation();
        };
        domina.events.t6896.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.target;
        };
        domina.events.t6896.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.currentTarget;
        };
        domina.events.t6896.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.type;
        };
        domina.events.t6896.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt;
        };
        domina.events.t6896.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6898) {
          var self__ = this;
          var _6898__$1 = this;
          return self__.meta6897;
        };
        domina.events.t6896.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6898, meta6897__$1) {
          var self__ = this;
          var _6898__$1 = this;
          return new domina.events.t6896(self__.evt, self__.f, self__.create_listener_function, meta6897__$1);
        };
        domina.events.t6896.cljs$lang$type = true;
        domina.events.t6896.cljs$lang$ctorStr = "domina.events/t6896";
        domina.events.t6896.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
          return cljs.core._write.call(null, writer__4346__auto__, "domina.events/t6896");
        };
        domina.events.__GT_t6896 = function __GT_t6896(evt__$1, f__$1, create_listener_function__$1, meta6897) {
          return new domina.events.t6896(evt__$1, f__$1, create_listener_function__$1, meta6897);
        };
      }
      return new domina.events.t6896(evt, f, create_listener_function, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 51, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 42, new cljs.core.Keyword(null, "column", "column", 2078222095), 8, new cljs.core.Keyword(null, "line", "line", 212345235), 28, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/veen/Projects/clojure/tic-tac-toe/target/base+system+user+dev/cljsbuild-compiler-0/domina/events.cljs"], 
      null));
    }());
    return true;
  };
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = cljs.core.name.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__4514__auto__ = function(f, t) {
      return function iter__6903(s__6904) {
        return new cljs.core.LazySeq(null, function(f, t) {
          return function() {
            var s__6904__$1 = s__6904;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__6904__$1);
              if (temp__4126__auto__) {
                var s__6904__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__6904__$2)) {
                  var c__4512__auto__ = cljs.core.chunk_first.call(null, s__6904__$2);
                  var size__4513__auto__ = cljs.core.count.call(null, c__4512__auto__);
                  var b__6906 = cljs.core.chunk_buffer.call(null, size__4513__auto__);
                  if (function() {
                    var i__6905 = 0;
                    while (true) {
                      if (i__6905 < size__4513__auto__) {
                        var node = cljs.core._nth.call(null, c__4512__auto__, i__6905);
                        cljs.core.chunk_append.call(null, b__6906, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                        var G__6907 = i__6905 + 1;
                        i__6905 = G__6907;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6906), iter__6903.call(null, cljs.core.chunk_rest.call(null, s__6904__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6906), null);
                  }
                } else {
                  var node = cljs.core.first.call(null, s__6904__$2);
                  return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__6903.call(null, cljs.core.rest.call(null, s__6904__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(f, t), null, null);
      };
    }(f, t);
    return iter__4514__auto__.call(null, domina.nodes.call(null, content));
  }());
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false);
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false);
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_;
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true);
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_;
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true);
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_;
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element);
  };
  var unlisten_BANG___1 = function(content) {
    var seq__6916 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__6917 = null;
    var count__6918 = 0;
    var i__6919 = 0;
    while (true) {
      if (i__6919 < count__6918) {
        var node = cljs.core._nth.call(null, chunk__6917, i__6919);
        goog.events.removeAll(node);
        var G__6924 = seq__6916;
        var G__6925 = chunk__6917;
        var G__6926 = count__6918;
        var G__6927 = i__6919 + 1;
        seq__6916 = G__6924;
        chunk__6917 = G__6925;
        count__6918 = G__6926;
        i__6919 = G__6927;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__6916);
        if (temp__4126__auto__) {
          var seq__6916__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6916__$1)) {
            var c__4545__auto__ = cljs.core.chunk_first.call(null, seq__6916__$1);
            var G__6928 = cljs.core.chunk_rest.call(null, seq__6916__$1);
            var G__6929 = c__4545__auto__;
            var G__6930 = cljs.core.count.call(null, c__4545__auto__);
            var G__6931 = 0;
            seq__6916 = G__6928;
            chunk__6917 = G__6929;
            count__6918 = G__6930;
            i__6919 = G__6931;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__6916__$1);
            goog.events.removeAll(node);
            var G__6932 = cljs.core.next.call(null, seq__6916__$1);
            var G__6933 = null;
            var G__6934 = 0;
            var G__6935 = 0;
            seq__6916 = G__6932;
            chunk__6917 = G__6933;
            count__6918 = G__6934;
            i__6919 = G__6935;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = cljs.core.name.call(null, type);
    var seq__6920 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__6921 = null;
    var count__6922 = 0;
    var i__6923 = 0;
    while (true) {
      if (i__6923 < count__6922) {
        var node = cljs.core._nth.call(null, chunk__6921, i__6923);
        goog.events.removeAll(node, type__$1);
        var G__6936 = seq__6920;
        var G__6937 = chunk__6921;
        var G__6938 = count__6922;
        var G__6939 = i__6923 + 1;
        seq__6920 = G__6936;
        chunk__6921 = G__6937;
        count__6922 = G__6938;
        i__6923 = G__6939;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__6920);
        if (temp__4126__auto__) {
          var seq__6920__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6920__$1)) {
            var c__4545__auto__ = cljs.core.chunk_first.call(null, seq__6920__$1);
            var G__6940 = cljs.core.chunk_rest.call(null, seq__6920__$1);
            var G__6941 = c__4545__auto__;
            var G__6942 = cljs.core.count.call(null, c__4545__auto__);
            var G__6943 = 0;
            seq__6920 = G__6940;
            chunk__6921 = G__6941;
            count__6922 = G__6942;
            i__6923 = G__6943;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__6920__$1);
            goog.events.removeAll(node, type__$1);
            var G__6944 = cljs.core.next.call(null, seq__6920__$1);
            var G__6945 = null;
            var G__6946 = 0;
            var G__6947 = 0;
            seq__6920 = G__6944;
            chunk__6921 = G__6945;
            count__6922 = G__6946;
            i__6923 = G__6947;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_;
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null));
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while (true) {
      var temp__4124__auto__ = n.parentNode;
      if (cljs.core.truth_(temp__4124__auto__)) {
        var parent = temp__4124__auto__;
        var G__6948 = parent;
        var G__6949 = cljs.core.cons.call(null, parent, so_far);
        n = G__6948;
        so_far = G__6949;
        continue;
      } else {
        return so_far;
      }
      break;
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes;
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  evt.target = domina.single_node.call(null, source);
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__6958_6966 = cljs.core.seq.call(null, ancestors);
  var chunk__6959_6967 = null;
  var count__6960_6968 = 0;
  var i__6961_6969 = 0;
  while (true) {
    if (i__6961_6969 < count__6960_6968) {
      var n_6970 = cljs.core._nth.call(null, chunk__6959_6967, i__6961_6969);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_6970;
        goog.events.fireListeners(n_6970, evt.type, true, evt);
      }
      var G__6971 = seq__6958_6966;
      var G__6972 = chunk__6959_6967;
      var G__6973 = count__6960_6968;
      var G__6974 = i__6961_6969 + 1;
      seq__6958_6966 = G__6971;
      chunk__6959_6967 = G__6972;
      count__6960_6968 = G__6973;
      i__6961_6969 = G__6974;
      continue;
    } else {
      var temp__4126__auto___6975 = cljs.core.seq.call(null, seq__6958_6966);
      if (temp__4126__auto___6975) {
        var seq__6958_6976__$1 = temp__4126__auto___6975;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6958_6976__$1)) {
          var c__4545__auto___6977 = cljs.core.chunk_first.call(null, seq__6958_6976__$1);
          var G__6978 = cljs.core.chunk_rest.call(null, seq__6958_6976__$1);
          var G__6979 = c__4545__auto___6977;
          var G__6980 = cljs.core.count.call(null, c__4545__auto___6977);
          var G__6981 = 0;
          seq__6958_6966 = G__6978;
          chunk__6959_6967 = G__6979;
          count__6960_6968 = G__6980;
          i__6961_6969 = G__6981;
          continue;
        } else {
          var n_6982 = cljs.core.first.call(null, seq__6958_6976__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_6982;
            goog.events.fireListeners(n_6982, evt.type, true, evt);
          }
          var G__6983 = cljs.core.next.call(null, seq__6958_6976__$1);
          var G__6984 = null;
          var G__6985 = 0;
          var G__6986 = 0;
          seq__6958_6966 = G__6983;
          chunk__6959_6967 = G__6984;
          count__6960_6968 = G__6985;
          i__6961_6969 = G__6986;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__6962_6987 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__6963_6988 = null;
  var count__6964_6989 = 0;
  var i__6965_6990 = 0;
  while (true) {
    if (i__6965_6990 < count__6964_6989) {
      var n_6991 = cljs.core._nth.call(null, chunk__6963_6988, i__6965_6990);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_6991;
        goog.events.fireListeners(n_6991, evt.type, false, evt);
      }
      var G__6992 = seq__6962_6987;
      var G__6993 = chunk__6963_6988;
      var G__6994 = count__6964_6989;
      var G__6995 = i__6965_6990 + 1;
      seq__6962_6987 = G__6992;
      chunk__6963_6988 = G__6993;
      count__6964_6989 = G__6994;
      i__6965_6990 = G__6995;
      continue;
    } else {
      var temp__4126__auto___6996 = cljs.core.seq.call(null, seq__6962_6987);
      if (temp__4126__auto___6996) {
        var seq__6962_6997__$1 = temp__4126__auto___6996;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6962_6997__$1)) {
          var c__4545__auto___6998 = cljs.core.chunk_first.call(null, seq__6962_6997__$1);
          var G__6999 = cljs.core.chunk_rest.call(null, seq__6962_6997__$1);
          var G__7000 = c__4545__auto___6998;
          var G__7001 = cljs.core.count.call(null, c__4545__auto___6998);
          var G__7002 = 0;
          seq__6962_6987 = G__6999;
          chunk__6963_6988 = G__7000;
          count__6964_6989 = G__7001;
          i__6965_6990 = G__7002;
          continue;
        } else {
          var n_7003 = cljs.core.first.call(null, seq__6962_6997__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_7003;
            goog.events.fireListeners(n_7003, evt.type, false, evt);
          }
          var G__7004 = cljs.core.next.call(null, seq__6962_6997__$1);
          var G__7005 = null;
          var G__7006 = 0;
          var G__7007 = 0;
          seq__6962_6987 = G__7004;
          chunk__6963_6988 = G__7005;
          count__6964_6989 = G__7006;
          i__6965_6990 = G__7007;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return evt.returnValue_;
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt);
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3746__auto__ = o.getParentEventTarget;
  if (cljs.core.truth_(and__3746__auto__)) {
    return o.dispatchEvent;
  } else {
    return and__3746__auto__;
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map);
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(cljs.core.name.call(null, type));
    var seq__7014_7020 = cljs.core.seq.call(null, evt_map);
    var chunk__7015_7021 = null;
    var count__7016_7022 = 0;
    var i__7017_7023 = 0;
    while (true) {
      if (i__7017_7023 < count__7016_7022) {
        var vec__7018_7024 = cljs.core._nth.call(null, chunk__7015_7021, i__7017_7023);
        var k_7025 = cljs.core.nth.call(null, vec__7018_7024, 0, null);
        var v_7026 = cljs.core.nth.call(null, vec__7018_7024, 1, null);
        evt[k_7025] = v_7026;
        var G__7027 = seq__7014_7020;
        var G__7028 = chunk__7015_7021;
        var G__7029 = count__7016_7022;
        var G__7030 = i__7017_7023 + 1;
        seq__7014_7020 = G__7027;
        chunk__7015_7021 = G__7028;
        count__7016_7022 = G__7029;
        i__7017_7023 = G__7030;
        continue;
      } else {
        var temp__4126__auto___7031 = cljs.core.seq.call(null, seq__7014_7020);
        if (temp__4126__auto___7031) {
          var seq__7014_7032__$1 = temp__4126__auto___7031;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7014_7032__$1)) {
            var c__4545__auto___7033 = cljs.core.chunk_first.call(null, seq__7014_7032__$1);
            var G__7034 = cljs.core.chunk_rest.call(null, seq__7014_7032__$1);
            var G__7035 = c__4545__auto___7033;
            var G__7036 = cljs.core.count.call(null, c__4545__auto___7033);
            var G__7037 = 0;
            seq__7014_7020 = G__7034;
            chunk__7015_7021 = G__7035;
            count__7016_7022 = G__7036;
            i__7017_7023 = G__7037;
            continue;
          } else {
            var vec__7019_7038 = cljs.core.first.call(null, seq__7014_7032__$1);
            var k_7039 = cljs.core.nth.call(null, vec__7019_7038, 0, null);
            var v_7040 = cljs.core.nth.call(null, vec__7019_7038, 1, null);
            evt[k_7039] = v_7040;
            var G__7041 = cljs.core.next.call(null, seq__7014_7032__$1);
            var G__7042 = null;
            var G__7043 = 0;
            var G__7044 = 0;
            seq__7014_7020 = G__7041;
            chunk__7015_7021 = G__7042;
            count__7016_7022 = G__7043;
            i__7017_7023 = G__7044;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt);
    } else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt);
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_;
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key);
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = cljs.core.name.call(null, type);
  return cljs.core.mapcat.call(null, function(type__$1) {
    return function(p1__7045_SHARP_) {
      return goog.events.getListeners(p1__7045_SHARP_, type__$1, false);
    };
  }(type__$1), domina.nodes.call(null, content));
};
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__3746__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3746__auto__)) {
      return doc.setProperty;
    } else {
      return and__3746__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      throw new Error("Could not find XPath support in this browser.");
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__5926 = i + 1;
        var G__5927 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__5926;
        acc = G__5927;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t5931 !== "undefined") {
    } else {
      domina.xpath.t5931 = function(expr, base, xpath, meta5932) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta5932 = meta5932;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t5931.prototype.domina$DomContent$ = true;
      domina.xpath.t5931.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
      };
      domina.xpath.t5931.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
      };
      domina.xpath.t5931.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5933) {
        var self__ = this;
        var _5933__$1 = this;
        return self__.meta5932;
      };
      domina.xpath.t5931.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5933, meta5932__$1) {
        var self__ = this;
        var _5933__$1 = this;
        return new domina.xpath.t5931(self__.expr, self__.base, self__.xpath, meta5932__$1);
      };
      domina.xpath.t5931.cljs$lang$type = true;
      domina.xpath.t5931.cljs$lang$ctorStr = "domina.xpath/t5931";
      domina.xpath.t5931.cljs$lang$ctorPrWriter = function(this__4345__auto__, writer__4346__auto__, opt__4347__auto__) {
        return cljs.core._write.call(null, writer__4346__auto__, "domina.xpath/t5931");
      };
      domina.xpath.__GT_t5931 = function __GT_t5931(expr__$1, base__$1, xpath__$1, meta5932) {
        return new domina.xpath.t5931(expr__$1, base__$1, xpath__$1, meta5932);
      };
    }
    return new domina.xpath.t5931(expr, base, xpath, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 79, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 59, new cljs.core.Keyword(null, "column", "column", 2078222095), 16, new cljs.core.Keyword(null, "line", "line", 212345235), 55, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/veen/Projects/clojure/tic-tac-toe/target/base+system+user+dev/cljsbuild-compiler-0/domina/xpath.cljs"], 
    null));
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("tic_tac_toe.core");
goog.require("cljs.core");
goog.require("domina.xpath");
goog.require("tic_tac_toe.game");
goog.require("hiccups.runtime");
goog.require("domina.events");
goog.require("domina");
cljs.core.enable_console_print_BANG_.call(null);
tic_tac_toe.core.picture_map = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "e", "e", 1381269198), "/empty.png", new cljs.core.Keyword(null, "x", "x", 2099068185), "/cross.png", new cljs.core.Keyword(null, "o", "o", -1350007228), "/nought.png"], null);
tic_tac_toe.core.game_state = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
tic_tac_toe.core.new_game_BANG_ = function new_game_BANG_() {
  return cljs.core.reset_BANG_.call(null, tic_tac_toe.core.game_state, tic_tac_toe.game.blank_board);
};
tic_tac_toe.core.update_dom = function update_dom(board) {
  var seq__6892 = cljs.core.seq.call(null, cljs.core.range.call(null, 9));
  var chunk__6893 = null;
  var count__6894 = 0;
  var i__6895 = 0;
  while (true) {
    if (i__6895 < count__6894) {
      var i = cljs.core._nth.call(null, chunk__6893, i__6895);
      var value_6896 = board.call(null, i);
      var node_6897 = domina.by_id.call(null, [cljs.core.str(i)].join(""));
      domina.set_attr_BANG_.call(null, node_6897, new cljs.core.Keyword(null, "src", "src", -1651076051), value_6896.call(null, tic_tac_toe.core.picture_map));
      domina.set_text_BANG_.call(null, domina.by_id.call(null, "game-state"), [cljs.core.str("Game state: "), cljs.core.str(tic_tac_toe.game.get_game_state.call(null, board))].join(""));
      var G__6898 = seq__6892;
      var G__6899 = chunk__6893;
      var G__6900 = count__6894;
      var G__6901 = i__6895 + 1;
      seq__6892 = G__6898;
      chunk__6893 = G__6899;
      count__6894 = G__6900;
      i__6895 = G__6901;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6892);
      if (temp__4126__auto__) {
        var seq__6892__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6892__$1)) {
          var c__4545__auto__ = cljs.core.chunk_first.call(null, seq__6892__$1);
          var G__6902 = cljs.core.chunk_rest.call(null, seq__6892__$1);
          var G__6903 = c__4545__auto__;
          var G__6904 = cljs.core.count.call(null, c__4545__auto__);
          var G__6905 = 0;
          seq__6892 = G__6902;
          chunk__6893 = G__6903;
          count__6894 = G__6904;
          i__6895 = G__6905;
          continue;
        } else {
          var i = cljs.core.first.call(null, seq__6892__$1);
          var value_6906 = board.call(null, i);
          var node_6907 = domina.by_id.call(null, [cljs.core.str(i)].join(""));
          domina.set_attr_BANG_.call(null, node_6907, new cljs.core.Keyword(null, "src", "src", -1651076051), value_6906.call(null, tic_tac_toe.core.picture_map));
          domina.set_text_BANG_.call(null, domina.by_id.call(null, "game-state"), [cljs.core.str("Game state: "), cljs.core.str(tic_tac_toe.game.get_game_state.call(null, board))].join(""));
          var G__6908 = cljs.core.next.call(null, seq__6892__$1);
          var G__6909 = null;
          var G__6910 = 0;
          var G__6911 = 0;
          seq__6892 = G__6908;
          chunk__6893 = G__6909;
          count__6894 = G__6910;
          i__6895 = G__6911;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
tic_tac_toe.core.make_move = function make_move(board, pos) {
  var piece = new cljs.core.Keyword(null, "x", "x", 2099068185);
  var players_turn = tic_tac_toe.game.place_piece.call(null, board, piece, pos);
  var state = tic_tac_toe.game.get_game_state.call(null, players_turn);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 2099068185), state) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "draw", "draw", 1358331674), state)) {
    return players_turn;
  } else {
    var computer_turn = tic_tac_toe.game.place_piece.call(null, players_turn, new cljs.core.Keyword(null, "o", "o", -1350007228), cljs.core.first.call(null, tic_tac_toe.game.choose_move.call(null, players_turn, new cljs.core.Keyword(null, "o", "o", -1350007228))));
    return computer_turn;
  }
};
tic_tac_toe.core.init = function init() {
  tic_tac_toe.core.new_game_BANG_.call(null);
  domina.append_BANG_.call(null, domina.by_id.call(null, "board"), [cljs.core.str("\x3ccenter"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3ctable"), cljs.core.str(' border\x3d"1px solid black"'), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, function() {
    var iter__4514__auto__ = function iter__6940(s__6941) {
      return new cljs.core.LazySeq(null, function() {
        var s__6941__$1 = s__6941;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__6941__$1);
          if (temp__4126__auto__) {
            var s__6941__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__6941__$2)) {
              var c__4512__auto__ = cljs.core.chunk_first.call(null, s__6941__$2);
              var size__4513__auto__ = cljs.core.count.call(null, c__4512__auto__);
              var b__6943 = cljs.core.chunk_buffer.call(null, size__4513__auto__);
              if (function() {
                var i__6942 = 0;
                while (true) {
                  if (i__6942 < size__4513__auto__) {
                    var row_number = cljs.core._nth.call(null, c__4512__auto__, i__6942);
                    cljs.core.chunk_append.call(null, b__6943, [cljs.core.str("\x3ctr"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, function() {
                      var iter__4514__auto__ = function(i__6942, row_number, c__4512__auto__, size__4513__auto__, b__6943, s__6941__$2, temp__4126__auto__) {
                        return function iter__6952(s__6953) {
                          return new cljs.core.LazySeq(null, function(i__6942, row_number, c__4512__auto__, size__4513__auto__, b__6943, s__6941__$2, temp__4126__auto__) {
                            return function() {
                              var s__6953__$1 = s__6953;
                              while (true) {
                                var temp__4126__auto____$1 = cljs.core.seq.call(null, s__6953__$1);
                                if (temp__4126__auto____$1) {
                                  var s__6953__$2 = temp__4126__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__6953__$2)) {
                                    var c__4512__auto____$1 = cljs.core.chunk_first.call(null, s__6953__$2);
                                    var size__4513__auto____$1 = cljs.core.count.call(null, c__4512__auto____$1);
                                    var b__6955 = cljs.core.chunk_buffer.call(null, size__4513__auto____$1);
                                    if (function() {
                                      var i__6954 = 0;
                                      while (true) {
                                        if (i__6954 < size__4513__auto____$1) {
                                          var column_number = cljs.core._nth.call(null, c__4512__auto____$1, i__6954);
                                          cljs.core.chunk_append.call(null, b__6955, [cljs.core.str("\x3ctd"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3cdiv"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3c"), cljs.core.str("img"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", -1651076051), (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(tic_tac_toe.core.picture_map), 
                                          new cljs.core.Keyword(null, "id", "id", -1388402092), [cljs.core.str(3 * row_number + column_number)].join(""), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str(" /\x3e"), cljs.core.str("\x3c/div\x3e"), cljs.core.str("\x3c/td\x3e")].join(""));
                                          var G__6964 = i__6954 + 1;
                                          i__6954 = G__6964;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6955), iter__6952.call(null, cljs.core.chunk_rest.call(null, s__6953__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6955), null);
                                    }
                                  } else {
                                    var column_number = cljs.core.first.call(null, s__6953__$2);
                                    return cljs.core.cons.call(null, [cljs.core.str("\x3ctd"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3cdiv"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3c"), cljs.core.str("img"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", -1651076051), (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(tic_tac_toe.core.picture_map), 
                                    new cljs.core.Keyword(null, "id", "id", -1388402092), [cljs.core.str(3 * row_number + column_number)].join(""), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str(" /\x3e"), cljs.core.str("\x3c/div\x3e"), cljs.core.str("\x3c/td\x3e")].join(""), iter__6952.call(null, cljs.core.rest.call(null, s__6953__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(i__6942, row_number, c__4512__auto__, size__4513__auto__, b__6943, s__6941__$2, temp__4126__auto__), null, null);
                        };
                      }(i__6942, row_number, c__4512__auto__, size__4513__auto__, b__6943, s__6941__$2, temp__4126__auto__);
                      return iter__4514__auto__.call(null, cljs.core.range.call(null, 3));
                    }())), cljs.core.str("\x3c/tr\x3e")].join(""));
                    var G__6965 = i__6942 + 1;
                    i__6942 = G__6965;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6943), iter__6940.call(null, cljs.core.chunk_rest.call(null, s__6941__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6943), null);
              }
            } else {
              var row_number = cljs.core.first.call(null, s__6941__$2);
              return cljs.core.cons.call(null, [cljs.core.str("\x3ctr"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, function() {
                var iter__4514__auto__ = function(row_number, s__6941__$2, temp__4126__auto__) {
                  return function iter__6956(s__6957) {
                    return new cljs.core.LazySeq(null, function(row_number, s__6941__$2, temp__4126__auto__) {
                      return function() {
                        var s__6957__$1 = s__6957;
                        while (true) {
                          var temp__4126__auto____$1 = cljs.core.seq.call(null, s__6957__$1);
                          if (temp__4126__auto____$1) {
                            var s__6957__$2 = temp__4126__auto____$1;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__6957__$2)) {
                              var c__4512__auto__ = cljs.core.chunk_first.call(null, s__6957__$2);
                              var size__4513__auto__ = cljs.core.count.call(null, c__4512__auto__);
                              var b__6959 = cljs.core.chunk_buffer.call(null, size__4513__auto__);
                              if (function() {
                                var i__6958 = 0;
                                while (true) {
                                  if (i__6958 < size__4513__auto__) {
                                    var column_number = cljs.core._nth.call(null, c__4512__auto__, i__6958);
                                    cljs.core.chunk_append.call(null, b__6959, [cljs.core.str("\x3ctd"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3cdiv"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3c"), cljs.core.str("img"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", -1651076051), (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(tic_tac_toe.core.picture_map), 
                                    new cljs.core.Keyword(null, "id", "id", -1388402092), [cljs.core.str(3 * row_number + column_number)].join(""), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str(" /\x3e"), cljs.core.str("\x3c/div\x3e"), cljs.core.str("\x3c/td\x3e")].join(""));
                                    var G__6966 = i__6958 + 1;
                                    i__6958 = G__6966;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6959), iter__6956.call(null, cljs.core.chunk_rest.call(null, s__6957__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6959), null);
                              }
                            } else {
                              var column_number = cljs.core.first.call(null, s__6957__$2);
                              return cljs.core.cons.call(null, [cljs.core.str("\x3ctd"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3cdiv"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str("\x3c"), cljs.core.str("img"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", -1651076051), (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(tic_tac_toe.core.picture_map), 
                              new cljs.core.Keyword(null, "id", "id", -1388402092), [cljs.core.str(3 * row_number + column_number)].join(""), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str(" /\x3e"), cljs.core.str("\x3c/div\x3e"), cljs.core.str("\x3c/td\x3e")].join(""), iter__6956.call(null, cljs.core.rest.call(null, s__6957__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(row_number, s__6941__$2, temp__4126__auto__), null, null);
                  };
                }(row_number, s__6941__$2, temp__4126__auto__);
                return iter__4514__auto__.call(null, cljs.core.range.call(null, 3));
              }())), cljs.core.str("\x3c/tr\x3e")].join(""), iter__6940.call(null, cljs.core.rest.call(null, s__6941__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4514__auto__.call(null, cljs.core.range.call(null, 3));
  }())), cljs.core.str("\x3c/table\x3e"), cljs.core.str('\x3cbutton id\x3d"button"\x3enew game\x3c/button\x3e'), cljs.core.str("\x3ch1"), cljs.core.str(' id\x3d"game-state"'), cljs.core.str("\x3e"), cljs.core.str("Game state: "), cljs.core.str(hiccups.runtime.render_html.call(null, tic_tac_toe.game.get_game_state.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state)))), cljs.core.str("\x3c/h1\x3e"), cljs.core.str("\x3c/center\x3e")].join(""));
  var seq__6960_6967 = cljs.core.seq.call(null, cljs.core.range.call(null, 9));
  var chunk__6961_6968 = null;
  var count__6962_6969 = 0;
  var i__6963_6970 = 0;
  while (true) {
    if (i__6963_6970 < count__6962_6969) {
      var i_6971 = cljs.core._nth.call(null, chunk__6961_6968, i__6963_6970);
      domina.events.listen_BANG_.call(null, domina.by_id.call(null, [cljs.core.str(i_6971)].join("")), new cljs.core.Keyword(null, "click", "click", 1912301393), function(seq__6960_6967, chunk__6961_6968, count__6962_6969, i__6963_6970, i_6971) {
        return function(evt) {
          cljs.core.println.call(null, "square clicked!", i_6971);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "e", "e", 1381269198), cljs.core.get.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state), i_6971)) && cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ongoing", "ongoing", -30673877), tic_tac_toe.game.get_game_state.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state)))) {
            cljs.core.swap_BANG_.call(null, tic_tac_toe.core.game_state, tic_tac_toe.core.make_move, i_6971);
            cljs.core.println.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state), tic_tac_toe.game.get_game_state.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state)));
            return tic_tac_toe.core.update_dom.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state));
          } else {
            return null;
          }
        };
      }(seq__6960_6967, chunk__6961_6968, count__6962_6969, i__6963_6970, i_6971));
      var G__6972 = seq__6960_6967;
      var G__6973 = chunk__6961_6968;
      var G__6974 = count__6962_6969;
      var G__6975 = i__6963_6970 + 1;
      seq__6960_6967 = G__6972;
      chunk__6961_6968 = G__6973;
      count__6962_6969 = G__6974;
      i__6963_6970 = G__6975;
      continue;
    } else {
      var temp__4126__auto___6976 = cljs.core.seq.call(null, seq__6960_6967);
      if (temp__4126__auto___6976) {
        var seq__6960_6977__$1 = temp__4126__auto___6976;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6960_6977__$1)) {
          var c__4545__auto___6978 = cljs.core.chunk_first.call(null, seq__6960_6977__$1);
          var G__6979 = cljs.core.chunk_rest.call(null, seq__6960_6977__$1);
          var G__6980 = c__4545__auto___6978;
          var G__6981 = cljs.core.count.call(null, c__4545__auto___6978);
          var G__6982 = 0;
          seq__6960_6967 = G__6979;
          chunk__6961_6968 = G__6980;
          count__6962_6969 = G__6981;
          i__6963_6970 = G__6982;
          continue;
        } else {
          var i_6983 = cljs.core.first.call(null, seq__6960_6977__$1);
          domina.events.listen_BANG_.call(null, domina.by_id.call(null, [cljs.core.str(i_6983)].join("")), new cljs.core.Keyword(null, "click", "click", 1912301393), function(seq__6960_6967, chunk__6961_6968, count__6962_6969, i__6963_6970, i_6983, seq__6960_6977__$1, temp__4126__auto___6976) {
            return function(evt) {
              cljs.core.println.call(null, "square clicked!", i_6983);
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "e", "e", 1381269198), cljs.core.get.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state), i_6983)) && cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ongoing", "ongoing", -30673877), tic_tac_toe.game.get_game_state.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state)))) {
                cljs.core.swap_BANG_.call(null, tic_tac_toe.core.game_state, tic_tac_toe.core.make_move, i_6983);
                cljs.core.println.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state), tic_tac_toe.game.get_game_state.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state)));
                return tic_tac_toe.core.update_dom.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state));
              } else {
                return null;
              }
            };
          }(seq__6960_6967, chunk__6961_6968, count__6962_6969, i__6963_6970, i_6983, seq__6960_6977__$1, temp__4126__auto___6976));
          var G__6984 = cljs.core.next.call(null, seq__6960_6977__$1);
          var G__6985 = null;
          var G__6986 = 0;
          var G__6987 = 0;
          seq__6960_6967 = G__6984;
          chunk__6961_6968 = G__6985;
          count__6962_6969 = G__6986;
          i__6963_6970 = G__6987;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "button"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(evt) {
    cljs.core.println.call(null, "now the real button has been clicked");
    tic_tac_toe.core.new_game_BANG_.call(null);
    return tic_tac_toe.core.update_dom.call(null, cljs.core.deref.call(null, tic_tac_toe.core.game_state));
  });
};
window.onload = tic_tac_toe.core.init;
